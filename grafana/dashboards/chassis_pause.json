{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": "$data_source",
        "enable": false,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "showIn": 0,
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "gnetId": null,
  "graphTooltip": 0,
  "id": 2,
  "iteration": 1596068161674,
  "links": [],
  "panels": [
    {
      "datasource": "$data_source",
      "fieldConfig": {
        "defaults": {
          "custom": {}
        },
        "overrides": []
      },
      "gridPos": {
        "h": 2,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 128,
      "options": {
        "content": "<table style=\"margin: 0px; padding: 0px; border: 1px; border-collapse: collapse;\" width=\"100%\">\n<tbody>\n<tr style=\"margin: 0px; padding: 0px;\">\n<td style=\"width: 15%; margin: 0px; padding: 0px; border: none;\" valign=\"middle\"><img id='your_logo' style=\"display: block; margin-left: auto; margin-right: auto;\" src='/public/img/utm/cisco_logo.png' width=\"120\" />\n</td>\n<td style=\"width: 70%; margin: 0px; padding: 0px; border: none;\">\n<h2 style=\"text-align: center; margin: 2px;\"><span style=\"color: #0085FC;\"><strong>UTM - UCS Traffic Monitoring</strong></span></h2>\n</td>\n<td style=\"width: 15%; margin: 0px; border: none;\" valign=\"middle\"><img id='cisco_logo' style=\"display: block; margin-left: auto; margin-right: auto;\" src='/public/img/utm/your_logo.png' alt=\"\" width=\"120\"/>\n</td>\n</tr>\n</tbody>\n</table>",
        "mode": "html"
      },
      "pluginVersion": "7.1.0",
      "targets": [
        {
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "orderByTime": "ASC",
          "policy": "default",
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": []
        }
      ],
      "timeFrom": null,
      "timeShift": null,
      "title": "",
      "transparent": true,
      "type": "text"
    },
    {
      "datasource": "$data_source",
      "fieldConfig": {
        "defaults": {
          "custom": {}
        },
        "overrides": []
      },
      "flowchartsData": {
        "flowcharts": [
          {
            "allowDrawio": false,
            "bgColor": null,
            "center": true,
            "csv": "## See more information for the syntax at https://drawio-app.com/import-from-csv-to-drawio/\n##\n## Example CSV. Use ## for comments and # for configuration.\n## The following names are reserved and should not be used (or ignored):\n## id, tooltip, placeholder(s), link and label (see below)\n##\n#\n## Node label with placeholders and HTML.\n## Default is '%name_of_first_column%'.\n#\n# label: %name%<br><i style=\"color:gray;\">%position%</i><br><a href=\"mailto:%email%\">Email</a>\n#\n## Node style (placeholders are replaced once).\n## Default is the current style for nodes.\n#\n# style: label;image=%image%;whiteSpace=wrap;html=1;rounded=1;fillColor=%fill%;strokeColor=%stroke%;\n#\n## Parent style for nodes with child nodes (placeholders are replaced once).\n#\n# parentstyle: swimlane;whiteSpace=wrap;html=1;childLayout=stackLayout;horizontal=1;horizontalStack=0;resizeParent=1;resizeLast=0;collapsible=1;\n#\n## Optional column name that contains a reference to a named style in styles.\n## Default is the current style for nodes.\n#\n# stylename: -\n#\n## JSON for named styles of the form {\"name\": \"style\", \"name\": \"style\"} where style is a cell style with\n## placeholders that are replaced once.\n#\n# styles: -\n#\n## Optional column name that contains a reference to a named label in labels.\n## Default is the current label.\n#\n# labelname: -\n#\n## JSON for named labels of the form {\"name\": \"label\", \"name\": \"label\"} where label is a cell label with\n## placeholders.\n#\n# labels: -\n#\n## Uses the given column name as the identity for cells (updates existing cells).\n## Default is no identity (empty value or -).\n#\n# identity: -\n#\n## Uses the given column name as the parent reference for cells. Default is no parent (empty or -).\n## The identity above is used for resolving the reference so it must be specified.\n#\n# parent: -\n#\n## Adds a prefix to the identity of cells to make sure they do not collide with existing cells (whose\n## IDs are numbers from 0..n, sometimes with a GUID prefix in the context of realtime collaboration).\n## Default is csvimport-.\n#\n# namespace: csvimport-\n#\n## Connections between rows (\"from\": source colum, \"to\": target column).\n## Label, style and invert are optional. Defaults are '', current style and false.\n## If placeholders are used in the style, they are replaced with data from the source.\n## An optional placeholders can be set to target to use data from the target instead.\n## In addition to label, an optional fromlabel and tolabel can be used to name the column\n## that contains the text for the label in the edges source or target (invert ignored).\n## The label is concatenated in the form fromlabel + label + tolabel if all are defined.\n## The target column may contain a comma-separated list of values.\n## Multiple connect entries are allowed.\n#\n# connect: {\"from\": \"manager\", \"to\": \"name\", \"invert\": true, \"label\": \"manages\", \\\n#          \"style\": \"curved=1;endArrow=blockThin;endFill=1;fontSize=11;\"}\n# connect: {\"from\": \"refs\", \"to\": \"id\", \"style\": \"curved=1;fontSize=11;\"}\n#\n## Node x-coordinate. Possible value is a column name. Default is empty. Layouts will\n## override this value.\n#\n# left: \n#\n## Node y-coordinate. Possible value is a column name. Default is empty. Layouts will\n## override this value.\n#\n# top: \n#\n## Node width. Possible value is a number (in px), auto or an @ sign followed by a column\n## name that contains the value for the width. Default is auto.\n#\n# width: auto\n#\n## Node height. Possible value is a number (in px), auto or an @ sign followed by a column\n## name that contains the value for the height. Default is auto.\n#\n# height: auto\n#\n## Padding for autosize. Default is 0.\n#\n# padding: -12\n#\n## Comma-separated list of ignored columns for metadata. (These can be\n## used for connections and styles but will not be added as metadata.)\n#\n# ignore: id,image,fill,stroke,refs,manager\n#\n## Column to be renamed to link attribute (used as link).\n#\n# link: url\n#\n## Spacing between nodes. Default is 40.\n#\n# nodespacing: 40\n#\n## Spacing between levels of hierarchical layouts. Default is 100.\n#\n# levelspacing: 100\n#\n## Spacing between parallel edges. Default is 40. Use 0 to disable.\n#\n# edgespacing: 40\n#\n## Name or JSON of layout. Possible values are auto, none, verticaltree, horizontaltree,\n## verticalflow, horizontalflow, organic, circle or a JSON string as used in Layout, Apply.\n## Default is auto.\n#\n# layout: auto\n#\n## ---- CSV below this line. First line are column names. ----\nname,position,id,location,manager,email,fill,stroke,refs,url,image\nEvan Miller,CFO,emi,Office 1,,me@example.com,#dae8fc,#6c8ebf,,https://www.draw.io,https://cdn3.iconfinder.com/data/icons/user-avatars-1/512/users-9-2-128.png\nEdward Morrison,Brand Manager,emo,Office 2,Evan Miller,me@example.com,#d5e8d4,#82b366,,https://www.draw.io,https://cdn3.iconfinder.com/data/icons/user-avatars-1/512/users-10-3-128.png\nRon Donovan,System Admin,rdo,Office 3,Evan Miller,me@example.com,#d5e8d4,#82b366,\"emo,tva\",https://www.draw.io,https://cdn3.iconfinder.com/data/icons/user-avatars-1/512/users-2-128.png\nTessa Valet,HR Director,tva,Office 4,Evan Miller,me@example.com,#d5e8d4,#82b366,,https://www.draw.io,https://cdn3.iconfinder.com/data/icons/user-avatars-1/512/users-3-128.png\n",
            "download": false,
            "editorTheme": "dark",
            "editorUrl": "https://www.draw.io",
            "enableAnim": true,
            "grid": false,
            "lock": true,
            "name": "Main",
            "scale": true,
            "tooltip": true,
            "type": "xml",
            "url": "http://<YourUrl>/<Your XML/drawio file/api>",
            "xml": "<mxGraphModel>\n    <root>\n        <mxCell id=\"U3Yb-M3iW0U3TkC6f_VT-0\"/>\n        <mxCell id=\"U3Yb-M3iW0U3TkC6f_VT-1\" parent=\"U3Yb-M3iW0U3TkC6f_VT-0\"/>\n        <mxCell id=\"qjMXR-8qFvfJkbGcyA1T-6\" value=\"\" style=\"rounded=1;whiteSpace=wrap;html=1;spacing=0;strokeColor=none;fontColor=#FFFFFF;fontSize=13;arcSize=50;fillColor=#CCFF99;\" parent=\"U3Yb-M3iW0U3TkC6f_VT-1\" vertex=\"1\">\n            <mxGeometry y=\"558\" width=\"1220\" height=\"20\" as=\"geometry\"/>\n        </mxCell>\n        <mxCell id=\"locations_button\" value=\"Locations\" style=\"rounded=1;whiteSpace=wrap;html=1;spacing=0;strokeColor=none;fontColor=#FFFFFF;fontSize=10;arcSize=50;fillColor=#676767;\" parent=\"U3Yb-M3iW0U3TkC6f_VT-1\" vertex=\"1\">\n            <mxGeometry x=\"40\" y=\"560\" width=\"140\" height=\"16\" as=\"geometry\"/>\n        </mxCell>\n        <mxCell id=\"qjMXR-8qFvfJkbGcyA1T-2\" value=\"UCS Domain Overview\" style=\"rounded=1;whiteSpace=wrap;html=1;spacing=0;strokeColor=none;fontColor=#FFFFFF;fontSize=10;arcSize=50;fillColor=#676767;\" parent=\"U3Yb-M3iW0U3TkC6f_VT-1\" vertex=\"1\">\n            <mxGeometry x=\"240\" y=\"560\" width=\"140\" height=\"16\" as=\"geometry\"/>\n        </mxCell>\n        <mxCell id=\"qjMXR-8qFvfJkbGcyA1T-3\" value=\"UCS Domain Traffic\" style=\"rounded=1;whiteSpace=wrap;html=1;spacing=0;strokeColor=none;fontColor=#FFFFFF;fontSize=10;arcSize=50;fillColor=#676767;\" parent=\"U3Yb-M3iW0U3TkC6f_VT-1\" vertex=\"1\">\n            <mxGeometry x=\"440\" y=\"560\" width=\"140\" height=\"16\" as=\"geometry\"/>\n        </mxCell>\n        <mxCell id=\"qjMXR-8qFvfJkbGcyA1T-4\" value=\"UCS Chassis Traffic\" style=\"rounded=1;whiteSpace=wrap;html=1;spacing=0;strokeColor=none;fontColor=#FFFFFF;fontSize=10;arcSize=50;fillColor=#676767;\" parent=\"U3Yb-M3iW0U3TkC6f_VT-1\" vertex=\"1\">\n            <mxGeometry x=\"640\" y=\"560\" width=\"140\" height=\"16\" as=\"geometry\"/>\n        </mxCell>\n        <mxCell id=\"qjMXR-8qFvfJkbGcyA1T-5\" value=\"Server Traffic\" style=\"rounded=1;whiteSpace=wrap;html=1;spacing=0;strokeColor=none;fontColor=#FFFFFF;fontSize=10;arcSize=50;fillColor=#676767;\" parent=\"U3Yb-M3iW0U3TkC6f_VT-1\" vertex=\"1\">\n            <mxGeometry x=\"840\" y=\"560\" width=\"140\" height=\"16\" as=\"geometry\"/>\n        </mxCell>\n        <mxCell id=\"locations\" value=\"\" style=\"rounded=1;whiteSpace=wrap;html=1;spacing=0;strokeColor=none;fontColor=#FFFFFF;fontSize=10;arcSize=50;fillColor=none;\" parent=\"U3Yb-M3iW0U3TkC6f_VT-1\" vertex=\"1\">\n            <mxGeometry x=\"30\" y=\"558\" width=\"160\" height=\"20\" as=\"geometry\"/>\n        </mxCell>\n        <UserObject label=\"\" link=\"/d/Inte2EIWk/ucs-domain-overview\" id=\"domain_overview\">\n            <mxCell style=\"rounded=1;whiteSpace=wrap;html=1;spacing=0;strokeColor=none;fontColor=#FFFFFF;fontSize=10;arcSize=50;fillColor=none;\" parent=\"U3Yb-M3iW0U3TkC6f_VT-1\" vertex=\"1\">\n                <mxGeometry x=\"230\" y=\"558\" width=\"160\" height=\"20\" as=\"geometry\"/>\n            </mxCell>\n        </UserObject>\n        <UserObject label=\"\" link=\"/d/W7LSukHWz/ucs-domain-traffic\" id=\"domain_traffic\">\n            <mxCell style=\"rounded=1;whiteSpace=wrap;html=1;spacing=0;strokeColor=none;fontColor=#FFFFFF;fontSize=10;arcSize=50;fillColor=none;\" parent=\"U3Yb-M3iW0U3TkC6f_VT-1\" vertex=\"1\">\n                <mxGeometry x=\"430\" y=\"558\" width=\"160\" height=\"20\" as=\"geometry\"/>\n            </mxCell>\n        </UserObject>\n        <UserObject label=\"\" link=\"/d/KOM8ZHNWz/ucs-chassis-traffic\" id=\"chassis\">\n            <mxCell style=\"rounded=1;whiteSpace=wrap;html=1;spacing=0;strokeColor=none;fontColor=#FFFFFF;fontSize=10;arcSize=50;fillColor=none;\" parent=\"U3Yb-M3iW0U3TkC6f_VT-1\" vertex=\"1\">\n                <mxGeometry x=\"630\" y=\"558\" width=\"160\" height=\"20\" as=\"geometry\"/>\n            </mxCell>\n        </UserObject>\n        <UserObject label=\"\" link=\"/d/Z0M_N1vWz/service-profile-stats\" id=\"servers\">\n            <mxCell style=\"rounded=1;whiteSpace=wrap;html=1;spacing=0;strokeColor=none;fontColor=#FFFFFF;fontSize=10;arcSize=50;fillColor=none;\" parent=\"U3Yb-M3iW0U3TkC6f_VT-1\" vertex=\"1\">\n                <mxGeometry x=\"830\" y=\"558\" width=\"160\" height=\"20\" as=\"geometry\"/>\n            </mxCell>\n        </UserObject>\n        <mxCell id=\"3TAq4FZGmTNtiptqA514-0\" value=\"Ingress Traffic Congestion\" style=\"rounded=1;whiteSpace=wrap;html=1;spacing=0;strokeColor=none;fontColor=#FFFFFF;fontSize=10;arcSize=50;fillColor=#676767;\" parent=\"U3Yb-M3iW0U3TkC6f_VT-1\" vertex=\"1\">\n            <mxGeometry x=\"1040\" y=\"560\" width=\"140\" height=\"16\" as=\"geometry\"/>\n        </mxCell>\n        <mxCell id=\"ingress_congestion\" value=\"\" style=\"rounded=1;whiteSpace=wrap;html=1;spacing=0;strokeColor=none;fontColor=#FFFFFF;fontSize=10;arcSize=50;fillColor=none;\" parent=\"U3Yb-M3iW0U3TkC6f_VT-1\" vertex=\"1\">\n            <mxGeometry x=\"1030\" y=\"558\" width=\"160\" height=\"20\" as=\"geometry\"/>\n        </mxCell>\n    </root>\n</mxGraphModel>",
            "zoom": "100%"
          }
        ]
      },
      "format": "short",
      "graphId": "flowchart_136",
      "gridPos": {
        "h": 2,
        "w": 20,
        "x": 0,
        "y": 2
      },
      "id": 136,
      "newFlag": false,
      "pluginVersion": "7.1.0",
      "rulesData": {
        "rulesData": [
          {
            "aggregation": "current",
            "alias": "Locations",
            "colors": [
              "rgba(50, 172, 45, 0.97)"
            ],
            "column": "Time",
            "dateFormat": "YYYY-MM-DD HH:mm:ss",
            "decimals": 2,
            "eventData": [],
            "eventProp": "id",
            "eventRegEx": false,
            "gradient": false,
            "hidden": false,
            "invert": false,
            "linkData": [
              {
                "hidden": false,
                "linkOn": "a",
                "linkParams": false,
                "linkUrl": "/d/ri2OFp4Wz/locations",
                "pattern": "locations"
              }
            ],
            "linkProp": "id",
            "linkRegEx": true,
            "mappingType": 1,
            "metricType": "serie",
            "order": 1,
            "overlayIcon": false,
            "pattern": "FIEnvStats.last",
            "rangeData": [],
            "reduce": true,
            "refId": "A",
            "sanitize": false,
            "shapeData": [],
            "shapeProp": "id",
            "shapeRegEx": true,
            "stringThresholds": [],
            "textData": [],
            "textProp": "id",
            "textRegEx": true,
            "thresholds": [],
            "tooltip": false,
            "tooltipColors": false,
            "tooltipLabel": "",
            "tooltipOn": "a",
            "tpDirection": "v",
            "tpGraph": false,
            "tpGraphHigh": null,
            "tpGraphLow": null,
            "tpGraphScale": "linear",
            "tpGraphSize": "100%",
            "tpGraphType": "line",
            "type": "number",
            "unit": "short",
            "valueData": []
          },
          {
            "aggregation": "current",
            "alias": "domain_overview",
            "colors": [
              "rgba(50, 172, 45, 0.97)"
            ],
            "column": "Time",
            "dateFormat": "YYYY-MM-DD HH:mm:ss",
            "decimals": 2,
            "eventData": [],
            "eventProp": "id",
            "eventRegEx": false,
            "gradient": false,
            "hidden": false,
            "invert": false,
            "linkData": [
              {
                "hidden": false,
                "linkOn": "a",
                "linkParams": false,
                "linkUrl": "/d/Inte2EIWk/ucs-domain-overview",
                "pattern": "domain_overview"
              }
            ],
            "linkProp": "id",
            "linkRegEx": true,
            "mappingType": 1,
            "metricType": "serie",
            "order": 2,
            "overlayIcon": false,
            "pattern": "FIEnvStats.last",
            "rangeData": [],
            "reduce": true,
            "refId": "A",
            "sanitize": false,
            "shapeData": [],
            "shapeProp": "id",
            "shapeRegEx": true,
            "stringThresholds": [],
            "textData": [],
            "textProp": "id",
            "textRegEx": true,
            "thresholds": [],
            "tooltip": false,
            "tooltipColors": false,
            "tooltipLabel": "",
            "tooltipOn": "a",
            "tpDirection": "v",
            "tpGraph": false,
            "tpGraphHigh": null,
            "tpGraphLow": null,
            "tpGraphScale": "linear",
            "tpGraphSize": "100%",
            "tpGraphType": "line",
            "type": "number",
            "unit": "short",
            "valueData": []
          },
          {
            "aggregation": "current",
            "alias": "domain_traffic",
            "colors": [
              "rgba(50, 172, 45, 0.97)"
            ],
            "column": "Time",
            "dateFormat": "YYYY-MM-DD HH:mm:ss",
            "decimals": 2,
            "eventData": [],
            "eventProp": "id",
            "eventRegEx": false,
            "gradient": false,
            "hidden": false,
            "invert": false,
            "linkData": [
              {
                "hidden": false,
                "linkOn": "a",
                "linkParams": false,
                "linkUrl": "/d/W7LSukHWz/ucs-domain-traffic",
                "pattern": "domain_traffic"
              }
            ],
            "linkProp": "id",
            "linkRegEx": true,
            "mappingType": 1,
            "metricType": "serie",
            "order": 3,
            "overlayIcon": false,
            "pattern": "FIEnvStats.last",
            "rangeData": [],
            "reduce": true,
            "refId": "A",
            "sanitize": false,
            "shapeData": [],
            "shapeProp": "id",
            "shapeRegEx": true,
            "stringThresholds": [],
            "textData": [],
            "textProp": "id",
            "textRegEx": true,
            "thresholds": [],
            "tooltip": false,
            "tooltipColors": false,
            "tooltipLabel": "",
            "tooltipOn": "a",
            "tpDirection": "v",
            "tpGraph": false,
            "tpGraphHigh": null,
            "tpGraphLow": null,
            "tpGraphScale": "linear",
            "tpGraphSize": "100%",
            "tpGraphType": "line",
            "type": "number",
            "unit": "short",
            "valueData": []
          },
          {
            "aggregation": "current",
            "alias": "chassis",
            "colors": [
              "rgba(50, 172, 45, 0.97)"
            ],
            "column": "Time",
            "dateFormat": "YYYY-MM-DD HH:mm:ss",
            "decimals": 2,
            "eventData": [],
            "eventProp": "id",
            "eventRegEx": false,
            "gradient": false,
            "hidden": false,
            "invert": false,
            "linkData": [
              {
                "hidden": false,
                "linkOn": "a",
                "linkParams": false,
                "linkUrl": "/d/KOM8ZHNWz/ucs-chassis-traffic",
                "pattern": "chassis"
              }
            ],
            "linkProp": "id",
            "linkRegEx": true,
            "mappingType": 1,
            "metricType": "serie",
            "order": 4,
            "overlayIcon": false,
            "pattern": "FIEnvStats.last",
            "rangeData": [],
            "reduce": true,
            "refId": "A",
            "sanitize": false,
            "shapeData": [],
            "shapeProp": "id",
            "shapeRegEx": true,
            "stringThresholds": [],
            "textData": [],
            "textProp": "id",
            "textRegEx": true,
            "thresholds": [],
            "tooltip": false,
            "tooltipColors": false,
            "tooltipLabel": "",
            "tooltipOn": "a",
            "tpDirection": "v",
            "tpGraph": false,
            "tpGraphHigh": null,
            "tpGraphLow": null,
            "tpGraphScale": "linear",
            "tpGraphSize": "100%",
            "tpGraphType": "line",
            "type": "number",
            "unit": "short",
            "valueData": []
          },
          {
            "aggregation": "current",
            "alias": "servers",
            "colors": [
              "rgba(50, 172, 45, 0.97)"
            ],
            "column": "Time",
            "dateFormat": "YYYY-MM-DD HH:mm:ss",
            "decimals": 2,
            "eventData": [],
            "eventProp": "id",
            "eventRegEx": false,
            "gradient": false,
            "hidden": false,
            "invert": false,
            "linkData": [
              {
                "hidden": false,
                "linkOn": "a",
                "linkParams": false,
                "linkUrl": "/d/Z0M_N1vWz/service-profile-stats",
                "pattern": "servers"
              }
            ],
            "linkProp": "id",
            "linkRegEx": true,
            "mappingType": 1,
            "metricType": "serie",
            "order": 5,
            "overlayIcon": false,
            "pattern": "FIEnvStats.last",
            "rangeData": [],
            "reduce": true,
            "refId": "A",
            "sanitize": false,
            "shapeData": [],
            "shapeProp": "id",
            "shapeRegEx": true,
            "stringThresholds": [],
            "textData": [],
            "textProp": "id",
            "textRegEx": true,
            "thresholds": [],
            "tooltip": false,
            "tooltipColors": false,
            "tooltipLabel": "",
            "tooltipOn": "a",
            "tpDirection": "v",
            "tpGraph": false,
            "tpGraphHigh": null,
            "tpGraphLow": null,
            "tpGraphScale": "linear",
            "tpGraphSize": "100%",
            "tpGraphType": "line",
            "type": "number",
            "unit": "short",
            "valueData": []
          },
          {
            "aggregation": "current",
            "alias": "Ingress Congestion",
            "colors": [
              "rgba(50, 172, 45, 0.97)"
            ],
            "column": "Time",
            "dateFormat": "YYYY-MM-DD HH:mm:ss",
            "decimals": 2,
            "eventData": [],
            "eventProp": "id",
            "eventRegEx": false,
            "gradient": false,
            "hidden": false,
            "invert": false,
            "linkData": [
              {
                "hidden": false,
                "linkOn": "a",
                "linkParams": false,
                "linkUrl": "/d/Sve32sDZk/fi-uplink-port-ingress-congestion-monitoring",
                "pattern": "ingress_congestion"
              }
            ],
            "linkProp": "id",
            "linkRegEx": true,
            "mappingType": 1,
            "metricType": "serie",
            "order": 6,
            "overlayIcon": false,
            "pattern": "FIEnvStats.last",
            "rangeData": [],
            "reduce": true,
            "refId": "A",
            "sanitize": false,
            "shapeData": [],
            "shapeProp": "id",
            "shapeRegEx": true,
            "stringThresholds": [],
            "textData": [],
            "textProp": "id",
            "textRegEx": true,
            "thresholds": [],
            "tooltip": false,
            "tooltipColors": false,
            "tooltipLabel": "",
            "tooltipOn": "a",
            "tpDirection": "v",
            "tpGraph": false,
            "tpGraphHigh": null,
            "tpGraphLow": null,
            "tpGraphScale": "linear",
            "tpGraphSize": "100%",
            "tpGraphType": "line",
            "type": "number",
            "unit": "short",
            "valueData": []
          }
        ]
      },
      "targets": [
        {
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "measurement": "FIEnvStats",
          "orderByTime": "ASC",
          "policy": "default",
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "load"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "last"
              }
            ]
          ],
          "tags": [
            {
              "key": "domain",
              "operator": "=~",
              "value": "/^$domain$/"
            }
          ]
        }
      ],
      "timeFrom": null,
      "timeShift": null,
      "title": "",
      "transparent": true,
      "type": "agenty-flowcharting-panel",
      "valueName": "current",
      "version": "0.9.0"
    },
    {
      "datasource": "$data_source",
      "fieldConfig": {
        "defaults": {
          "custom": {}
        },
        "overrides": []
      },
      "flowchartsData": {
        "flowcharts": [
          {
            "allowDrawio": false,
            "bgColor": null,
            "center": true,
            "csv": "## See more information for the syntax at https://drawio-app.com/import-from-csv-to-drawio/\n##\n## Example CSV. Use ## for comments and # for configuration.\n## The following names are reserved and should not be used (or ignored):\n## id, tooltip, placeholder(s), link and label (see below)\n##\n#\n## Node label with placeholders and HTML.\n## Default is '%name_of_first_column%'.\n#\n# label: %name%<br><i style=\"color:gray;\">%position%</i><br><a href=\"mailto:%email%\">Email</a>\n#\n## Node style (placeholders are replaced once).\n## Default is the current style for nodes.\n#\n# style: label;image=%image%;whiteSpace=wrap;html=1;rounded=1;fillColor=%fill%;strokeColor=%stroke%;\n#\n## Parent style for nodes with child nodes (placeholders are replaced once).\n#\n# parentstyle: swimlane;whiteSpace=wrap;html=1;childLayout=stackLayout;horizontal=1;horizontalStack=0;resizeParent=1;resizeLast=0;collapsible=1;\n#\n## Optional column name that contains a reference to a named style in styles.\n## Default is the current style for nodes.\n#\n# stylename: -\n#\n## JSON for named styles of the form {\"name\": \"style\", \"name\": \"style\"} where style is a cell style with\n## placeholders that are replaced once.\n#\n# styles: -\n#\n## Optional column name that contains a reference to a named label in labels.\n## Default is the current label.\n#\n# labelname: -\n#\n## JSON for named labels of the form {\"name\": \"label\", \"name\": \"label\"} where label is a cell label with\n## placeholders.\n#\n# labels: -\n#\n## Uses the given column name as the identity for cells (updates existing cells).\n## Default is no identity (empty value or -).\n#\n# identity: -\n#\n## Uses the given column name as the parent reference for cells. Default is no parent (empty or -).\n## The identity above is used for resolving the reference so it must be specified.\n#\n# parent: -\n#\n## Adds a prefix to the identity of cells to make sure they do not collide with existing cells (whose\n## IDs are numbers from 0..n, sometimes with a GUID prefix in the context of realtime collaboration).\n## Default is csvimport-.\n#\n# namespace: csvimport-\n#\n## Connections between rows (\"from\": source colum, \"to\": target column).\n## Label, style and invert are optional. Defaults are '', current style and false.\n## If placeholders are used in the style, they are replaced with data from the source.\n## An optional placeholders can be set to target to use data from the target instead.\n## In addition to label, an optional fromlabel and tolabel can be used to name the column\n## that contains the text for the label in the edges source or target (invert ignored).\n## The label is concatenated in the form fromlabel + label + tolabel if all are defined.\n## The target column may contain a comma-separated list of values.\n## Multiple connect entries are allowed.\n#\n# connect: {\"from\": \"manager\", \"to\": \"name\", \"invert\": true, \"label\": \"manages\", \\\n#          \"style\": \"curved=1;endArrow=blockThin;endFill=1;fontSize=11;\"}\n# connect: {\"from\": \"refs\", \"to\": \"id\", \"style\": \"curved=1;fontSize=11;\"}\n#\n## Node x-coordinate. Possible value is a column name. Default is empty. Layouts will\n## override this value.\n#\n# left: \n#\n## Node y-coordinate. Possible value is a column name. Default is empty. Layouts will\n## override this value.\n#\n# top: \n#\n## Node width. Possible value is a number (in px), auto or an @ sign followed by a column\n## name that contains the value for the width. Default is auto.\n#\n# width: auto\n#\n## Node height. Possible value is a number (in px), auto or an @ sign followed by a column\n## name that contains the value for the height. Default is auto.\n#\n# height: auto\n#\n## Padding for autosize. Default is 0.\n#\n# padding: -12\n#\n## Comma-separated list of ignored columns for metadata. (These can be\n## used for connections and styles but will not be added as metadata.)\n#\n# ignore: id,image,fill,stroke,refs,manager\n#\n## Column to be renamed to link attribute (used as link).\n#\n# link: url\n#\n## Spacing between nodes. Default is 40.\n#\n# nodespacing: 40\n#\n## Spacing between levels of hierarchical layouts. Default is 100.\n#\n# levelspacing: 100\n#\n## Spacing between parallel edges. Default is 40. Use 0 to disable.\n#\n# edgespacing: 40\n#\n## Name or JSON of layout. Possible values are auto, none, verticaltree, horizontaltree,\n## verticalflow, horizontalflow, organic, circle or a JSON string as used in Layout, Apply.\n## Default is auto.\n#\n# layout: auto\n#\n## ---- CSV below this line. First line are column names. ----\nname,position,id,location,manager,email,fill,stroke,refs,url,image\nEvan Miller,CFO,emi,Office 1,,me@example.com,#dae8fc,#6c8ebf,,https://www.draw.io,https://cdn3.iconfinder.com/data/icons/user-avatars-1/512/users-9-2-128.png\nEdward Morrison,Brand Manager,emo,Office 2,Evan Miller,me@example.com,#d5e8d4,#82b366,,https://www.draw.io,https://cdn3.iconfinder.com/data/icons/user-avatars-1/512/users-10-3-128.png\nRon Donovan,System Admin,rdo,Office 3,Evan Miller,me@example.com,#d5e8d4,#82b366,\"emo,tva\",https://www.draw.io,https://cdn3.iconfinder.com/data/icons/user-avatars-1/512/users-2-128.png\nTessa Valet,HR Director,tva,Office 4,Evan Miller,me@example.com,#d5e8d4,#82b366,,https://www.draw.io,https://cdn3.iconfinder.com/data/icons/user-avatars-1/512/users-3-128.png\n",
            "download": false,
            "editorTheme": "dark",
            "editorUrl": "https://www.draw.io",
            "enableAnim": true,
            "grid": false,
            "lock": true,
            "name": "Main",
            "scale": true,
            "tooltip": true,
            "type": "xml",
            "url": "http://<YourUrl>/<Your XML/drawio file/api>",
            "xml": "<mxGraphModel dx=\"677\" dy=\"435\" grid=\"1\" gridSize=\"10\" guides=\"1\" tooltips=\"1\" connect=\"1\" arrows=\"1\" fold=\"1\" page=\"1\" pageScale=\"1\" pageWidth=\"850\" pageHeight=\"1100\" math=\"0\" shadow=\"0\">\n  <root>\n    <mxCell id=\"U3Yb-M3iW0U3TkC6f_VT-0\" />\n    <mxCell id=\"U3Yb-M3iW0U3TkC6f_VT-1\" parent=\"U3Yb-M3iW0U3TkC6f_VT-0\" />\n    <mxCell id=\"qjMXR-8qFvfJkbGcyA1T-6\" value=\"\" style=\"rounded=1;whiteSpace=wrap;html=1;spacing=0;strokeColor=none;fontColor=#FFFFFF;fontSize=13;arcSize=50;fillColor=#CCFF99;\" parent=\"U3Yb-M3iW0U3TkC6f_VT-1\" vertex=\"1\">\n      <mxGeometry y=\"558\" width=\"180\" height=\"20\" as=\"geometry\" />\n    </mxCell>\n    <mxCell id=\"3TAq4FZGmTNtiptqA514-0\" value=\"Detailed Congestion Monitoring\" style=\"rounded=1;whiteSpace=wrap;html=1;spacing=0;strokeColor=none;fontColor=#FFFFFF;fontSize=10;arcSize=50;fillColor=#0085FC;\" parent=\"U3Yb-M3iW0U3TkC6f_VT-1\" vertex=\"1\">\n      <mxGeometry x=\"15\" y=\"560\" width=\"150\" height=\"16\" as=\"geometry\" />\n    </mxCell>\n    <mxCell id=\"detailed_congestion\" value=\"\" style=\"rounded=1;whiteSpace=wrap;html=1;spacing=0;strokeColor=none;fontColor=#FFFFFF;fontSize=10;arcSize=50;fillColor=none;\" parent=\"U3Yb-M3iW0U3TkC6f_VT-1\" vertex=\"1\">\n      <mxGeometry x=\"10\" y=\"558\" width=\"160\" height=\"20\" as=\"geometry\" />\n    </mxCell>\n  </root>\n</mxGraphModel>\n",
            "zoom": "100%"
          }
        ]
      },
      "format": "short",
      "graphId": "flowchart_138",
      "gridPos": {
        "h": 2,
        "w": 4,
        "x": 20,
        "y": 2
      },
      "id": 138,
      "newFlag": false,
      "pluginVersion": "7.1.0",
      "rulesData": {
        "rulesData": [
          {
            "aggregation": "current",
            "alias": "detailed_congestion",
            "colors": [
              "rgba(50, 172, 45, 0.97)"
            ],
            "column": "Time",
            "dateFormat": "YYYY-MM-DD HH:mm:ss",
            "decimals": 2,
            "eventData": [],
            "eventProp": "id",
            "eventRegEx": false,
            "gradient": false,
            "hidden": false,
            "invert": false,
            "linkData": [
              {
                "hidden": false,
                "linkOn": "a",
                "linkParams": false,
                "linkUrl": "/d/SVO-VNiWk/chassis-pause-frame-monitoring",
                "pattern": "detailed_congestion"
              }
            ],
            "linkProp": "id",
            "linkRegEx": true,
            "mappingType": 1,
            "metricType": "serie",
            "order": 1,
            "overlayIcon": false,
            "pattern": "FIEnvStats.last",
            "rangeData": [],
            "reduce": true,
            "refId": "A",
            "sanitize": false,
            "shapeData": [],
            "shapeProp": "id",
            "shapeRegEx": true,
            "stringThresholds": [],
            "textData": [],
            "textProp": "id",
            "textRegEx": true,
            "thresholds": [],
            "tooltip": false,
            "tooltipColors": false,
            "tooltipLabel": "",
            "tooltipOn": "a",
            "tpDirection": "v",
            "tpGraph": false,
            "tpGraphHigh": null,
            "tpGraphLow": null,
            "tpGraphScale": "linear",
            "tpGraphSize": "100%",
            "tpGraphType": "line",
            "type": "number",
            "unit": "short",
            "valueData": []
          }
        ]
      },
      "targets": [
        {
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "hide": false,
          "measurement": "FIEnvStats",
          "orderByTime": "ASC",
          "policy": "default",
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "load"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "last"
              }
            ]
          ],
          "tags": [
            {
              "key": "domain",
              "operator": "=~",
              "value": "/^$domain$/"
            }
          ]
        }
      ],
      "timeFrom": null,
      "timeShift": null,
      "title": "",
      "transparent": true,
      "type": "agenty-flowcharting-panel",
      "valueName": "current",
      "version": "0.9.0"
    },
    {
      "datasource": "$data_source",
      "description": "Find Congestion on any link within a UCS Domain",
      "fieldConfig": {
        "defaults": {
          "custom": {}
        },
        "overrides": []
      },
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 4
      },
      "id": 130,
      "options": {
        "content": "\n<h2 style=\"text-align: center;\"><span style=\"color: #0085FC;\"><strong>Detail Congestion Monitoring - <span style=\"color: #ff00ff;\">$domain</span></strong></h2>",
        "mode": "html"
      },
      "pluginVersion": "7.1.0",
      "targets": [
        {
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "orderByTime": "ASC",
          "policy": "default",
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": []
        }
      ],
      "timeFrom": null,
      "timeShift": null,
      "title": "",
      "transparent": true,
      "type": "text"
    },
    {
      "collapsed": false,
      "datasource": "$data_source",
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 5
      },
      "id": 53,
      "panels": [],
      "title": "PAUSE frame monitoring on FI server ports",
      "type": "row"
    },
    {
      "content": "<h1 style=\"text-align: center;\">Congestion against inbound traffic</h1>",
      "datasource": "$data_source",
      "fieldConfig": {
        "defaults": {
          "custom": {}
        },
        "overrides": []
      },
      "gridPos": {
        "h": 1,
        "w": 12,
        "x": 0,
        "y": 6
      },
      "id": 58,
      "links": [],
      "mode": "html",
      "options": {
        "content": "<h2 style=\"text-align: center;\">Congestion against <span style=\"color: #00ff00;\">Ingress</span> traffic</h2>",
        "mode": "html"
      },
      "pluginVersion": "7.1.0",
      "targets": [
        {
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "orderByTime": "ASC",
          "policy": "default",
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": []
        }
      ],
      "timeFrom": null,
      "timeShift": null,
      "title": "",
      "transparent": true,
      "type": "text"
    },
    {
      "content": "<h1 style=\"text-align: center;\">Congestion against outbound traffic</h1>",
      "datasource": "$data_source",
      "fieldConfig": {
        "defaults": {
          "custom": {}
        },
        "overrides": []
      },
      "gridPos": {
        "h": 1,
        "w": 12,
        "x": 12,
        "y": 6
      },
      "id": 59,
      "links": [],
      "mode": "html",
      "options": {
        "content": "<h2 style=\"text-align: center;\">Congestion against <span style=\"color: #00ffff;\">Egress</span> traffic</h2>",
        "mode": "html"
      },
      "pluginVersion": "7.1.0",
      "targets": [
        {
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "orderByTime": "ASC",
          "policy": "default",
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": []
        }
      ],
      "timeFrom": null,
      "timeShift": null,
      "title": "",
      "transparent": true,
      "type": "text"
    },
    {
      "aliasColors": {},
      "bars": false,
      "dashLength": 10,
      "dashes": false,
      "datasource": "$data_source",
      "description": "**Use Case**: Monitor congestion against ingress traffic on FI Server Ports. \n\n![Server Ports RX PAUSE](/public/img/utm/fi_server_port_rx_pause.png)\n\n**How to use**:  Select a UCS domain and FI Server Port (s). The graphs display RX PAUSE received on the FI Server Ports. These PAUSE frames are sent by the connected devices (FEX, IOM or Servers) when they must apply backpressure on the incoming traffic. *Note*: Server Ingress traffic is TX for FI Server Ports.\n\nPAUSE frames may be exchanged under normal conditions also. So, find unusual PAUSE frame activity with below symptoms (not an exhaustive list):\n- PAUSE frame rate in tens or hundreds per second is bad. Thousands, tens-of-thousands, or Millions per second is terribly bad.\n- Look for spike in PAUSE frame rate. Low stable values are probably fine.\n- Does one port among many other similar ports has higher PAUSE frame activity?\n\nOnce you have a suspect FI Server port with unusual PAUSE frame activity, the next step depends on the type of connected device.\n-\tIf the connected device is a server, you have found the ultimate traffic destination or Congestion source.\n-\tIf the connected device is a FEX or IOM in a chassis, monitor the congestion on the backplane ports to find the (blade) server (s).\n**Details**: \n- A server sends PAUSE frames if it is unable to receive the traffic at the ingress rate. These frames are reported as RX PAUSE on the connected port (on FI or FEX or IOM). \n- PAUSE frames are used for FC traffic only (no-drop class). Congestion in Eth traffic is generally indicated by frame drops.\n",
      "fieldConfig": {
        "defaults": {
          "custom": {}
        },
        "overrides": []
      },
      "fill": 0,
      "fillGradient": 1,
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 7
      },
      "hiddenSeries": false,
      "id": 13,
      "interval": "[[polling_interval]]s",
      "legend": {
        "alignAsTable": true,
        "avg": true,
        "current": false,
        "max": true,
        "min": false,
        "rightSide": true,
        "show": true,
        "sort": "max",
        "sortDesc": true,
        "total": false,
        "values": true
      },
      "lines": true,
      "linewidth": 1,
      "links": [],
      "nullPointMode": "null",
      "percentage": false,
      "pluginVersion": "7.1.1",
      "pointradius": 1,
      "points": true,
      "renderer": "flot",
      "seriesOverrides": [],
      "spaceLength": 10,
      "stack": false,
      "steppedLine": false,
      "targets": [
        {
          "alias": "$col on $tag_port from $tag_peer",
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "port"
              ],
              "type": "tag"
            },
            {
              "params": [
                "peer_chassis"
              ],
              "type": "tag"
            },
            {
              "params": [
                "linear"
              ],
              "type": "fill"
            }
          ],
          "measurement": "FIServerPortStats",
          "orderByTime": "ASC",
          "policy": "autogen",
          "query": "SELECT non_negative_difference(mean(\"pause_rx\"))  / [[polling_interval]] AS \"RX PAUSE\" FROM \"$db\".\"$rp\".\"FIServerPortStats\" WHERE (\"domain\" =~ /^$domain$/ AND \"fi_id\" = 'A' AND \"port\" =~ /^$server_port$/) AND $timeFilter GROUP BY time($__interval), \"port\", \"peer\" fill(linear)",
          "rawQuery": true,
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "pause_rx"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              },
              {
                "params": [],
                "type": "non_negative_difference"
              },
              {
                "params": [
                  " / [[polling_interval]]"
                ],
                "type": "math"
              },
              {
                "params": [
                  "RX PAUSE"
                ],
                "type": "alias"
              }
            ]
          ],
          "tags": [
            {
              "key": "domain",
              "operator": "=~",
              "value": "/^$domain$/"
            },
            {
              "condition": "AND",
              "key": "fi_id",
              "operator": "=",
              "value": "A"
            },
            {
              "condition": "AND",
              "key": "port",
              "operator": "=~",
              "value": "/^$server_port$/"
            }
          ]
        }
      ],
      "thresholds": [],
      "timeFrom": null,
      "timeRegions": [],
      "timeShift": null,
      "title": "FI-A - Server port - RX PAUSE monitoring",
      "tooltip": {
        "shared": true,
        "sort": 0,
        "value_type": "individual"
      },
      "type": "graph",
      "xaxis": {
        "buckets": null,
        "mode": "time",
        "name": null,
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": "0",
          "show": true
        },
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        }
      ],
      "yaxis": {
        "align": false,
        "alignLevel": null
      }
    },
    {
      "aliasColors": {},
      "bars": false,
      "dashLength": 10,
      "dashes": false,
      "datasource": "$data_source",
      "description": "**Use Case**: Monitor congestion against egress traffic on FI Server Ports. \n\n![Server Ports TX PAUSE](/public/img/utm/fi_server_port_tx_pause.png)\n\n**How to use**:  Select a UCS domain and FI Server Port (s). The graphs display TX PAUSE sent by the FI Server Ports. These PAUSE frames are sent to the connected devices (FEX, IOM or Servers) when the backpressure must be applied against the outgoing traffic. *Note*: Server Egress traffic is RX for FI Server Ports.\n\nPAUSE frames may be exchanged under normal conditions also. So, find unusual PAUSE frame activity with below symptoms (not an exhaustive list):\n- PAUSE frame rate in tens or hundreds per second is bad. Thousands, tens-of-thousands, or Millions per second is terribly bad.\n- Look for spike in PAUSE frame rate. Low stable values are probably fine.\n- Does one port among many other similar ports has higher PAUSE frame activity?\n\nOnce you have a suspect FI Server port with unusual PAUSE frame activity, the next step depends on the type of connected device.\n-\tIf the connected device is a server, you have found the ultimate traffic destination or Congestion source.\n-\tIf the connected device is a FEX or IOM in a chassis, monitor the congestion on the backplane ports to find the (blade) server (s).\n**Details**: \n- A server receives PAUSE frames if it is transmitting data faster than the receiver can accept it. These frames are reported as TX PAUSE on the connected port (on FI or FEX or IOM). \n- PAUSE frames are used for FC traffic only (no-drop class). Congestion in Eth traffic is generally indicated by frame drops.\n",
      "fieldConfig": {
        "defaults": {
          "custom": {}
        },
        "overrides": []
      },
      "fill": 0,
      "fillGradient": 1,
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 7
      },
      "hiddenSeries": false,
      "id": 49,
      "interval": "[[polling_interval]]s",
      "legend": {
        "alignAsTable": true,
        "avg": true,
        "current": false,
        "max": true,
        "min": false,
        "rightSide": true,
        "show": true,
        "sort": "max",
        "sortDesc": true,
        "total": false,
        "values": true
      },
      "lines": true,
      "linewidth": 1,
      "links": [],
      "nullPointMode": "null",
      "percentage": false,
      "pluginVersion": "7.1.1",
      "pointradius": 1,
      "points": true,
      "renderer": "flot",
      "seriesOverrides": [],
      "spaceLength": 10,
      "stack": false,
      "steppedLine": false,
      "targets": [
        {
          "alias": "$col on $tag_port to $tag_peer",
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "port"
              ],
              "type": "tag"
            },
            {
              "params": [
                "peer_chassis"
              ],
              "type": "tag"
            },
            {
              "params": [
                "linear"
              ],
              "type": "fill"
            }
          ],
          "measurement": "FIServerPortStats",
          "orderByTime": "ASC",
          "policy": "autogen",
          "query": "SELECT non_negative_difference(mean(\"pause_tx\"))  / [[polling_interval]] AS \"TX PAUSE\" FROM \"$db\".\"$rp\".\"FIServerPortStats\" WHERE (\"domain\" =~ /^$domain$/ AND \"fi_id\" = 'A' AND \"port\" =~ /^$server_port$/) AND $timeFilter GROUP BY time($__interval), \"port\", \"peer\" fill(linear)",
          "rawQuery": true,
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "pause_tx"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              },
              {
                "params": [],
                "type": "non_negative_difference"
              },
              {
                "params": [
                  " / [[polling_interval]]"
                ],
                "type": "math"
              },
              {
                "params": [
                  "TX PAUSE"
                ],
                "type": "alias"
              }
            ]
          ],
          "tags": [
            {
              "key": "domain",
              "operator": "=~",
              "value": "/^$domain$/"
            },
            {
              "condition": "AND",
              "key": "fi_id",
              "operator": "=",
              "value": "A"
            },
            {
              "condition": "AND",
              "key": "port",
              "operator": "=~",
              "value": "/^$server_port$/"
            }
          ]
        }
      ],
      "thresholds": [],
      "timeFrom": null,
      "timeRegions": [],
      "timeShift": null,
      "title": "FI-A - Server port - TX PAUSE monitoring",
      "tooltip": {
        "shared": true,
        "sort": 0,
        "value_type": "individual"
      },
      "type": "graph",
      "xaxis": {
        "buckets": null,
        "mode": "time",
        "name": null,
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": "0",
          "show": true
        },
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        }
      ],
      "yaxis": {
        "align": false,
        "alignLevel": null
      }
    },
    {
      "aliasColors": {},
      "bars": false,
      "dashLength": 10,
      "dashes": false,
      "datasource": "$data_source",
      "description": "**Use Case**: Monitor congestion against ingress traffic on FI Server Ports. \n\n![Server Ports RX PAUSE](/public/img/utm/fi_server_port_rx_pause.png)\n\n**How to use**:  Select a UCS domain and FI Server Port (s). The graphs display RX PAUSE received on the FI Server Ports. These PAUSE frames are sent by the connected devices (FEX, IOM or Servers) when they must apply backpressure on the incoming traffic. *Note*: Server Ingress traffic is TX for FI Server Ports.\n\nPAUSE frames may be exchanged under normal conditions also. So, find unusual PAUSE frame activity with below symptoms (not an exhaustive list):\n- PAUSE frame rate in tens or hundreds per second is bad. Thousands, tens-of-thousands, or Millions per second is terribly bad.\n- Look for spike in PAUSE frame rate. Low stable values are probably fine.\n- Does one port among many other similar ports has higher PAUSE frame activity?\n\nOnce you have a suspect FI Server port with unusual PAUSE frame activity, the next step depends on the type of connected device.\n-\tIf the connected device is a server, you have found the ultimate traffic destination or Congestion source.\n-\tIf the connected device is a FEX or IOM in a chassis, monitor the congestion on the backplane ports to find the (blade) server (s).\n**Details**: \n- A server sends PAUSE frames if it is unable to receive the traffic at the ingress rate. These frames are reported as RX PAUSE on the connected port (on FI or FEX or IOM). \n- PAUSE frames are used for FC traffic only (no-drop class). Congestion in Eth traffic is generally indicated by frame drops.\n",
      "fieldConfig": {
        "defaults": {
          "custom": {}
        },
        "overrides": []
      },
      "fill": 0,
      "fillGradient": 1,
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 15
      },
      "hiddenSeries": false,
      "id": 55,
      "interval": "[[polling_interval]]s",
      "legend": {
        "alignAsTable": true,
        "avg": true,
        "current": false,
        "max": true,
        "min": false,
        "rightSide": true,
        "show": true,
        "sort": "max",
        "sortDesc": true,
        "total": false,
        "values": true
      },
      "lines": true,
      "linewidth": 1,
      "links": [],
      "nullPointMode": "null",
      "percentage": false,
      "pluginVersion": "7.1.1",
      "pointradius": 1,
      "points": true,
      "renderer": "flot",
      "seriesOverrides": [],
      "spaceLength": 10,
      "stack": false,
      "steppedLine": false,
      "targets": [
        {
          "alias": "$col on $tag_port from $tag_peer",
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "port"
              ],
              "type": "tag"
            },
            {
              "params": [
                "peer_chassis"
              ],
              "type": "tag"
            },
            {
              "params": [
                "linear"
              ],
              "type": "fill"
            }
          ],
          "measurement": "FIServerPortStats",
          "orderByTime": "ASC",
          "policy": "autogen",
          "query": "SELECT non_negative_difference(mean(\"pause_rx\"))  / [[polling_interval]] AS \"RX PAUSE\" FROM \"$db\".\"$rp\".\"FIServerPortStats\" WHERE (\"domain\" =~ /^$domain$/ AND \"fi_id\" = 'B' AND \"port\" =~ /^$server_port$/) AND $timeFilter GROUP BY time($__interval), \"port\", \"peer\" fill(linear)",
          "rawQuery": true,
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "pause_rx"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              },
              {
                "params": [],
                "type": "non_negative_difference"
              },
              {
                "params": [
                  " / [[polling_interval]]"
                ],
                "type": "math"
              },
              {
                "params": [
                  "RX PAUSE"
                ],
                "type": "alias"
              }
            ]
          ],
          "tags": [
            {
              "key": "domain",
              "operator": "=~",
              "value": "/^$domain$/"
            },
            {
              "condition": "AND",
              "key": "fi_id",
              "operator": "=",
              "value": "B"
            },
            {
              "condition": "AND",
              "key": "port",
              "operator": "=~",
              "value": "/^$server_port$/"
            }
          ]
        }
      ],
      "thresholds": [],
      "timeFrom": null,
      "timeRegions": [],
      "timeShift": null,
      "title": "FI-B - Server port - RX PAUSE monitoring",
      "tooltip": {
        "shared": true,
        "sort": 0,
        "value_type": "individual"
      },
      "type": "graph",
      "xaxis": {
        "buckets": null,
        "mode": "time",
        "name": null,
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": "0",
          "show": true
        },
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        }
      ],
      "yaxis": {
        "align": false,
        "alignLevel": null
      }
    },
    {
      "aliasColors": {},
      "bars": false,
      "dashLength": 10,
      "dashes": false,
      "datasource": "$data_source",
      "description": "**Use Case**: Monitor congestion against egress traffic on FI Server Ports. \n\n![Server Ports TX PAUSE](/public/img/utm/fi_server_port_tx_pause.png)\n\n**How to use**:  Select a UCS domain and FI Server Port (s). The graphs display TX PAUSE sent by the FI Server Ports. These PAUSE frames are sent to the connected devices (FEX, IOM or Servers) when the backpressure must be applied against the outgoing traffic. *Note*: Server Egress traffic is RX for FI Server Ports.\n\nPAUSE frames may be exchanged under normal conditions also. So, find unusual PAUSE frame activity with below symptoms (not an exhaustive list):\n- PAUSE frame rate in tens or hundreds per second is bad. Thousands, tens-of-thousands, or Millions per second is terribly bad.\n- Look for spike in PAUSE frame rate. Low stable values are probably fine.\n- Does one port among many other similar ports has higher PAUSE frame activity?\n\nOnce you have a suspect FI Server port with unusual PAUSE frame activity, the next step depends on the type of connected device.\n-\tIf the connected device is a server, you have found the ultimate traffic destination or Congestion source.\n-\tIf the connected device is a FEX or IOM in a chassis, monitor the congestion on the backplane ports to find the (blade) server (s).\n**Details**: \n- A server receives PAUSE frames if it is transmitting data faster than the receiver can accept it. These frames are reported as TX PAUSE on the connected port (on FI or FEX or IOM). \n- PAUSE frames are used for FC traffic only (no-drop class). Congestion in Eth traffic is generally indicated by frame drops.\n",
      "fieldConfig": {
        "defaults": {
          "custom": {}
        },
        "overrides": []
      },
      "fill": 0,
      "fillGradient": 1,
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 15
      },
      "hiddenSeries": false,
      "id": 56,
      "interval": "[[polling_interval]]s",
      "legend": {
        "alignAsTable": true,
        "avg": true,
        "current": false,
        "max": true,
        "min": false,
        "rightSide": true,
        "show": true,
        "sort": "max",
        "sortDesc": true,
        "total": false,
        "values": true
      },
      "lines": true,
      "linewidth": 1,
      "links": [],
      "nullPointMode": "null",
      "percentage": false,
      "pluginVersion": "7.1.1",
      "pointradius": 2,
      "points": true,
      "renderer": "flot",
      "seriesOverrides": [],
      "spaceLength": 10,
      "stack": false,
      "steppedLine": false,
      "targets": [
        {
          "alias": "$col on $tag_port to $tag_peer",
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "port"
              ],
              "type": "tag"
            },
            {
              "params": [
                "peer_chassis"
              ],
              "type": "tag"
            },
            {
              "params": [
                "linear"
              ],
              "type": "fill"
            }
          ],
          "measurement": "FIServerPortStats",
          "orderByTime": "ASC",
          "policy": "autogen",
          "query": "SELECT non_negative_difference(mean(\"pause_tx\"))  / [[polling_interval]] AS \"TX PAUSE\" FROM \"$db\".\"$rp\".\"FIServerPortStats\" WHERE (\"domain\" =~ /^$domain$/ AND \"fi_id\" = 'B' AND \"port\" =~ /^$server_port$/) AND $timeFilter GROUP BY time($__interval), \"port\", \"peer\" fill(linear)",
          "rawQuery": true,
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "pause_tx"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              },
              {
                "params": [],
                "type": "non_negative_difference"
              },
              {
                "params": [
                  " / [[polling_interval]]"
                ],
                "type": "math"
              },
              {
                "params": [
                  "TX PAUSE"
                ],
                "type": "alias"
              }
            ]
          ],
          "tags": [
            {
              "key": "domain",
              "operator": "=~",
              "value": "/^$domain$/"
            },
            {
              "condition": "AND",
              "key": "fi_id",
              "operator": "=",
              "value": "B"
            },
            {
              "condition": "AND",
              "key": "port",
              "operator": "=~",
              "value": "/^$server_port$/"
            }
          ]
        }
      ],
      "thresholds": [],
      "timeFrom": null,
      "timeRegions": [],
      "timeShift": null,
      "title": "FI-B - Server port - TX PAUSE monitoring",
      "tooltip": {
        "shared": true,
        "sort": 0,
        "value_type": "individual"
      },
      "type": "graph",
      "xaxis": {
        "buckets": null,
        "mode": "time",
        "name": null,
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": "0",
          "show": true
        },
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        }
      ],
      "yaxis": {
        "align": false,
        "alignLevel": null
      }
    },
    {
      "collapsed": true,
      "datasource": "$data_source",
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 23
      },
      "id": 64,
      "panels": [
        {
          "content": "<h1 style=\"text-align: center;\">Congestion against inbound traffic</h1>",
          "datasource": "$data_source",
          "fieldConfig": {
            "defaults": {
              "custom": {}
            },
            "overrides": []
          },
          "gridPos": {
            "h": 1,
            "w": 12,
            "x": 0,
            "y": 7
          },
          "id": 131,
          "links": [],
          "mode": "html",
          "options": {
            "content": "<h2 style=\"text-align: center;\">Congestion against <span style=\"color: #00ff00;\">Ingress</span> traffic</h2>",
            "mode": "html"
          },
          "pluginVersion": "7.1.0",
          "scopedVars": {
            "chassis": {
              "selected": false,
              "text": "chassis-1",
              "value": "chassis-1"
            }
          },
          "targets": [
            {
              "groupBy": [
                {
                  "params": [
                    "$__interval"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "null"
                  ],
                  "type": "fill"
                }
              ],
              "orderByTime": "ASC",
              "policy": "default",
              "refId": "A",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "value"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "mean"
                  }
                ]
              ],
              "tags": []
            }
          ],
          "timeFrom": null,
          "timeShift": null,
          "title": "",
          "transparent": true,
          "type": "text"
        },
        {
          "content": "<h1 style=\"text-align: center;\">Congestion against outbound traffic</h1>",
          "datasource": "$data_source",
          "fieldConfig": {
            "defaults": {
              "custom": {}
            },
            "overrides": []
          },
          "gridPos": {
            "h": 1,
            "w": 12,
            "x": 12,
            "y": 7
          },
          "id": 132,
          "links": [],
          "mode": "html",
          "options": {
            "content": "<h2 style=\"text-align: center;\">Congestion against <span style=\"color: #00ffff;\">Egress</span> traffic</h2>",
            "mode": "html"
          },
          "pluginVersion": "7.1.0",
          "scopedVars": {
            "chassis": {
              "selected": false,
              "text": "chassis-1",
              "value": "chassis-1"
            }
          },
          "targets": [
            {
              "groupBy": [
                {
                  "params": [
                    "$__interval"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "null"
                  ],
                  "type": "fill"
                }
              ],
              "orderByTime": "ASC",
              "policy": "default",
              "refId": "A",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "value"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "mean"
                  }
                ]
              ],
              "tags": []
            }
          ],
          "timeFrom": null,
          "timeShift": null,
          "title": "",
          "transparent": true,
          "type": "text"
        },
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "datasource": "$data_source",
          "description": "**Use Case**: Monitor congestion against ingress traffic on FEX/IOM Backplane Ports. \n\n![Server Ports RX PAUSE](/public/img/utm/backplane_port_rx_pause.png)\n\n**How to use**:  Select a UCS domain and Chassis. The graphs display RX PAUSE received on the FEX/IOM Backplane Ports. These PAUSE frames are sent by the connected servers when they must apply backpressure on the incoming traffic. *Note*: Server Ingress traffic is TX for Backplane Ports.\n\nPAUSE frames may be exchanged under normal conditions also. So, find unusual PAUSE frame activity with below symptoms (not an exhaustive list):\n- PAUSE frame rate in tens or hundreds per second is bad. Thousands, tens-of-thousands, or Millions per second is terribly bad.\n- Look for spike in PAUSE frame rate. Low stable values are probably fine.\n- Does one port among many other similar ports has higher PAUSE frame activity?\n\n**Details**: \n- A server sends PAUSE frames if it is unable to receive the traffic at the ingress rate. These frames are reported as RX PAUSE on the connected port (on FI or FEX or IOM). \n- PAUSE frames are used for FC traffic only (no-drop class). Congestion in Eth traffic is generally indicated by frame drops.\n",
          "fieldConfig": {
            "defaults": {
              "custom": {}
            },
            "overrides": []
          },
          "fill": 0,
          "fillGradient": 0,
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 0,
            "y": 8
          },
          "hiddenSeries": false,
          "id": 8,
          "interval": "[[polling_interval]]s",
          "legend": {
            "alignAsTable": true,
            "avg": true,
            "current": false,
            "max": true,
            "min": false,
            "rightSide": true,
            "show": true,
            "sort": "max",
            "sortDesc": true,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "percentage": false,
          "pluginVersion": "7.1.1",
          "pointradius": 2,
          "points": true,
          "renderer": "flot",
          "scopedVars": {
            "chassis": {
              "selected": false,
              "text": "chassis-1",
              "value": "chassis-1"
            }
          },
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "alias": "$col on $tag_bp_port from $tag_peer_service_profile",
              "groupBy": [
                {
                  "params": [
                    "$__interval"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "chassis"
                  ],
                  "type": "tag"
                },
                {
                  "params": [
                    "bp_port"
                  ],
                  "type": "tag"
                },
                {
                  "params": [
                    "peer_service_profile"
                  ],
                  "type": "tag"
                },
                {
                  "params": [
                    "null"
                  ],
                  "type": "fill"
                }
              ],
              "measurement": "BackplanePortStats",
              "orderByTime": "ASC",
              "policy": "default",
              "query": "SELECT non_negative_difference(mean(\"pause_rx\"))  / [[polling_interval]] AS \"RX PAUSE\" FROM \"$db\".\"$rp\".\"BackplanePortStats\" WHERE (\"domain\" =~ /^$domain$/ AND \"fi_id\" = 'A' AND \"chassis\" =~ /^$chassis$/) AND $timeFilter GROUP BY time($__interval), \"chassis\", \"bp_port\", \"peer_service_profile\" fill(null)",
              "rawQuery": true,
              "refId": "A",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "pause_rx"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "mean"
                  },
                  {
                    "params": [],
                    "type": "non_negative_difference"
                  },
                  {
                    "params": [
                      " / [[polling_interval]]"
                    ],
                    "type": "math"
                  },
                  {
                    "params": [
                      "RX PAUSE"
                    ],
                    "type": "alias"
                  }
                ]
              ],
              "tags": [
                {
                  "key": "domain",
                  "operator": "=~",
                  "value": "/^$domain$/"
                },
                {
                  "condition": "AND",
                  "key": "fi_id",
                  "operator": "=",
                  "value": "A"
                },
                {
                  "condition": "AND",
                  "key": "chassis",
                  "operator": "=~",
                  "value": "/^$chassis$/"
                }
              ]
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Backplane port RX PAUSE stats in $chassis via FI-A",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": "0",
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "datasource": "$data_source",
          "description": "**Use Case**: Monitor congestion against egress traffic on FEX/IOM Backplane Ports. \n\n![Server Ports RX PAUSE](/public/img/utm/backplane_port_tx_pause.png)\n\n**How to use**:  Select a UCS domain and Chassis. The graphs display TX PAUSE sent by the FEX/IOM Backplane Ports. These PAUSE frames are sent to the connected servers when the backpressure must be applied against the outgoing traffic. *Note*: Server Egress traffic is RX for Backplane Ports.\n\nPAUSE frames may be exchanged under normal conditions also. So, find unusual PAUSE frame activity with below symptoms (not an exhaustive list):\n- PAUSE frame rate in tens or hundreds per second is bad. Thousands, tens-of-thousands, or Millions per second is terribly bad.\n- Look for spike in PAUSE frame rate. Low stable values are probably fine.\n- Does one port among many other similar ports has higher PAUSE frame activity?\n\n**Details**: \n- A server receives PAUSE frames if it is transmitting data faster than the receiver can accept it. These frames are reported as TX PAUSE on the connected port (on FI or FEX or IOM). \n- PAUSE frames are used for FC traffic only (no-drop class). Congestion in Eth traffic is generally indicated by frame drops.\n",
          "fieldConfig": {
            "defaults": {
              "custom": {}
            },
            "overrides": []
          },
          "fill": 0,
          "fillGradient": 0,
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 12,
            "y": 8
          },
          "hiddenSeries": false,
          "id": 62,
          "interval": "[[polling_interval]]s",
          "legend": {
            "alignAsTable": true,
            "avg": true,
            "current": false,
            "max": true,
            "min": false,
            "rightSide": true,
            "show": true,
            "sort": "max",
            "sortDesc": true,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "percentage": false,
          "pluginVersion": "7.1.1",
          "pointradius": 2,
          "points": true,
          "renderer": "flot",
          "scopedVars": {
            "chassis": {
              "selected": false,
              "text": "chassis-1",
              "value": "chassis-1"
            }
          },
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "alias": "$col on $tag_bp_port to $tag_peer_service_profile",
              "groupBy": [
                {
                  "params": [
                    "$__interval"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "chassis"
                  ],
                  "type": "tag"
                },
                {
                  "params": [
                    "bp_port"
                  ],
                  "type": "tag"
                },
                {
                  "params": [
                    "peer_service_profile"
                  ],
                  "type": "tag"
                },
                {
                  "params": [
                    "null"
                  ],
                  "type": "fill"
                }
              ],
              "measurement": "BackplanePortStats",
              "orderByTime": "ASC",
              "policy": "default",
              "query": "SELECT non_negative_difference(mean(\"pause_tx\"))  / [[polling_interval]] AS \"TX PAUSE\" FROM \"$db\".\"$rp\".\"BackplanePortStats\" WHERE (\"domain\" =~ /^$domain$/ AND \"fi_id\" = 'A' AND \"chassis\" =~ /^$chassis$/) AND $timeFilter GROUP BY time($__interval), \"chassis\", \"bp_port\", \"peer_service_profile\" fill(null)",
              "rawQuery": true,
              "refId": "A",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "pause_tx"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "mean"
                  },
                  {
                    "params": [],
                    "type": "non_negative_difference"
                  },
                  {
                    "params": [
                      " / [[polling_interval]]"
                    ],
                    "type": "math"
                  },
                  {
                    "params": [
                      "TX PAUSE"
                    ],
                    "type": "alias"
                  }
                ]
              ],
              "tags": [
                {
                  "key": "domain",
                  "operator": "=~",
                  "value": "/^$domain$/"
                },
                {
                  "condition": "AND",
                  "key": "fi_id",
                  "operator": "=",
                  "value": "A"
                },
                {
                  "condition": "AND",
                  "key": "chassis",
                  "operator": "=~",
                  "value": "/^$chassis$/"
                }
              ]
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Backplane port TX PAUSE stats in $chassis via FI-A",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": "0",
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "datasource": "$data_source",
          "description": "**Use Case**: Monitor congestion against ingress traffic on FEX/IOM Backplane Ports. \n\n![Server Ports RX PAUSE](/public/img/utm/backplane_port_rx_pause.png)\n\n**How to use**:  Select a UCS domain and Chassis. The graphs display RX PAUSE received on the FEX/IOM Backplane Ports. These PAUSE frames are sent by the connected servers when they must apply backpressure on the incoming traffic. *Note*: Server Ingress traffic is TX for Backplane Ports.\n\nPAUSE frames may be exchanged under normal conditions also. So, find unusual PAUSE frame activity with below symptoms (not an exhaustive list):\n- PAUSE frame rate in tens or hundreds per second is bad. Thousands, tens-of-thousands, or Millions per second is terribly bad.\n- Look for spike in PAUSE frame rate. Low stable values are probably fine.\n- Does one port among many other similar ports has higher PAUSE frame activity?\n\n**Details**: \n- A server sends PAUSE frames if it is unable to receive the traffic at the ingress rate. These frames are reported as RX PAUSE on the connected port (on FI or FEX or IOM). \n- PAUSE frames are used for FC traffic only (no-drop class). Congestion in Eth traffic is generally indicated by frame drops.\n",
          "fieldConfig": {
            "defaults": {
              "custom": {}
            },
            "overrides": []
          },
          "fill": 0,
          "fillGradient": 0,
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 0,
            "y": 16
          },
          "hiddenSeries": false,
          "id": 60,
          "interval": "[[polling_interval]]s",
          "legend": {
            "alignAsTable": true,
            "avg": true,
            "current": false,
            "max": true,
            "min": false,
            "rightSide": true,
            "show": true,
            "sort": "max",
            "sortDesc": true,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "percentage": false,
          "pluginVersion": "7.1.1",
          "pointradius": 2,
          "points": true,
          "renderer": "flot",
          "scopedVars": {
            "chassis": {
              "selected": false,
              "text": "chassis-1",
              "value": "chassis-1"
            }
          },
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "alias": "$col on $tag_bp_port from $tag_peer_service_profile",
              "groupBy": [
                {
                  "params": [
                    "$__interval"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "chassis"
                  ],
                  "type": "tag"
                },
                {
                  "params": [
                    "bp_port"
                  ],
                  "type": "tag"
                },
                {
                  "params": [
                    "peer_service_profile"
                  ],
                  "type": "tag"
                },
                {
                  "params": [
                    "null"
                  ],
                  "type": "fill"
                }
              ],
              "measurement": "BackplanePortStats",
              "orderByTime": "ASC",
              "policy": "default",
              "query": "SELECT non_negative_difference(mean(\"pause_rx\"))  / [[polling_interval]] AS \"RX PAUSE\" FROM \"$db\".\"$rp\".\"BackplanePortStats\" WHERE (\"domain\" =~ /^$domain$/ AND \"fi_id\" = 'B' AND \"chassis\" =~ /^$chassis$/) AND $timeFilter GROUP BY time($__interval), \"chassis\", \"bp_port\", \"peer_service_profile\" fill(null)",
              "rawQuery": true,
              "refId": "A",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "pause_rx"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "mean"
                  },
                  {
                    "params": [],
                    "type": "non_negative_difference"
                  },
                  {
                    "params": [
                      " / [[polling_interval]]"
                    ],
                    "type": "math"
                  },
                  {
                    "params": [
                      "RX PAUSE"
                    ],
                    "type": "alias"
                  }
                ]
              ],
              "tags": [
                {
                  "key": "domain",
                  "operator": "=~",
                  "value": "/^$domain$/"
                },
                {
                  "condition": "AND",
                  "key": "fi_id",
                  "operator": "=",
                  "value": "B"
                },
                {
                  "condition": "AND",
                  "key": "chassis",
                  "operator": "=~",
                  "value": "/^$chassis$/"
                }
              ]
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Backplane port RX PAUSE stats in $chassis via FI-B",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": "0",
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "datasource": "$data_source",
          "description": "**Use Case**: Monitor congestion against egress traffic on FEX/IOM Backplane Ports. \n\n![Server Ports RX PAUSE](/public/img/utm/backplane_port_tx_pause.png)\n\n**How to use**:  Select a UCS domain and Chassis. The graphs display TX PAUSE sent by the FEX/IOM Backplane Ports. These PAUSE frames are sent to the connected servers when the backpressure must be applied against the outgoing traffic. *Note*: Server Egress traffic is RX for Backplane Ports.\n\nPAUSE frames may be exchanged under normal conditions also. So, find unusual PAUSE frame activity with below symptoms (not an exhaustive list):\n- PAUSE frame rate in tens or hundreds per second is bad. Thousands, tens-of-thousands, or Millions per second is terribly bad.\n- Look for spike in PAUSE frame rate. Low stable values are probably fine.\n- Does one port among many other similar ports has higher PAUSE frame activity?\n\n**Details**: \n- A server receives PAUSE frames if it is transmitting data faster than the receiver can accept it. These frames are reported as TX PAUSE on the connected port (on FI or FEX or IOM). \n- PAUSE frames are used for FC traffic only (no-drop class). Congestion in Eth traffic is generally indicated by frame drops.\n",
          "fieldConfig": {
            "defaults": {
              "custom": {}
            },
            "overrides": []
          },
          "fill": 0,
          "fillGradient": 0,
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 12,
            "y": 16
          },
          "hiddenSeries": false,
          "id": 61,
          "interval": "[[polling_interval]]s",
          "legend": {
            "alignAsTable": true,
            "avg": true,
            "current": false,
            "max": true,
            "min": false,
            "rightSide": true,
            "show": true,
            "sort": "max",
            "sortDesc": true,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "percentage": false,
          "pluginVersion": "7.1.1",
          "pointradius": 2,
          "points": true,
          "renderer": "flot",
          "scopedVars": {
            "chassis": {
              "selected": false,
              "text": "chassis-1",
              "value": "chassis-1"
            }
          },
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "alias": "$col on $tag_bp_port to $tag_peer_service_profile",
              "groupBy": [
                {
                  "params": [
                    "$__interval"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "chassis"
                  ],
                  "type": "tag"
                },
                {
                  "params": [
                    "bp_port"
                  ],
                  "type": "tag"
                },
                {
                  "params": [
                    "peer_service_profile"
                  ],
                  "type": "tag"
                },
                {
                  "params": [
                    "null"
                  ],
                  "type": "fill"
                }
              ],
              "measurement": "BackplanePortStats",
              "orderByTime": "ASC",
              "policy": "default",
              "query": "SELECT non_negative_difference(mean(\"pause_tx\"))  / [[polling_interval]] AS \"TX PAUSE\" FROM \"$db\".\"$rp\".\"BackplanePortStats\" WHERE (\"domain\" =~ /^$domain$/ AND \"fi_id\" = 'B' AND \"chassis\" =~ /^$chassis$/) AND $timeFilter GROUP BY time($__interval), \"chassis\", \"bp_port\", \"peer_service_profile\" fill(null)",
              "rawQuery": true,
              "refId": "A",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "pause_tx"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "mean"
                  },
                  {
                    "params": [],
                    "type": "non_negative_difference"
                  },
                  {
                    "params": [
                      " / [[polling_interval]]"
                    ],
                    "type": "math"
                  },
                  {
                    "params": [
                      "TX PAUSE"
                    ],
                    "type": "alias"
                  }
                ]
              ],
              "tags": [
                {
                  "key": "domain",
                  "operator": "=~",
                  "value": "/^$domain$/"
                },
                {
                  "condition": "AND",
                  "key": "fi_id",
                  "operator": "=",
                  "value": "B"
                },
                {
                  "condition": "AND",
                  "key": "chassis",
                  "operator": "=~",
                  "value": "/^$chassis$/"
                }
              ]
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Backplane port RX PAUSE stats in $chassis via FI-B",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": "0",
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        }
      ],
      "repeat": "chassis",
      "title": "PAUSE frame monitoring on Backplane Ports in $chassis",
      "type": "row"
    },
    {
      "collapsed": true,
      "datasource": "$data_source",
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 24
      },
      "id": 134,
      "panels": [
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "datasource": "$data_source",
          "description": "**Use Case**: Find the root cause of ingress traffic congestion. \n\n![](/public/img/utm/chassis_ingress_congestion.png)\n\n**How to use**:  Select a UCS domain, chassis, and Backplane Port. One row is created per chassis. Graphs are generated for backplanes ports in that chassis within the row. Choose one Chassis at a time if you have many chassis. \n\nFI and FEX/IOM ports do not originate or terminate the traffic. Mostly, the real cause of congestion is one of the servers which is unable to receive traffic at the incoming rate. Try to find one of those servers by comparing unusual PAUSE frame activity and traffic spikes. Refer to the graphs on the left with RX PAUSE frames on IOM/FEX backplane ports which indicate a backpressure applied by Server against ingress traffic.  PAUSE frames may be exchanged under normal conditions also. So, find unusual PAUSE frame activity with below symptoms (not an exhaustive list):\n- PAUSE frame rate in tens or hundreds per second is bad. Thousands, tens-of-thousands, or Millions per second is terribly bad.\n- Look for spike in PAUSE frame rate. Low stable values are probably fine.\n- Does one port among many other similar ports has higher PAUSE frame activity?\n\nOnce you have a suspect backplane port with unusual PAUSE frame activity, look at the graph on the right which shows the service profile and vNIC/vHBA traffic using that backplane port. High traffic rate or traffic spikes, especially with matching timestamp with unusual PAUSE frame activity, indicate that high utilization is the cause of congestion.\n\n**Details**: \n- A server sends PAUSE frames to IOM/FEX backplane port if it is unable to receive the traffic at the ingress rate. These frames are reported as RX PAUSE on IOM/FEX backplane ports. \n- PAUSE frames are not reported at per vNIC/vHBA granularity. \n- PAUSE frames are used by FC traffic (no-drop class) only. Congestion in Eth traffic is generally indicated by frame drops.\n",
          "fieldConfig": {
            "defaults": {
              "custom": {}
            },
            "overrides": []
          },
          "fill": 0,
          "fillGradient": 0,
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 0,
            "y": 8
          },
          "hiddenSeries": false,
          "id": 2,
          "interval": "[[polling_interval]]s",
          "legend": {
            "alignAsTable": true,
            "avg": true,
            "current": false,
            "max": true,
            "min": false,
            "rightSide": true,
            "show": true,
            "sort": "current",
            "sortDesc": true,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "percentage": false,
          "pluginVersion": "7.1.1",
          "pointradius": 2,
          "points": true,
          "renderer": "flot",
          "repeat": "bp_port",
          "repeatDirection": "v",
          "scopedVars": {
            "bp_port": {
              "selected": true,
              "text": "2/01",
              "value": "2/01"
            }
          },
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "alias": "$col <-- $tag_peer_service_profile",
              "groupBy": [
                {
                  "params": [
                    "$__interval"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "domain"
                  ],
                  "type": "tag"
                },
                {
                  "params": [
                    "chassis"
                  ],
                  "type": "tag"
                },
                {
                  "params": [
                    "bp_port"
                  ],
                  "type": "tag"
                },
                {
                  "params": [
                    "null"
                  ],
                  "type": "fill"
                }
              ],
              "measurement": "BackplanePortStats",
              "orderByTime": "ASC",
              "policy": "default",
              "query": "SELECT non_negative_difference(mean(\"pause_rx\"))  / [[polling_interval]] AS \"RX PAUSE\" FROM \"$db\".\"$rp\".\"BackplanePortStats\" WHERE (\"domain\" =~ /^$domain$/ AND \"fi_id\" =~ /^$fi_id$/ AND \"chassis\" =~ /^$chassis$/ AND \"bp_port\" =~ /^$bp_port$/) AND $timeFilter GROUP BY time($__interval), \"domain\", \"chassis\", \"bp_port\",\"peer_service_profile\" fill(null)",
              "rawQuery": true,
              "refId": "A",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "pause_rx"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "mean"
                  },
                  {
                    "params": [],
                    "type": "non_negative_difference"
                  },
                  {
                    "params": [
                      " / [[polling_interval]]"
                    ],
                    "type": "math"
                  },
                  {
                    "params": [
                      "RX PAUSE"
                    ],
                    "type": "alias"
                  }
                ]
              ],
              "tags": [
                {
                  "key": "domain",
                  "operator": "=~",
                  "value": "/^$domain$/"
                },
                {
                  "condition": "AND",
                  "key": "fi_id",
                  "operator": "=~",
                  "value": "/^$fi_id$/"
                },
                {
                  "condition": "AND",
                  "key": "chassis",
                  "operator": "=~",
                  "value": "/^$chassis$/"
                },
                {
                  "condition": "AND",
                  "key": "bp_port",
                  "operator": "=~",
                  "value": "/^$bp_port$/"
                }
              ]
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "RX PAUSE on Backplane port $bp_port in $chassis",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": "0",
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "datasource": "$data_source",
          "description": "Refer to the description of the panel on the left. Compare high PAUSE frame activity from the left graph to the high traffic activity in this graph.",
          "fieldConfig": {
            "defaults": {
              "custom": {}
            },
            "overrides": []
          },
          "fill": 1,
          "fillGradient": 0,
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 12,
            "y": 8
          },
          "hiddenSeries": false,
          "id": 3,
          "interval": "[[polling_interval]]s",
          "legend": {
            "alignAsTable": true,
            "avg": true,
            "current": false,
            "max": true,
            "min": false,
            "rightSide": true,
            "show": true,
            "sort": null,
            "sortDesc": null,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "percentage": false,
          "pluginVersion": "7.1.1",
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "repeat": "bp_port",
          "repeatDirection": "v",
          "scopedVars": {
            "bp_port": {
              "selected": true,
              "text": "2/01",
              "value": "2/01"
            }
          },
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": true,
          "steppedLine": false,
          "targets": [
            {
              "alias": "$tag_service_profile $tag_vif_name $col",
              "groupBy": [
                {
                  "params": [
                    "$__interval"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "vif_name"
                  ],
                  "type": "tag"
                },
                {
                  "params": [
                    "service_profile"
                  ],
                  "type": "tag"
                },
                {
                  "params": [
                    "linear"
                  ],
                  "type": "fill"
                }
              ],
              "measurement": "VnicStats",
              "orderByTime": "ASC",
              "policy": "default",
              "query": "SELECT mean(\"bytes_rx_delta\")  *8/[[polling_interval]] AS \"RX\" FROM \"$db\".\"$rp\".\"VnicStats\" WHERE (\"domain\" =~ /^$domain$/ AND \"fi_id\" =~ /^$fi_id$/ AND \"chassis\" =~ /^$chassis$/ AND \"peer_port\" =~ /^$bp_port$/) AND $timeFilter GROUP BY time($__interval), \"vif_name\", \"service_profile\" fill(linear)",
              "rawQuery": true,
              "refId": "A",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "bytes_rx_delta"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "mean"
                  },
                  {
                    "params": [
                      " *8/[[polling_interval]]"
                    ],
                    "type": "math"
                  },
                  {
                    "params": [
                      "RX"
                    ],
                    "type": "alias"
                  }
                ]
              ],
              "tags": [
                {
                  "key": "domain",
                  "operator": "=~",
                  "value": "/^$domain$/"
                },
                {
                  "condition": "AND",
                  "key": "fi_id",
                  "operator": "=~",
                  "value": "/^$fi_id$/"
                },
                {
                  "condition": "AND",
                  "key": "chassis",
                  "operator": "=~",
                  "value": "/^$chassis$/"
                },
                {
                  "condition": "AND",
                  "key": "peer_port",
                  "operator": "=~",
                  "value": "/^$bp_port$/"
                }
              ]
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "RX Traffic to vIFs from Backplane port $bp_port in $chassis",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "format": "bps",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": "0",
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        }
      ],
      "repeat": "chassis",
      "title": "Ingress Traffic Congestion in $chassis",
      "type": "row"
    },
    {
      "collapsed": true,
      "datasource": "$data_source",
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 25
      },
      "id": 5,
      "panels": [
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "datasource": "$data_source",
          "description": "**Use Case**: Find the root cause of egress traffic congestion. \n\n![](/public/img/utm/chassis_egress_congestion.png)\n\n**How to use**:  Select a UCS domain, chassis, and Backplane Port. One row is created per chassis. Graphs are generated for backplanes ports in that chassis within the row. Choose one Chassis at a time if you have many chassis. \n\nFI and FEX/IOM ports do not originate or terminate the traffic. Mostly, the real cause of congestion is one of the servers which is unable to sending data faster than the receiver can ingest it. Try to find one of those servers by comparing unusual PAUSE frame activity and traffic spikes. Refer to the graphs on the left with TX PAUSE frames on IOM/FEX backplane ports which indicate a backpressure applied to Servers against egress traffic.  PAUSE frames may be exchanged under normal conditions also. So, find unusual PAUSE frame activity with below symptoms (not an exhaustive list):\n- PAUSE frame rate in tens or hundreds per second is bad. Thousands, tens-of-thousands, or Millions per second is terribly bad.\n- Look for spike in PAUSE frame rate. Low stable values are probably fine.\n- Does one port among many other similar ports has higher PAUSE frame activity?\n\nOnce you have a suspect backplane port with unusual PAUSE frame activity, look at the graph on the right which shows the service profile and vNIC/vHBA traffic using that backplane port. High traffic rate or traffic spikes, especially with matching timestamp with unusual PAUSE frame activity, indicate that high utilization is the cause of congestion.\n\n**Details**: \n- A server receives PAUSE frames if it is transmitting data faster than the receiver can accept it. These frames are reported as TX PAUSE on the connected port (on FI or FEX or IOM). \n- PAUSE frames are not reported at per vNIC/vHBA granularity. \n- PAUSE frames are used by FC traffic (no-drop class) only. Congestion in Eth traffic is generally indicated by frame drops.\n",
          "fieldConfig": {
            "defaults": {
              "custom": {}
            },
            "overrides": []
          },
          "fill": 0,
          "fillGradient": 0,
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 0,
            "y": 9
          },
          "hiddenSeries": false,
          "id": 6,
          "interval": "[[polling_interval]]s",
          "legend": {
            "alignAsTable": true,
            "avg": true,
            "current": false,
            "max": true,
            "min": false,
            "rightSide": true,
            "show": true,
            "sort": "current",
            "sortDesc": true,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "percentage": false,
          "pluginVersion": "7.1.1",
          "pointradius": 2,
          "points": true,
          "renderer": "flot",
          "scopedVars": {
            "chassis": {
              "selected": false,
              "text": "chassis-1",
              "value": "chassis-1"
            }
          },
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "alias": "$col --> $tag_peer_service_profile",
              "groupBy": [
                {
                  "params": [
                    "$__interval"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "domain"
                  ],
                  "type": "tag"
                },
                {
                  "params": [
                    "chassis"
                  ],
                  "type": "tag"
                },
                {
                  "params": [
                    "bp_port"
                  ],
                  "type": "tag"
                },
                {
                  "params": [
                    "null"
                  ],
                  "type": "fill"
                }
              ],
              "measurement": "BackplanePortStats",
              "orderByTime": "ASC",
              "policy": "default",
              "query": "SELECT non_negative_difference(mean(\"pause_tx\"))  / [[polling_interval]] AS \"TX PAUSE\" FROM \"$db\".\"$rp\".\"BackplanePortStats\" WHERE (\"domain\" =~ /^$domain$/ AND \"fi_id\" =~ /^$fi_id$/ AND \"chassis\" =~ /^$chassis$/ AND \"bp_port\" =~ /^$bp_port$/) AND $timeFilter GROUP BY time($__interval), \"domain\", \"chassis\", \"bp_port\",\"peer_service_profile\" fill(null)",
              "rawQuery": true,
              "refId": "A",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "pause_tx"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "mean"
                  },
                  {
                    "params": [],
                    "type": "non_negative_difference"
                  },
                  {
                    "params": [
                      " / [[polling_interval]]"
                    ],
                    "type": "math"
                  },
                  {
                    "params": [
                      "TX PAUSE"
                    ],
                    "type": "alias"
                  }
                ]
              ],
              "tags": [
                {
                  "key": "domain",
                  "operator": "=~",
                  "value": "/^$domain$/"
                },
                {
                  "condition": "AND",
                  "key": "fi_id",
                  "operator": "=~",
                  "value": "/^$fi_id$/"
                },
                {
                  "condition": "AND",
                  "key": "chassis",
                  "operator": "=~",
                  "value": "/^$chassis$/"
                },
                {
                  "condition": "AND",
                  "key": "bp_port",
                  "operator": "=~",
                  "value": "/^$bp_port$/"
                }
              ]
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "TX PAUSE on Backplane port $bp_port in $chassis",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": "0",
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "datasource": "$data_source",
          "description": "Refer to the description of the panel on the left. Compare high PAUSE frame activity from the left graph to the high traffic activity in this graph.",
          "fieldConfig": {
            "defaults": {
              "custom": {}
            },
            "overrides": []
          },
          "fill": 1,
          "fillGradient": 0,
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 12,
            "y": 9
          },
          "hiddenSeries": false,
          "id": 7,
          "interval": "[[polling_interval]]s",
          "legend": {
            "alignAsTable": true,
            "avg": true,
            "current": false,
            "max": true,
            "min": false,
            "rightSide": true,
            "show": true,
            "sort": "current",
            "sortDesc": true,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "percentage": false,
          "pluginVersion": "7.1.1",
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "scopedVars": {
            "chassis": {
              "selected": false,
              "text": "chassis-1",
              "value": "chassis-1"
            }
          },
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": true,
          "steppedLine": false,
          "targets": [
            {
              "alias": "$tag_service_profile $tag_vif_name $col",
              "groupBy": [
                {
                  "params": [
                    "$__interval"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "vif_name"
                  ],
                  "type": "tag"
                },
                {
                  "params": [
                    "service_profile"
                  ],
                  "type": "tag"
                },
                {
                  "params": [
                    "linear"
                  ],
                  "type": "fill"
                }
              ],
              "measurement": "VnicStats",
              "orderByTime": "ASC",
              "policy": "default",
              "query": "SELECT mean(\"bytes_tx_delta\")  *8/[[polling_interval]] AS \"TX\" FROM \"$db\".\"$rp\".\"VnicStats\" WHERE (\"domain\" =~ /^$domain$/ AND \"fi_id\" =~ /^$fi_id$/ AND \"chassis\" =~ /^$chassis$/ AND \"peer_port\" =~ /^$bp_port$/) AND $timeFilter GROUP BY time($__interval), \"vif_name\", \"service_profile\" fill(linear)",
              "rawQuery": true,
              "refId": "A",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "bytes_tx_delta"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "mean"
                  },
                  {
                    "params": [
                      " *8/[[polling_interval]]"
                    ],
                    "type": "math"
                  },
                  {
                    "params": [
                      "TX"
                    ],
                    "type": "alias"
                  }
                ]
              ],
              "tags": [
                {
                  "key": "domain",
                  "operator": "=~",
                  "value": "/^$domain$/"
                },
                {
                  "condition": "AND",
                  "key": "fi_id",
                  "operator": "=~",
                  "value": "/^$fi_id$/"
                },
                {
                  "condition": "AND",
                  "key": "chassis",
                  "operator": "=~",
                  "value": "/^$chassis$/"
                },
                {
                  "condition": "AND",
                  "key": "peer_port",
                  "operator": "=~",
                  "value": "/^$bp_port$/"
                }
              ]
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "TX Traffic from vIFs to Backplane port $bp_port in $chassis",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "format": "bps",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": "0",
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        }
      ],
      "repeat": "chassis",
      "title": "Egress Traffic Congestion in $chassis",
      "type": "row"
    }
  ],
  "schemaVersion": 26,
  "style": "dark",
  "tags": [
    "cisco",
    "UCS"
  ],
  "templating": {
    "list": [
      {
        "current": {
          "selected": false,
          "text": "telegraf",
          "value": "telegraf"
        },
        "hide": 2,
        "label": "Database",
        "name": "db",
        "options": [
          {
            "selected": true,
            "text": "telegraf",
            "value": "telegraf"
          }
        ],
        "query": "telegraf",
        "skipUrlSync": false,
        "type": "constant"
      },
      {
        "current": {
          "selected": false,
          "text": "autogen",
          "value": "autogen"
        },
        "hide": 2,
        "label": "Retention Policy",
        "name": "rp",
        "options": [
          {
            "selected": true,
            "text": "autogen",
            "value": "autogen"
          }
        ],
        "query": "autogen",
        "skipUrlSync": false,
        "type": "constant"
      },
      {
        "current": {
          "selected": false,
          "text": "InfluxDB",
          "value": "InfluxDB"
        },
        "hide": 0,
        "includeAll": false,
        "label": "Data Source",
        "multi": false,
        "name": "data_source",
        "options": [],
        "query": "influxdb",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "type": "datasource"
      },
      {
        "allValue": null,
        "current": {
          "selected": false,
          "text": "172.22.163.59",
          "value": "172.22.163.59"
        },
        "datasource": "$data_source",
        "definition": "show tag values from \"$db\".\"$rp\".\"FIEnvStats\" with key=domain where $timeFilter",
        "hide": 0,
        "includeAll": false,
        "label": "UCS Domain",
        "multi": false,
        "name": "domain",
        "options": [],
        "query": "show tag values from \"$db\".\"$rp\".\"FIEnvStats\" with key=domain where $timeFilter",
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {
          "selected": false,
          "text": "A",
          "value": "A"
        },
        "hide": 0,
        "includeAll": false,
        "label": "FI ID (A or B)",
        "multi": false,
        "name": "fi_id",
        "options": [
          {
            "selected": false,
            "text": "A",
            "value": "A"
          },
          {
            "selected": true,
            "text": "B",
            "value": "B"
          }
        ],
        "query": "A,B",
        "queryValue": "",
        "skipUrlSync": false,
        "type": "custom"
      },
      {
        "allValue": null,
        "current": {
          "selected": false,
          "text": "1/04",
          "value": "1/04"
        },
        "datasource": "$data_source",
        "definition": "show tag values from \"$db\".\"$rp\".\"FIServerPortStats\" with key=port where domain =~ /$domain/ and fi_id =~ /$fi_id/ and channel != '' and $timeFilter",
        "hide": 0,
        "includeAll": true,
        "label": "Server Port",
        "multi": true,
        "name": "server_port",
        "options": [],
        "query": "show tag values from \"$db\".\"$rp\".\"FIServerPortStats\" with key=port where domain =~ /$domain/ and fi_id =~ /$fi_id/ and channel != '' and $timeFilter",
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {
          "selected": false,
          "text": "All",
          "value": "$__all"
        },
        "datasource": "$data_source",
        "definition": "show tag values from \"$db\".\"$rp\".\"FIServerPortStats\" with key=peer where domain =~ /$domain/ and fi_id =~ /$fi_id/ and port =~ /$server_port/ and  $timeFilter",
        "hide": 0,
        "includeAll": true,
        "label": "Chassis",
        "multi": true,
        "name": "chassis",
        "options": [],
        "query": "show tag values from \"$db\".\"$rp\".\"FIServerPortStats\" with key=peer where domain =~ /$domain/ and fi_id =~ /$fi_id/ and port =~ /$server_port/ and  $timeFilter",
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {
          "selected": false,
          "text": "All",
          "value": "$__all"
        },
        "datasource": "$data_source",
        "definition": "show tag values from \"$db\".\"$rp\".\"BackplanePortStats\" with key=bp_port where domain =~ /$domain/ and fi_id =~ /$fi_id/ and chassis =~ /$chassis/ and channel != ''  and $timeFilter",
        "hide": 0,
        "includeAll": true,
        "label": "Backplane Port",
        "multi": true,
        "name": "bp_port",
        "options": [],
        "query": "show tag values from \"$db\".\"$rp\".\"BackplanePortStats\" with key=bp_port where domain =~ /$domain/ and fi_id =~ /$fi_id/ and chassis =~ /$chassis/ and channel != ''  and $timeFilter",
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "current": {
          "text": "60",
          "value": "60"
        },
        "hide": 2,
        "label": null,
        "name": "polling_interval",
        "options": [
          {
            "selected": true,
            "text": "60",
            "value": "60"
          }
        ],
        "query": "60",
        "skipUrlSync": false,
        "type": "constant"
      }
    ]
  },
  "time": {
    "from": "now-6h",
    "to": "now"
  },
  "timepicker": {
    "refresh_intervals": [
      "10s",
      "30s",
      "1m",
      "5m",
      "15m",
      "30m",
      "1h",
      "2h",
      "1d"
    ],
    "time_options": [
      "5m",
      "15m",
      "1h",
      "6h",
      "12h",
      "24h",
      "2d",
      "7d",
      "30d"
    ]
  },
  "timezone": "browser",
  "title": "Chassis PAUSE frame monitoring",
  "uid": "SVO-VNiWk",
  "version": 2
}