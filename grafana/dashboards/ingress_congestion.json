{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": "$data_source",
        "enable": false,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "showIn": 0,
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "gnetId": null,
  "graphTooltip": 0,
  "id": 6,
  "iteration": 1623390969801,
  "links": [],
  "panels": [
    {
      "datasource": "$data_source",
      "description": "![Cisco UCS Architecture](/public/img/utm/ucs_architecture.png)\nUTM collector - v$utm_collector_ver  \nUTM GUI - v0.52  \nby Paresh Gupta",
      "fieldConfig": {
        "defaults": {},
        "overrides": []
      },
      "gridPos": {
        "h": 3,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 68,
      "options": {
        "content": "<table style=\"margin: 0px; padding: 0px; border: 1px; border-collapse: collapse;\" width=\"100%\">\n<tbody>\n<tr style=\"margin: 0px; padding: 0px;\">\n<td style=\"width: 15%; margin: 0px; padding: 0px; border: none;\" valign=\"middle\"><img id='cisco_logo' style=\"display: block; margin-left: auto; margin-right: auto;\" src='/public/img/utm/cisco_logo.png' width=\"120\" />\n</td>\n<td style=\"width: 70%; margin: 0px; padding: 0px; border: none;\">\n<h2 style=\"text-align: center; margin: 2px;\"><span style=\"color: #0085FC;\"><strong>UTM - UCS Traffic Monitoring</strong></span></h2>\n</td>\n<td style=\"width: 15%; margin: 0px; border: none;\" valign=\"middle\"><img id='your_logo' style=\"display: block; margin-left: auto; margin-right: auto;\" src='/public/img/utm/your_logo.png' alt=\"\" width=\"120\"/>\n</td>\n</tr>\n</tbody>\n</table>",
        "mode": "html"
      },
      "pluginVersion": "7.5.7",
      "targets": [
        {
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "orderByTime": "ASC",
          "policy": "default",
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": []
        }
      ],
      "timeFrom": null,
      "timeShift": null,
      "transparent": true,
      "type": "text"
    },
    {
      "datasource": "$data_source",
      "fieldConfig": {
        "defaults": {},
        "overrides": []
      },
      "flowchartsData": {
        "flowcharts": [
          {
            "allowDrawio": false,
            "bgColor": null,
            "center": true,
            "csv": "## See more information for the syntax at https://drawio-app.com/import-from-csv-to-drawio/\n##\n## Example CSV. Use ## for comments and # for configuration.\n## The following names are reserved and should not be used (or ignored):\n## id, tooltip, placeholder(s), link and label (see below)\n##\n#\n## Node label with placeholders and HTML.\n## Default is '%name_of_first_column%'.\n#\n# label: %name%<br><i style=\"color:gray;\">%position%</i><br><a href=\"mailto:%email%\">Email</a>\n#\n## Node style (placeholders are replaced once).\n## Default is the current style for nodes.\n#\n# style: label;image=%image%;whiteSpace=wrap;html=1;rounded=1;fillColor=%fill%;strokeColor=%stroke%;\n#\n## Parent style for nodes with child nodes (placeholders are replaced once).\n#\n# parentstyle: swimlane;whiteSpace=wrap;html=1;childLayout=stackLayout;horizontal=1;horizontalStack=0;resizeParent=1;resizeLast=0;collapsible=1;\n#\n## Optional column name that contains a reference to a named style in styles.\n## Default is the current style for nodes.\n#\n# stylename: -\n#\n## JSON for named styles of the form {\"name\": \"style\", \"name\": \"style\"} where style is a cell style with\n## placeholders that are replaced once.\n#\n# styles: -\n#\n## Optional column name that contains a reference to a named label in labels.\n## Default is the current label.\n#\n# labelname: -\n#\n## JSON for named labels of the form {\"name\": \"label\", \"name\": \"label\"} where label is a cell label with\n## placeholders.\n#\n# labels: -\n#\n## Uses the given column name as the identity for cells (updates existing cells).\n## Default is no identity (empty value or -).\n#\n# identity: -\n#\n## Uses the given column name as the parent reference for cells. Default is no parent (empty or -).\n## The identity above is used for resolving the reference so it must be specified.\n#\n# parent: -\n#\n## Adds a prefix to the identity of cells to make sure they do not collide with existing cells (whose\n## IDs are numbers from 0..n, sometimes with a GUID prefix in the context of realtime collaboration).\n## Default is csvimport-.\n#\n# namespace: csvimport-\n#\n## Connections between rows (\"from\": source colum, \"to\": target column).\n## Label, style and invert are optional. Defaults are '', current style and false.\n## If placeholders are used in the style, they are replaced with data from the source.\n## An optional placeholders can be set to target to use data from the target instead.\n## In addition to label, an optional fromlabel and tolabel can be used to name the column\n## that contains the text for the label in the edges source or target (invert ignored).\n## The label is concatenated in the form fromlabel + label + tolabel if all are defined.\n## The target column may contain a comma-separated list of values.\n## Multiple connect entries are allowed.\n#\n# connect: {\"from\": \"manager\", \"to\": \"name\", \"invert\": true, \"label\": \"manages\", \\\n#          \"style\": \"curved=1;endArrow=blockThin;endFill=1;fontSize=11;\"}\n# connect: {\"from\": \"refs\", \"to\": \"id\", \"style\": \"curved=1;fontSize=11;\"}\n#\n## Node x-coordinate. Possible value is a column name. Default is empty. Layouts will\n## override this value.\n#\n# left: \n#\n## Node y-coordinate. Possible value is a column name. Default is empty. Layouts will\n## override this value.\n#\n# top: \n#\n## Node width. Possible value is a number (in px), auto or an @ sign followed by a column\n## name that contains the value for the width. Default is auto.\n#\n# width: auto\n#\n## Node height. Possible value is a number (in px), auto or an @ sign followed by a column\n## name that contains the value for the height. Default is auto.\n#\n# height: auto\n#\n## Padding for autosize. Default is 0.\n#\n# padding: -12\n#\n## Comma-separated list of ignored columns for metadata. (These can be\n## used for connections and styles but will not be added as metadata.)\n#\n# ignore: id,image,fill,stroke,refs,manager\n#\n## Column to be renamed to link attribute (used as link).\n#\n# link: url\n#\n## Spacing between nodes. Default is 40.\n#\n# nodespacing: 40\n#\n## Spacing between levels of hierarchical layouts. Default is 100.\n#\n# levelspacing: 100\n#\n## Spacing between parallel edges. Default is 40. Use 0 to disable.\n#\n# edgespacing: 40\n#\n## Name or JSON of layout. Possible values are auto, none, verticaltree, horizontaltree,\n## verticalflow, horizontalflow, organic, circle or a JSON string as used in Layout, Apply.\n## Default is auto.\n#\n# layout: auto\n#\n## ---- CSV below this line. First line are column names. ----\nname,position,id,location,manager,email,fill,stroke,refs,url,image\nEvan Miller,CFO,emi,Office 1,,me@example.com,#dae8fc,#6c8ebf,,https://www.draw.io,https://cdn3.iconfinder.com/data/icons/user-avatars-1/512/users-9-2-128.png\nEdward Morrison,Brand Manager,emo,Office 2,Evan Miller,me@example.com,#d5e8d4,#82b366,,https://www.draw.io,https://cdn3.iconfinder.com/data/icons/user-avatars-1/512/users-10-3-128.png\nRon Donovan,System Admin,rdo,Office 3,Evan Miller,me@example.com,#d5e8d4,#82b366,\"emo,tva\",https://www.draw.io,https://cdn3.iconfinder.com/data/icons/user-avatars-1/512/users-2-128.png\nTessa Valet,HR Director,tva,Office 4,Evan Miller,me@example.com,#d5e8d4,#82b366,,https://www.draw.io,https://cdn3.iconfinder.com/data/icons/user-avatars-1/512/users-3-128.png\n",
            "download": false,
            "editorTheme": "dark",
            "editorUrl": "https://www.draw.io",
            "enableAnim": true,
            "grid": false,
            "lock": true,
            "name": "Main",
            "scale": true,
            "tooltip": true,
            "type": "xml",
            "url": "http://<YourUrl>/<Your XML/drawio file/api>",
            "xml": "<mxGraphModel>\n    <root>\n        <mxCell id=\"U3Yb-M3iW0U3TkC6f_VT-0\"/>\n        <mxCell id=\"qjMXR-8qFvfJkbGcyA1T-0\" value=\"\" style=\"rounded=1;whiteSpace=wrap;html=1;spacing=0;strokeColor=none;fontColor=#FFFFFF;fontSize=13;arcSize=50;fillColor=#E6E6E6;\" parent=\"U3Yb-M3iW0U3TkC6f_VT-0\" vertex=\"1\">\n            <mxGeometry y=\"558\" width=\"1220\" height=\"20\" as=\"geometry\"/>\n        </mxCell>\n        <UserObject label=\"Locations\" link=\"/d/ri2OFp4Wz/locations\" id=\"qjMXR-8qFvfJkbGcyA1T-1\">\n            <mxCell style=\"rounded=1;whiteSpace=wrap;html=1;spacing=0;strokeColor=none;fontColor=#FFFFFF;fontSize=10;arcSize=50;fillColor=#676767;\" parent=\"U3Yb-M3iW0U3TkC6f_VT-0\" vertex=\"1\">\n                <mxGeometry x=\"30\" y=\"560\" width=\"140\" height=\"16\" as=\"geometry\"/>\n            </mxCell>\n        </UserObject>\n        <UserObject label=\"UCS Domain Overview\" link=\"/d/Inte2EIWk/ucs-domain-overview\" id=\"qjMXR-8qFvfJkbGcyA1T-2\">\n            <mxCell style=\"rounded=1;whiteSpace=wrap;html=1;spacing=0;strokeColor=none;fontColor=#FFFFFF;fontSize=10;arcSize=50;fillColor=#676767;\" parent=\"U3Yb-M3iW0U3TkC6f_VT-0\" vertex=\"1\">\n                <mxGeometry x=\"200\" y=\"560\" width=\"140\" height=\"16\" as=\"geometry\"/>\n            </mxCell>\n        </UserObject>\n        <UserObject label=\"UCS Domain Traffic\" link=\"/d/W7LSukHWz/ucs-domain-traffic\" id=\"qjMXR-8qFvfJkbGcyA1T-3\">\n            <mxCell style=\"rounded=1;whiteSpace=wrap;html=1;spacing=0;strokeColor=none;fontColor=#FFFFFF;fontSize=10;arcSize=50;fillColor=#676767;\" parent=\"U3Yb-M3iW0U3TkC6f_VT-0\" vertex=\"1\">\n                <mxGeometry x=\"370\" y=\"560\" width=\"140\" height=\"16\" as=\"geometry\"/>\n            </mxCell>\n        </UserObject>\n        <UserObject label=\"UCS Chassis Traffic\" link=\"/d/KOM8ZHNWz/ucs-chassis-traffic\" id=\"qjMXR-8qFvfJkbGcyA1T-4\">\n            <mxCell style=\"rounded=1;whiteSpace=wrap;html=1;spacing=0;strokeColor=none;fontColor=#FFFFFF;fontSize=10;arcSize=50;fillColor=#676767;\" parent=\"U3Yb-M3iW0U3TkC6f_VT-0\" vertex=\"1\">\n                <mxGeometry x=\"540\" y=\"560\" width=\"140\" height=\"16\" as=\"geometry\"/>\n            </mxCell>\n        </UserObject>\n        <UserObject label=\"Server Traffic\" link=\"/d/Z0M_N1vWz/service-profile-stats\" id=\"qjMXR-8qFvfJkbGcyA1T-5\">\n            <mxCell style=\"rounded=1;whiteSpace=wrap;html=1;spacing=0;strokeColor=none;fontColor=#FFFFFF;fontSize=10;arcSize=50;fillColor=#676767;\" parent=\"U3Yb-M3iW0U3TkC6f_VT-0\" vertex=\"1\">\n                <mxGeometry x=\"710\" y=\"560\" width=\"140\" height=\"16\" as=\"geometry\"/>\n            </mxCell>\n        </UserObject>\n        <UserObject label=\"Congestion Monitoring\" link=\"/d/Sve32sDZk/congestion-monitoring\" id=\"qjMXR-8qFvfJkbGcyA1T-6\">\n            <mxCell style=\"rounded=1;whiteSpace=wrap;html=1;spacing=0;strokeColor=none;fontColor=#FFFFFF;fontSize=10;arcSize=50;fillColor=#0085FC;\" parent=\"U3Yb-M3iW0U3TkC6f_VT-0\" vertex=\"1\">\n                <mxGeometry x=\"880\" y=\"560\" width=\"140\" height=\"16\" as=\"geometry\"/>\n            </mxCell>\n        </UserObject>\n        <UserObject label=\"Power Consumption\" link=\"/d/CXwb3tn4z/power-consumption\" id=\"qjMXR-8qFvfJkbGcyA1T-7\">\n            <mxCell style=\"rounded=1;whiteSpace=wrap;html=1;spacing=0;strokeColor=none;fontColor=#FFFFFF;fontSize=10;arcSize=50;fillColor=#676767;\" parent=\"U3Yb-M3iW0U3TkC6f_VT-0\" vertex=\"1\">\n                <mxGeometry x=\"1050\" y=\"560\" width=\"140\" height=\"16\" as=\"geometry\"/>\n            </mxCell>\n        </UserObject>\n    </root>\n</mxGraphModel>",
            "zoom": "100%"
          }
        ]
      },
      "format": "short",
      "graphId": "flowchart_75",
      "gridPos": {
        "h": 2,
        "w": 24,
        "x": 0,
        "y": 3
      },
      "id": 75,
      "newFlag": false,
      "pluginVersion": "7.1.0",
      "rulesData": {
        "rulesData": [
          {
            "aggregation": "current",
            "alias": "Locations",
            "colors": [
              "rgba(50, 172, 45, 0.97)"
            ],
            "column": "Time",
            "dateFormat": "YYYY-MM-DD HH:mm:ss",
            "decimals": 2,
            "eventData": [],
            "eventProp": "id",
            "eventRegEx": false,
            "gradient": false,
            "hidden": false,
            "invert": false,
            "linkData": [
              {
                "hidden": false,
                "linkOn": "a",
                "linkParams": false,
                "linkUrl": "/d/ri2OFp4Wz/locations?from=${__from}&to=${__to}",
                "pattern": "locations"
              }
            ],
            "linkProp": "id",
            "linkRegEx": true,
            "mappingType": 1,
            "metricType": "serie",
            "order": 1,
            "overlayIcon": false,
            "pattern": "FIEnvStats.last",
            "rangeData": [],
            "reduce": true,
            "refId": "A",
            "sanitize": false,
            "shapeData": [],
            "shapeProp": "id",
            "shapeRegEx": true,
            "stringThresholds": [],
            "textData": [],
            "textProp": "id",
            "textRegEx": true,
            "thresholds": [],
            "tooltip": false,
            "tooltipColors": false,
            "tooltipLabel": "",
            "tooltipOn": "a",
            "tpDirection": "v",
            "tpGraph": false,
            "tpGraphHigh": null,
            "tpGraphLow": null,
            "tpGraphScale": "linear",
            "tpGraphSize": "100%",
            "tpGraphType": "line",
            "type": "number",
            "unit": "short",
            "valueData": []
          },
          {
            "aggregation": "current",
            "alias": "domain_overview",
            "colors": [
              "rgba(50, 172, 45, 0.97)"
            ],
            "column": "Time",
            "dateFormat": "YYYY-MM-DD HH:mm:ss",
            "decimals": 2,
            "eventData": [],
            "eventProp": "id",
            "eventRegEx": false,
            "gradient": false,
            "hidden": false,
            "invert": false,
            "linkData": [
              {
                "hidden": false,
                "linkOn": "a",
                "linkParams": false,
                "linkUrl": "/d/Inte2EIWk/ucs-domain-overview?from=${__from}&to=${__to}&var-domain=${domain}",
                "pattern": "domain_overview"
              }
            ],
            "linkProp": "id",
            "linkRegEx": true,
            "mappingType": 1,
            "metricType": "serie",
            "order": 2,
            "overlayIcon": false,
            "pattern": "FIEnvStats.last",
            "rangeData": [],
            "reduce": true,
            "refId": "A",
            "sanitize": false,
            "shapeData": [],
            "shapeProp": "id",
            "shapeRegEx": true,
            "stringThresholds": [],
            "textData": [],
            "textProp": "id",
            "textRegEx": true,
            "thresholds": [],
            "tooltip": false,
            "tooltipColors": false,
            "tooltipLabel": "",
            "tooltipOn": "a",
            "tpDirection": "v",
            "tpGraph": false,
            "tpGraphHigh": null,
            "tpGraphLow": null,
            "tpGraphScale": "linear",
            "tpGraphSize": "100%",
            "tpGraphType": "line",
            "type": "number",
            "unit": "short",
            "valueData": []
          },
          {
            "aggregation": "current",
            "alias": "domain_traffic",
            "colors": [
              "rgba(50, 172, 45, 0.97)"
            ],
            "column": "Time",
            "dateFormat": "YYYY-MM-DD HH:mm:ss",
            "decimals": 2,
            "eventData": [],
            "eventProp": "id",
            "eventRegEx": false,
            "gradient": false,
            "hidden": false,
            "invert": false,
            "linkData": [
              {
                "hidden": false,
                "linkOn": "a",
                "linkParams": false,
                "linkUrl": "/d/W7LSukHWz/ucs-domain-traffic?from=${__from}&to=${__to}&var-domain=${domain}",
                "pattern": "domain_traffic"
              }
            ],
            "linkProp": "id",
            "linkRegEx": true,
            "mappingType": 1,
            "metricType": "serie",
            "order": 3,
            "overlayIcon": false,
            "pattern": "FIEnvStats.last",
            "rangeData": [],
            "reduce": true,
            "refId": "A",
            "sanitize": false,
            "shapeData": [],
            "shapeProp": "id",
            "shapeRegEx": true,
            "stringThresholds": [],
            "textData": [],
            "textProp": "id",
            "textRegEx": true,
            "thresholds": [],
            "tooltip": false,
            "tooltipColors": false,
            "tooltipLabel": "",
            "tooltipOn": "a",
            "tpDirection": "v",
            "tpGraph": false,
            "tpGraphHigh": null,
            "tpGraphLow": null,
            "tpGraphScale": "linear",
            "tpGraphSize": "100%",
            "tpGraphType": "line",
            "type": "number",
            "unit": "short",
            "valueData": []
          },
          {
            "aggregation": "current",
            "alias": "chassis",
            "colors": [
              "rgba(50, 172, 45, 0.97)"
            ],
            "column": "Time",
            "dateFormat": "YYYY-MM-DD HH:mm:ss",
            "decimals": 2,
            "eventData": [],
            "eventProp": "id",
            "eventRegEx": false,
            "gradient": false,
            "hidden": false,
            "invert": false,
            "linkData": [
              {
                "hidden": false,
                "linkOn": "a",
                "linkParams": false,
                "linkUrl": "/d/KOM8ZHNWz/ucs-chassis-traffic?from=${__from}&to=${__to}&var-domain=${domain}",
                "pattern": "chassis"
              }
            ],
            "linkProp": "id",
            "linkRegEx": true,
            "mappingType": 1,
            "metricType": "serie",
            "order": 4,
            "overlayIcon": false,
            "pattern": "FIEnvStats.last",
            "rangeData": [],
            "reduce": true,
            "refId": "A",
            "sanitize": false,
            "shapeData": [],
            "shapeProp": "id",
            "shapeRegEx": true,
            "stringThresholds": [],
            "textData": [],
            "textProp": "id",
            "textRegEx": true,
            "thresholds": [],
            "tooltip": false,
            "tooltipColors": false,
            "tooltipLabel": "",
            "tooltipOn": "a",
            "tpDirection": "v",
            "tpGraph": false,
            "tpGraphHigh": null,
            "tpGraphLow": null,
            "tpGraphScale": "linear",
            "tpGraphSize": "100%",
            "tpGraphType": "line",
            "type": "number",
            "unit": "short",
            "valueData": []
          },
          {
            "aggregation": "current",
            "alias": "servers",
            "colors": [
              "rgba(50, 172, 45, 0.97)"
            ],
            "column": "Time",
            "dateFormat": "YYYY-MM-DD HH:mm:ss",
            "decimals": 2,
            "eventData": [],
            "eventProp": "id",
            "eventRegEx": false,
            "gradient": false,
            "hidden": false,
            "invert": false,
            "linkData": [
              {
                "hidden": false,
                "linkOn": "a",
                "linkParams": false,
                "linkUrl": "/d/Z0M_N1vWz/service-profile-stats?from=${__from}&to=${__to}&var-domain=${domain}",
                "pattern": "servers"
              }
            ],
            "linkProp": "id",
            "linkRegEx": true,
            "mappingType": 1,
            "metricType": "serie",
            "order": 5,
            "overlayIcon": false,
            "pattern": "FIEnvStats.last",
            "rangeData": [],
            "reduce": true,
            "refId": "A",
            "sanitize": false,
            "shapeData": [],
            "shapeProp": "id",
            "shapeRegEx": true,
            "stringThresholds": [],
            "textData": [],
            "textProp": "id",
            "textRegEx": true,
            "thresholds": [],
            "tooltip": false,
            "tooltipColors": false,
            "tooltipLabel": "",
            "tooltipOn": "a",
            "tpDirection": "v",
            "tpGraph": false,
            "tpGraphHigh": null,
            "tpGraphLow": null,
            "tpGraphScale": "linear",
            "tpGraphSize": "100%",
            "tpGraphType": "line",
            "type": "number",
            "unit": "short",
            "valueData": []
          },
          {
            "aggregation": "current",
            "alias": "Ingress Congestion",
            "colors": [
              "rgba(50, 172, 45, 0.97)"
            ],
            "column": "Time",
            "dateFormat": "YYYY-MM-DD HH:mm:ss",
            "decimals": 2,
            "eventData": [],
            "eventProp": "id",
            "eventRegEx": false,
            "gradient": false,
            "hidden": false,
            "invert": false,
            "linkData": [
              {
                "hidden": false,
                "linkOn": "a",
                "linkParams": false,
                "linkUrl": "/d/Sve32sDZk/fi-uplink-port-ingress-congestion-monitoring?from=${__from}&to=${__to}&var-domain=${domain}",
                "pattern": "ingress_congestion"
              }
            ],
            "linkProp": "id",
            "linkRegEx": true,
            "mappingType": 1,
            "metricType": "serie",
            "order": 6,
            "overlayIcon": false,
            "pattern": "FIEnvStats.last",
            "rangeData": [],
            "reduce": true,
            "refId": "A",
            "sanitize": false,
            "shapeData": [],
            "shapeProp": "id",
            "shapeRegEx": true,
            "stringThresholds": [],
            "textData": [],
            "textProp": "id",
            "textRegEx": true,
            "thresholds": [],
            "tooltip": false,
            "tooltipColors": false,
            "tooltipLabel": "",
            "tooltipOn": "a",
            "tpDirection": "v",
            "tpGraph": false,
            "tpGraphHigh": null,
            "tpGraphLow": null,
            "tpGraphScale": "linear",
            "tpGraphSize": "100%",
            "tpGraphType": "line",
            "type": "number",
            "unit": "short",
            "valueData": []
          }
        ]
      },
      "targets": [
        {
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "measurement": "FIEnvStats",
          "orderByTime": "ASC",
          "policy": "default",
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "load"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "last"
              }
            ]
          ],
          "tags": [
            {
              "key": "domain",
              "operator": "=~",
              "value": "/^$domain$/"
            }
          ]
        }
      ],
      "timeFrom": null,
      "timeShift": null,
      "transparent": true,
      "type": "agenty-flowcharting-panel",
      "valueName": "current",
      "version": "0.9.0"
    },
    {
      "datasource": "$data_source",
      "description": "Find the root-cause of the Ingress Traffic Congestion observed on FI Uplink ports",
      "fieldConfig": {
        "defaults": {},
        "overrides": []
      },
      "gridPos": {
        "h": 2,
        "w": 24,
        "x": 0,
        "y": 5
      },
      "id": 70,
      "options": {
        "content": "\n<h2 style=\"text-align: center;\"><span style=\"color: #0085FC;\"><strong>Congestion Monitoring - </span><span style=\"color: #ff00ff;\">$domain</span></strong></h2>",
        "mode": "html"
      },
      "pluginVersion": "7.5.7",
      "targets": [
        {
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "orderByTime": "ASC",
          "policy": "default",
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": []
        }
      ],
      "timeFrom": null,
      "timeShift": null,
      "transparent": true,
      "type": "text"
    },
    {
      "collapsed": false,
      "datasource": "$data_source",
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 7
      },
      "id": 17,
      "panels": [],
      "title": "Overview",
      "type": "row"
    },
    {
      "datasource": "$data_source",
      "fieldConfig": {
        "defaults": {},
        "overrides": []
      },
      "gridPos": {
        "h": 2,
        "w": 12,
        "x": 0,
        "y": 8
      },
      "id": 219,
      "links": [],
      "options": {
        "content": "<h2 style=\"text-align: center;\">Congestion against <span style=\"background-color: #00ff00;color: black\">Ingress</span> traffic</h2>",
        "mode": "html"
      },
      "pluginVersion": "7.5.7",
      "targets": [
        {
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "orderByTime": "ASC",
          "policy": "default",
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": []
        }
      ],
      "timeFrom": null,
      "timeShift": null,
      "transparent": true,
      "type": "text"
    },
    {
      "datasource": "$data_source",
      "fieldConfig": {
        "defaults": {},
        "overrides": []
      },
      "gridPos": {
        "h": 2,
        "w": 12,
        "x": 12,
        "y": 8
      },
      "id": 142,
      "links": [],
      "options": {
        "content": "<h2 style=\"text-align: center;\">Congestion against <span style=\"background-color: #00ffff;color: black\">Egress</span> traffic</h2>",
        "mode": "html"
      },
      "pluginVersion": "7.5.7",
      "targets": [
        {
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "orderByTime": "ASC",
          "policy": "default",
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": []
        }
      ],
      "timeFrom": null,
      "timeShift": null,
      "transparent": true,
      "type": "text"
    },
    {
      "datasource": "${data_source}",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "continuous-YlRd"
          },
          "custom": {
            "align": "left",
            "filterable": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/PAUSE/"
            },
            "properties": [
              {
                "id": "custom.displayMode",
                "value": "gradient-gauge"
              },
              {
                "id": "decimals",
                "value": 0
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Server Port"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 100
              },
              {
                "id": "links",
                "value": [
                  {
                    "title": "Congestion monitoring on Server port ${__data.fields[\"Server Port\"]}",
                    "url": "d/Sve32sDZk/congestion-monitoring?from=${__from}&to=${__to}&var-location=${__data.fields.Location}&var-domain=${__data.fields.Domain}&var-fi_id=${__data.fields.FI}&var-data_source=${data_source}&var-server_port=${__data.fields[\"Server Port\"]}"
                  }
                ]
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Location"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 150
              },
              {
                "id": "links",
                "value": [
                  {
                    "title": "Congestion monitoring in location ${__data.fields.Location}",
                    "url": "d/Sve32sDZk/congestion-monitoring?from=${__from}&to=${__to}&var-location=${__data.fields.Location}&var-data_source=${data_source}"
                  }
                ]
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "FI"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 60
              },
              {
                "id": "links",
                "value": [
                  {
                    "title": "Congestion monitoring on FI-${__data.fields.FI} in UCS domain ${__data.fields.Domain}",
                    "url": "d/Sve32sDZk/congestion-monitoring?from=${__from}&to=${__to}&var-location=${__data.fields.Location}&var-domain=${__data.fields.Domain}&var-fi_id=${__data.fields.FI}&var-data_source=${data_source}"
                  }
                ]
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Peer"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 100
              },
              {
                "id": "links",
                "value": [
                  {
                    "title": "Congestion monitoring in ${__data.fields.Peer} in UCS domain ${__data.fields.Domain}",
                    "url": "d/Sve32sDZk/congestion-monitoring?from=${__from}&to=${__to}&var-location=${__data.fields.Location}&var-domain=${__data.fields.Domain}&var-fi_id=${__data.fields.FI}&var-data_source=${data_source}&var-chassis=${__data.fields.Peer}"
                  }
                ]
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Domain"
            },
            "properties": [
              {
                "id": "links",
                "value": [
                  {
                    "title": "Congestion monitoring in UCS domain ${__data.fields.Domain}",
                    "url": "d/Sve32sDZk/congestion-monitoring?from=${__from}&to=${__to}&var-location=${__data.fields.Location}&var-domain=${__data.fields.Domain}&var-data_source=${data_source}"
                  }
                ]
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 12,
        "w": 12,
        "x": 0,
        "y": 10
      },
      "id": 125,
      "interval": "[[polling_interval]]",
      "options": {
        "showHeader": true,
        "sortBy": [
          {
            "desc": true,
            "displayName": "PAUSE sent to FI Server Ports"
          }
        ]
      },
      "pluginVersion": "7.5.7",
      "targets": [
        {
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "orderByTime": "ASC",
          "policy": "default",
          "query": "select top(\"PAUSE against Ingress Traffic\",location,domain,fi_id,port,peer,10) as \"PAUSE Sent to FI Server Ports\" from (select sum(\"PAUSE against Ingress Traffic\") as \"PAUSE against Ingress Traffic\" from (SELECT non_negative_difference(max(\"pause_rx\"))/elapsed(max(\"pause_rx\"),1s) AS \"PAUSE against Ingress Traffic\" FROM \"$db\".\"$rp\".\"FIServerPortStats\" WHERE \"domain\" =~ /^$domain$/ AND $timeFilter GROUP BY time($__interval),location,domain,fi_id,port,peer) where $timeFilter GROUP BY location,domain,fi_id,port,peer) where $timeFilter",
          "rawQuery": true,
          "refId": "A",
          "resultFormat": "table",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": []
        }
      ],
      "title": "Top 10 FI Server Ports - Congestion Against Ingress Traffic - $domain",
      "transformations": [
        {
          "id": "filterFieldsByName",
          "options": {
            "include": {
              "names": [
                "location",
                "domain",
                "fi_id",
                "port",
                "peer",
                "PAUSE Sent to FI Server Ports"
              ]
            }
          }
        },
        {
          "id": "organize",
          "options": {
            "excludeByName": {},
            "indexByName": {
              "PAUSE sent to FI Server Ports": 5,
              "domain": 1,
              "fi_id": 2,
              "location": 0,
              "peer": 4,
              "port": 3
            },
            "renameByName": {
              "chassis": "Chassis",
              "domain": "Domain",
              "fi_id": "FI",
              "location": "Location",
              "peer": "Peer",
              "peer_service_profile": "Service Profile",
              "port": "Server Port"
            }
          }
        }
      ],
      "type": "table"
    },
    {
      "datasource": "${data_source}",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "continuous-YlRd"
          },
          "custom": {
            "align": "left",
            "filterable": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/PAUSE/"
            },
            "properties": [
              {
                "id": "custom.displayMode",
                "value": "gradient-gauge"
              },
              {
                "id": "decimals",
                "value": 0
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Service Profile"
            },
            "properties": [
              {
                "id": "links",
                "value": [
                  {
                    "title": "Detailed traffic monitoring of service profile ${__value.raw}",
                    "url": "d/Z0M_N1vWz/service-profile-stats?orgId=1&var-service_profile=${__value.raw}&${__url_time_range}"
                  }
                ]
              },
              {
                "id": "custom.width",
                "value": 300
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Server Port"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 100
              },
              {
                "id": "links",
                "value": [
                  {
                    "title": "Congestion monitoring on Server port ${__data.fields[\"Server Port\"]}",
                    "url": "d/Sve32sDZk/congestion-monitoring?from=${__from}&to=${__to}&var-location=${__data.fields.Location}&var-domain=${__data.fields.Domain}&var-fi_id=${__data.fields.FI}&var-data_source=${data_source}&var-server_port=${__data.fields[\"Server Port\"]}"
                  }
                ]
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Location"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 150
              },
              {
                "id": "links",
                "value": [
                  {
                    "title": "Congestion monitoring in location ${__data.fields.Location}",
                    "url": "d/Sve32sDZk/congestion-monitoring?from=${__from}&to=${__to}&var-location=${__data.fields.Location}&var-data_source=${data_source}"
                  }
                ]
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "FI"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 60
              },
              {
                "id": "links",
                "value": [
                  {
                    "title": "Congestion monitoring on FI-${__data.fields.FI} in UCS domain ${__data.fields.Domain}",
                    "url": "d/Sve32sDZk/congestion-monitoring?from=${__from}&to=${__to}&var-location=${__data.fields.Location}&var-domain=${__data.fields.Domain}&var-fi_id=${__data.fields.FI}&var-data_source=${data_source}"
                  }
                ]
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Peer"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 100
              },
              {
                "id": "links",
                "value": [
                  {
                    "title": "Congestion monitoring in ${__data.fields.Peer} in UCS domain ${__data.fields.Domain}",
                    "url": "d/Sve32sDZk/congestion-monitoring?from=${__from}&to=${__to}&var-location=${__data.fields.Location}&var-domain=${__data.fields.Domain}&var-fi_id=${__data.fields.FI}&var-data_source=${data_source}&var-chassis=${__data.fields.Peer}"
                  }
                ]
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "PAUSE sent by FI Server Ports"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 370
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Domain"
            },
            "properties": [
              {
                "id": "links",
                "value": [
                  {
                    "title": "Congestion monitoring in UCS domain ${__data.fields.Domain}",
                    "url": "d/Sve32sDZk/congestion-monitoring?from=${__from}&to=${__to}&var-location=${__data.fields.Location}&var-domain=${__data.fields.Domain}&var-data_source=${data_source}"
                  }
                ]
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 12,
        "w": 12,
        "x": 12,
        "y": 10
      },
      "id": 126,
      "interval": "[[polling_interval]]",
      "options": {
        "showHeader": true,
        "sortBy": [
          {
            "desc": true,
            "displayName": "PAUSE sent by FI Server Ports"
          }
        ]
      },
      "pluginVersion": "7.5.7",
      "targets": [
        {
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "orderByTime": "ASC",
          "policy": "default",
          "query": "select top(\"PAUSE against Egress Traffic\",location,domain,fi_id,port,peer,10) as \"PAUSE Sent by FI Server Ports\" from (select sum(\"PAUSE against Egress Traffic\") as \"PAUSE against Egress Traffic\" from (SELECT non_negative_difference(max(\"pause_tx\"))/elapsed(max(\"pause_tx\"),1s) AS \"PAUSE against Egress Traffic\" FROM \"$db\".\"$rp\".\"FIServerPortStats\" WHERE \"domain\" =~ /^$domain$/ AND $timeFilter GROUP BY time($__interval),location,domain,fi_id,port,peer) where $timeFilter GROUP BY location,domain,fi_id,port,peer) where $timeFilter",
          "rawQuery": true,
          "refId": "A",
          "resultFormat": "table",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": []
        }
      ],
      "title": "Top 10 FI Server Ports - Congestion Against Egress Traffic - $domain",
      "transformations": [
        {
          "id": "filterFieldsByName",
          "options": {
            "include": {
              "names": [
                "location",
                "domain",
                "fi_id",
                "port",
                "peer",
                "PAUSE Sent by FI Server Ports"
              ]
            }
          }
        },
        {
          "id": "organize",
          "options": {
            "excludeByName": {},
            "indexByName": {
              "PAUSE sent to FI Server Ports": 5,
              "domain": 1,
              "fi_id": 2,
              "location": 0,
              "peer": 4,
              "port": 3
            },
            "renameByName": {
              "chassis": "Chassis",
              "domain": "Domain",
              "fi_id": "FI",
              "location": "Location",
              "peer": "Peer",
              "peer_service_profile": "Service Profile",
              "port": "Server Port"
            }
          }
        }
      ],
      "type": "table"
    },
    {
      "datasource": "${data_source}",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "continuous-YlRd"
          },
          "custom": {
            "align": "left",
            "filterable": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/PAUSE/"
            },
            "properties": [
              {
                "id": "custom.displayMode",
                "value": "gradient-gauge"
              },
              {
                "id": "decimals",
                "value": 0
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Service Profile"
            },
            "properties": [
              {
                "id": "links",
                "value": [
                  {
                    "title": "Detailed traffic monitoring of service profile ${__value.raw}",
                    "url": "d/Z0M_N1vWz/service-profile-stats?orgId=1&var-service_profile=${__value.raw}&${__url_time_range}&var-data_source=${data_source}"
                  }
                ]
              },
              {
                "id": "custom.width",
                "value": 300
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Chassis"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": null
              },
              {
                "id": "links",
                "value": [
                  {
                    "title": "Congestion monitoring in ${__data.fields.Chassis} in UCS domain ${__data.fields.Domain}",
                    "url": "d/Sve32sDZk/congestion-monitoring?from=${__from}&to=${__to}&var-location=${__data.fields.Location}&var-domain=${__data.fields.Domain}&var-data_source=${data_source}&var-chassis=${__data.fields.Chassis}"
                  }
                ]
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Location"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 150
              },
              {
                "id": "links",
                "value": [
                  {
                    "title": "Details of UCS domains in ${__data.fields.Location}",
                    "url": "/d/ri2OFp4Wz/locations?from=${__from}&to=${__to}&var-location=${__data.fields.Location}&var-data_source=${data_source}"
                  }
                ]
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Domain"
            },
            "properties": [
              {
                "id": "links",
                "value": [
                  {
                    "title": "Detailed traffic monitoring in UCS domain ${__data.fields.Domain}",
                    "url": "d/Sve32sDZk/congestion-monitoring?from=${__from}&to=${__to}&var-domain=${__data.fields.Domain}&var-data_source=${data_source}&var-location=${__data.fields.Location}"
                  }
                ]
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 12,
        "w": 12,
        "x": 0,
        "y": 22
      },
      "id": 107,
      "interval": "[[polling_interval]]",
      "options": {
        "showHeader": true,
        "sortBy": []
      },
      "pluginVersion": "7.5.7",
      "targets": [
        {
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "orderByTime": "ASC",
          "policy": "default",
          "query": "select top(\"PAUSE against Ingress Traffic\",location,domain,chassis,peer_service_profile,10) as \"PAUSE Sent by Servers\" from (select sum(\"PAUSE against Ingress Traffic\") as \"PAUSE against Ingress Traffic\" from (SELECT non_negative_difference(max(\"pause_rx\"))/elapsed(max(\"pause_rx\"),1s) AS \"PAUSE against Ingress Traffic\" FROM \"$db\".\"$rp\".\"BackplanePortStats\" WHERE \"domain\" =~ /^$domain$/ and $timeFilter GROUP BY time($__interval),location,domain,chassis,fi_id,bp_port,peer_service_profile) where $timeFilter and peer_service_profile != 'Unknown' GROUP BY chassis,peer_service_profile,location,domain)  where $timeFilter",
          "rawQuery": true,
          "refId": "A",
          "resultFormat": "table",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": []
        }
      ],
      "title": "Top 10 Servers - Congestion Against Ingress Traffic - $domain",
      "transformations": [
        {
          "id": "filterFieldsByName",
          "options": {
            "include": {
              "names": [
                "location",
                "domain",
                "chassis",
                "peer_service_profile",
                "PAUSE Sent by Servers"
              ]
            }
          }
        },
        {
          "id": "organize",
          "options": {
            "excludeByName": {},
            "indexByName": {
              "PAUSE sent by servers": 4,
              "chassis": 2,
              "domain": 1,
              "location": 0,
              "peer_service_profile": 3
            },
            "renameByName": {
              "chassis": "Chassis",
              "domain": "Domain",
              "location": "Location",
              "peer_service_profile": "Service Profile"
            }
          }
        }
      ],
      "type": "table"
    },
    {
      "datasource": "${data_source}",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "continuous-YlRd"
          },
          "custom": {
            "align": "left",
            "filterable": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/PAUSE/"
            },
            "properties": [
              {
                "id": "custom.displayMode",
                "value": "gradient-gauge"
              },
              {
                "id": "decimals",
                "value": 0
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Service Profile"
            },
            "properties": [
              {
                "id": "links",
                "value": [
                  {
                    "title": "Detailed traffic monitoring of service profile ${__value.raw}",
                    "url": "d/Z0M_N1vWz/service-profile-stats?orgId=1&var-service_profile=${__value.raw}&${__url_time_range}&var-data_source=${data_source}"
                  }
                ]
              },
              {
                "id": "custom.width",
                "value": 300
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Chassis"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 100
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Location"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 150
              },
              {
                "id": "links",
                "value": [
                  {
                    "title": "Details of UCS domains in ${__data.fields.Location}",
                    "url": "/d/ri2OFp4Wz/locations?from=${__from}&to=${__to}&var-location=${__data.fields.Location}&var-data_source=${data_source}"
                  }
                ]
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Domain"
            },
            "properties": [
              {
                "id": "links",
                "value": [
                  {
                    "title": "Detailed traffic monitoring in UCS domain ${__data.fields.Domain}",
                    "url": "d/Sve32sDZk/congestion-monitoring?from=${__from}&to=${__to}&var-domain=${__data.fields.Domain}&var-data_source=${data_source}&var-location=${__data.fields.Location}"
                  }
                ]
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 12,
        "w": 12,
        "x": 12,
        "y": 22
      },
      "id": 108,
      "interval": "[[polling_interval]]",
      "options": {
        "showHeader": true,
        "sortBy": []
      },
      "pluginVersion": "7.5.7",
      "targets": [
        {
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "orderByTime": "ASC",
          "policy": "default",
          "query": "select top(\"PAUSE against Egress Traffic\",chassis,peer_service_profile,location,domain,10) as \"PAUSE Sent by Servers\" from (select sum(\"PAUSE against Egress Traffic\") as \"PAUSE against Egress Traffic\" from (SELECT non_negative_difference(max(\"pause_tx\"))/elapsed(max(\"pause_tx\"),1s) AS \"PAUSE against Egress Traffic\" FROM \"$db\".\"$rp\".\"BackplanePortStats\" WHERE \"domain\" =~ /^$domain$/ and $timeFilter GROUP BY time($__interval),chassis,fi_id,bp_port,peer_service_profile,location,domain) where $timeFilter and peer_service_profile != 'Unknown' GROUP BY chassis,peer_service_profile,location,domain)  where $timeFilter",
          "rawQuery": true,
          "refId": "A",
          "resultFormat": "table",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": []
        }
      ],
      "title": "Top 10 Servers - Congestion Against Egress Traffic - $domain",
      "transformations": [
        {
          "id": "filterFieldsByName",
          "options": {
            "include": {
              "names": [
                "chassis",
                "peer_service_profile",
                "location",
                "domain",
                "PAUSE Sent by Servers"
              ]
            }
          }
        },
        {
          "id": "organize",
          "options": {
            "excludeByName": {},
            "indexByName": {
              "PAUSE sent by servers": 4,
              "chassis": 2,
              "domain": 1,
              "location": 0,
              "peer_service_profile": 3
            },
            "renameByName": {
              "chassis": "Chassis",
              "domain": "Domain",
              "location": "Location",
              "peer_service_profile": "Service Profile"
            }
          }
        }
      ],
      "type": "table"
    },
    {
      "collapsed": true,
      "datasource": null,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 34
      },
      "id": 140,
      "panels": [
        {
          "datasource": "$data_source",
          "fieldConfig": {
            "defaults": {},
            "overrides": []
          },
          "gridPos": {
            "h": 2,
            "w": 12,
            "x": 0,
            "y": 9
          },
          "id": 128,
          "links": [],
          "options": {
            "content": "<h2 style=\"text-align: center;\">Congestion against <span style=\"background-color: #00ff00;color: black\">Ingress</span> traffic</h2>",
            "mode": "html"
          },
          "pluginVersion": "7.5.7",
          "targets": [
            {
              "groupBy": [
                {
                  "params": [
                    "$__interval"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "null"
                  ],
                  "type": "fill"
                }
              ],
              "orderByTime": "ASC",
              "policy": "default",
              "refId": "A",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "value"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "mean"
                  }
                ]
              ],
              "tags": []
            }
          ],
          "timeFrom": null,
          "timeShift": null,
          "transparent": true,
          "type": "text"
        },
        {
          "datasource": "$data_source",
          "fieldConfig": {
            "defaults": {},
            "overrides": []
          },
          "gridPos": {
            "h": 2,
            "w": 12,
            "x": 12,
            "y": 9
          },
          "id": 220,
          "links": [],
          "options": {
            "content": "<h2 style=\"text-align: center;\">Congestion against <span style=\"background-color: #00ffff;color: black\">Egress</span> traffic</h2>",
            "mode": "html"
          },
          "pluginVersion": "7.5.7",
          "targets": [
            {
              "groupBy": [
                {
                  "params": [
                    "$__interval"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "null"
                  ],
                  "type": "fill"
                }
              ],
              "orderByTime": "ASC",
              "policy": "default",
              "refId": "A",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "value"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "mean"
                  }
                ]
              ],
              "tags": []
            }
          ],
          "timeFrom": null,
          "timeShift": null,
          "transparent": true,
          "type": "text"
        },
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "datasource": "$data_source",
          "description": "**Use Case**: Monitor congestion against ingress traffic on FI Server Ports. \n\n![Server Ports RX PAUSE](/public/img/utm/fi_server_port_rx_pause.png)\n\n**How to use**:  Select a UCS domain and FI Server Port (s). The graphs display RX PAUSE received on the FI Server Ports. These PAUSE frames are sent by the connected devices (FEX, IOM or Servers) when they must apply backpressure on the incoming traffic. *Note*: Server Ingress traffic is TX for FI Server Ports.\n\nPAUSE frames may be exchanged under normal conditions also. So, find unusual PAUSE frame activity with below symptoms (not an exhaustive list):\n- PAUSE frame rate in tens or hundreds per second is bad. Thousands, tens-of-thousands, or Millions per second is terribly bad.\n- Look for spike in PAUSE frame rate. Low stable values are probably fine.\n- Does one port among many other similar ports has higher PAUSE frame activity?\n\nOnce you have a suspect FI Server port with unusual PAUSE frame activity, the next step depends on the type of connected device.\n-\tIf the connected device is a server, you have found the ultimate traffic destination or Congestion source.\n-\tIf the connected device is a FEX or IOM in a chassis, monitor the congestion on the backplane ports to find the (blade) server (s).\n**Details**: \n- A server sends PAUSE frames if it is unable to receive the traffic at the ingress rate. These frames are reported as RX PAUSE on the connected port (on FI or FEX or IOM). \n- PAUSE frames are used for FC traffic only (no-drop class). Congestion in Eth traffic is generally indicated by frame drops.\n",
          "fieldConfig": {
            "defaults": {},
            "overrides": []
          },
          "fill": 0,
          "fillGradient": 1,
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 0,
            "y": 11
          },
          "hiddenSeries": false,
          "id": 130,
          "interval": "[[polling_interval]]s",
          "legend": {
            "alignAsTable": true,
            "avg": true,
            "current": false,
            "max": true,
            "min": false,
            "rightSide": true,
            "show": true,
            "sort": "max",
            "sortDesc": true,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "options": {
            "alertThreshold": true
          },
          "percentage": false,
          "pluginVersion": "7.5.7",
          "pointradius": 1,
          "points": true,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "alias": "$col on $tag_port from $tag_peer",
              "groupBy": [
                {
                  "params": [
                    "$__interval"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "port"
                  ],
                  "type": "tag"
                },
                {
                  "params": [
                    "peer_chassis"
                  ],
                  "type": "tag"
                },
                {
                  "params": [
                    "linear"
                  ],
                  "type": "fill"
                }
              ],
              "measurement": "FIServerPortStats",
              "orderByTime": "ASC",
              "policy": "autogen",
              "query": "SELECT non_negative_difference(max(\"pause_rx\"))  / elapsed(max(pause_rx),1s) AS \"RX PAUSE\" FROM \"$db\".\"$rp\".\"FIServerPortStats\" WHERE (\"domain\" =~ /^$domain$/ AND \"fi_id\" = 'A' AND \"port\" =~ /^$server_port$/) AND $timeFilter GROUP BY time($__interval), \"port\", \"peer\" fill(linear)",
              "rawQuery": true,
              "refId": "A",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "pause_rx"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "mean"
                  },
                  {
                    "params": [],
                    "type": "non_negative_difference"
                  },
                  {
                    "params": [
                      " / [[polling_interval]]"
                    ],
                    "type": "math"
                  },
                  {
                    "params": [
                      "RX PAUSE"
                    ],
                    "type": "alias"
                  }
                ]
              ],
              "tags": [
                {
                  "key": "domain",
                  "operator": "=~",
                  "value": "/^$domain$/"
                },
                {
                  "condition": "AND",
                  "key": "fi_id",
                  "operator": "=",
                  "value": "A"
                },
                {
                  "condition": "AND",
                  "key": "port",
                  "operator": "=~",
                  "value": "/^$server_port$/"
                }
              ]
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "FI-A Server port - RX PAUSE Monitoring",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": "0",
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "datasource": "$data_source",
          "description": "**Use Case**: Monitor congestion against egress traffic on FI Server Ports. \n\n![Server Ports TX PAUSE](/public/img/utm/fi_server_port_tx_pause.png)\n\n**How to use**:  Select a UCS domain and FI Server Port (s). The graphs display TX PAUSE sent by the FI Server Ports. These PAUSE frames are sent to the connected devices (FEX, IOM or Servers) when the backpressure must be applied against the outgoing traffic. *Note*: Server Egress traffic is RX for FI Server Ports.\n\nPAUSE frames may be exchanged under normal conditions also. So, find unusual PAUSE frame activity with below symptoms (not an exhaustive list):\n- PAUSE frame rate in tens or hundreds per second is bad. Thousands, tens-of-thousands, or Millions per second is terribly bad.\n- Look for spike in PAUSE frame rate. Low stable values are probably fine.\n- Does one port among many other similar ports has higher PAUSE frame activity?\n\nOnce you have a suspect FI Server port with unusual PAUSE frame activity, the next step depends on the type of connected device.\n-\tIf the connected device is a server, you have found the ultimate traffic destination or Congestion source.\n-\tIf the connected device is a FEX or IOM in a chassis, monitor the congestion on the backplane ports to find the (blade) server (s).\n**Details**: \n- A server receives PAUSE frames if it is transmitting data faster than the receiver can accept it. These frames are reported as TX PAUSE on the connected port (on FI or FEX or IOM). \n- PAUSE frames are used for FC traffic only (no-drop class). Congestion in Eth traffic is generally indicated by frame drops.\n",
          "fieldConfig": {
            "defaults": {},
            "overrides": []
          },
          "fill": 0,
          "fillGradient": 1,
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 12,
            "y": 11
          },
          "hiddenSeries": false,
          "id": 136,
          "interval": "[[polling_interval]]s",
          "legend": {
            "alignAsTable": true,
            "avg": true,
            "current": false,
            "max": true,
            "min": false,
            "rightSide": true,
            "show": true,
            "sort": "max",
            "sortDesc": true,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "options": {
            "alertThreshold": true
          },
          "percentage": false,
          "pluginVersion": "7.5.7",
          "pointradius": 1,
          "points": true,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "alias": "$col on $tag_port to $tag_peer",
              "groupBy": [
                {
                  "params": [
                    "$__interval"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "port"
                  ],
                  "type": "tag"
                },
                {
                  "params": [
                    "peer_chassis"
                  ],
                  "type": "tag"
                },
                {
                  "params": [
                    "linear"
                  ],
                  "type": "fill"
                }
              ],
              "measurement": "FIServerPortStats",
              "orderByTime": "ASC",
              "policy": "autogen",
              "query": "SELECT non_negative_difference(mean(\"pause_tx\"))  / elapsed(max(pause_tx),1s) AS \"TX PAUSE\" FROM \"$db\".\"$rp\".\"FIServerPortStats\" WHERE (\"domain\" =~ /^$domain$/ AND \"fi_id\" = 'A' AND \"port\" =~ /^$server_port$/) AND $timeFilter GROUP BY time($__interval), \"port\", \"peer\" fill(linear)",
              "rawQuery": true,
              "refId": "A",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "pause_tx"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "mean"
                  },
                  {
                    "params": [],
                    "type": "non_negative_difference"
                  },
                  {
                    "params": [
                      " / [[polling_interval]]"
                    ],
                    "type": "math"
                  },
                  {
                    "params": [
                      "TX PAUSE"
                    ],
                    "type": "alias"
                  }
                ]
              ],
              "tags": [
                {
                  "key": "domain",
                  "operator": "=~",
                  "value": "/^$domain$/"
                },
                {
                  "condition": "AND",
                  "key": "fi_id",
                  "operator": "=",
                  "value": "A"
                },
                {
                  "condition": "AND",
                  "key": "port",
                  "operator": "=~",
                  "value": "/^$server_port$/"
                }
              ]
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "FI-A Server port - TX PAUSE Monitoring",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": "0",
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "datasource": "$data_source",
          "description": "**Use Case**: Monitor congestion against ingress traffic on FI Server Ports. \n\n![Server Ports RX PAUSE](/public/img/utm/fi_server_port_rx_pause.png)\n\n**How to use**:  Select a UCS domain and FI Server Port (s). The graphs display RX PAUSE received on the FI Server Ports. These PAUSE frames are sent by the connected devices (FEX, IOM or Servers) when they must apply backpressure on the incoming traffic. *Note*: Server Ingress traffic is TX for FI Server Ports.\n\nPAUSE frames may be exchanged under normal conditions also. So, find unusual PAUSE frame activity with below symptoms (not an exhaustive list):\n- PAUSE frame rate in tens or hundreds per second is bad. Thousands, tens-of-thousands, or Millions per second is terribly bad.\n- Look for spike in PAUSE frame rate. Low stable values are probably fine.\n- Does one port among many other similar ports has higher PAUSE frame activity?\n\nOnce you have a suspect FI Server port with unusual PAUSE frame activity, the next step depends on the type of connected device.\n-\tIf the connected device is a server, you have found the ultimate traffic destination or Congestion source.\n-\tIf the connected device is a FEX or IOM in a chassis, monitor the congestion on the backplane ports to find the (blade) server (s).\n**Details**: \n- A server sends PAUSE frames if it is unable to receive the traffic at the ingress rate. These frames are reported as RX PAUSE on the connected port (on FI or FEX or IOM). \n- PAUSE frames are used for FC traffic only (no-drop class). Congestion in Eth traffic is generally indicated by frame drops.\n",
          "fieldConfig": {
            "defaults": {},
            "overrides": []
          },
          "fill": 0,
          "fillGradient": 1,
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 0,
            "y": 19
          },
          "hiddenSeries": false,
          "id": 132,
          "interval": "[[polling_interval]]s",
          "legend": {
            "alignAsTable": true,
            "avg": true,
            "current": false,
            "max": true,
            "min": false,
            "rightSide": true,
            "show": true,
            "sort": "max",
            "sortDesc": true,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "options": {
            "alertThreshold": true
          },
          "percentage": false,
          "pluginVersion": "7.5.7",
          "pointradius": 1,
          "points": true,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "alias": "$col on $tag_port from $tag_peer",
              "groupBy": [
                {
                  "params": [
                    "$__interval"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "port"
                  ],
                  "type": "tag"
                },
                {
                  "params": [
                    "peer_chassis"
                  ],
                  "type": "tag"
                },
                {
                  "params": [
                    "linear"
                  ],
                  "type": "fill"
                }
              ],
              "measurement": "FIServerPortStats",
              "orderByTime": "ASC",
              "policy": "autogen",
              "query": "SELECT non_negative_difference(max(\"pause_rx\"))  / elapsed(max(pause_rx),1s) AS \"RX PAUSE\" FROM \"$db\".\"$rp\".\"FIServerPortStats\" WHERE (\"domain\" =~ /^$domain$/ AND \"fi_id\" = 'B' AND \"port\" =~ /^$server_port$/) AND $timeFilter GROUP BY time($__interval), \"port\", \"peer\"",
              "rawQuery": true,
              "refId": "A",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "pause_rx"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "mean"
                  },
                  {
                    "params": [],
                    "type": "non_negative_difference"
                  },
                  {
                    "params": [
                      " / [[polling_interval]]"
                    ],
                    "type": "math"
                  },
                  {
                    "params": [
                      "RX PAUSE"
                    ],
                    "type": "alias"
                  }
                ]
              ],
              "tags": [
                {
                  "key": "domain",
                  "operator": "=~",
                  "value": "/^$domain$/"
                },
                {
                  "condition": "AND",
                  "key": "fi_id",
                  "operator": "=",
                  "value": "B"
                },
                {
                  "condition": "AND",
                  "key": "port",
                  "operator": "=~",
                  "value": "/^$server_port$/"
                }
              ]
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "FI-B Server port - RX PAUSE Monitoring",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": "0",
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "datasource": "$data_source",
          "description": "**Use Case**: Monitor congestion against egress traffic on FI Server Ports. \n\n![Server Ports TX PAUSE](/public/img/utm/fi_server_port_tx_pause.png)\n\n**How to use**:  Select a UCS domain and FI Server Port (s). The graphs display TX PAUSE sent by the FI Server Ports. These PAUSE frames are sent to the connected devices (FEX, IOM or Servers) when the backpressure must be applied against the outgoing traffic. *Note*: Server Egress traffic is RX for FI Server Ports.\n\nPAUSE frames may be exchanged under normal conditions also. So, find unusual PAUSE frame activity with below symptoms (not an exhaustive list):\n- PAUSE frame rate in tens or hundreds per second is bad. Thousands, tens-of-thousands, or Millions per second is terribly bad.\n- Look for spike in PAUSE frame rate. Low stable values are probably fine.\n- Does one port among many other similar ports has higher PAUSE frame activity?\n\nOnce you have a suspect FI Server port with unusual PAUSE frame activity, the next step depends on the type of connected device.\n-\tIf the connected device is a server, you have found the ultimate traffic destination or Congestion source.\n-\tIf the connected device is a FEX or IOM in a chassis, monitor the congestion on the backplane ports to find the (blade) server (s).\n**Details**: \n- A server receives PAUSE frames if it is transmitting data faster than the receiver can accept it. These frames are reported as TX PAUSE on the connected port (on FI or FEX or IOM). \n- PAUSE frames are used for FC traffic only (no-drop class). Congestion in Eth traffic is generally indicated by frame drops.\n",
          "fieldConfig": {
            "defaults": {},
            "overrides": []
          },
          "fill": 0,
          "fillGradient": 1,
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 12,
            "y": 19
          },
          "hiddenSeries": false,
          "id": 138,
          "interval": "[[polling_interval]]s",
          "legend": {
            "alignAsTable": true,
            "avg": true,
            "current": false,
            "max": true,
            "min": false,
            "rightSide": true,
            "show": true,
            "sort": "max",
            "sortDesc": true,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "options": {
            "alertThreshold": true
          },
          "percentage": false,
          "pluginVersion": "7.5.7",
          "pointradius": 2,
          "points": true,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "alias": "$col on $tag_port to $tag_peer",
              "groupBy": [
                {
                  "params": [
                    "$__interval"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "port"
                  ],
                  "type": "tag"
                },
                {
                  "params": [
                    "peer_chassis"
                  ],
                  "type": "tag"
                },
                {
                  "params": [
                    "linear"
                  ],
                  "type": "fill"
                }
              ],
              "measurement": "FIServerPortStats",
              "orderByTime": "ASC",
              "policy": "autogen",
              "query": "SELECT non_negative_difference(mean(\"pause_tx\"))  / elapsed(max(pause_tx),1s) AS \"TX PAUSE\" FROM \"$db\".\"$rp\".\"FIServerPortStats\" WHERE (\"domain\" =~ /^$domain$/ AND \"fi_id\" = 'B' AND \"port\" =~ /^$server_port$/) AND $timeFilter GROUP BY time($__interval), \"port\", \"peer\" fill(linear)",
              "rawQuery": true,
              "refId": "A",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "pause_tx"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "mean"
                  },
                  {
                    "params": [],
                    "type": "non_negative_difference"
                  },
                  {
                    "params": [
                      " / [[polling_interval]]"
                    ],
                    "type": "math"
                  },
                  {
                    "params": [
                      "TX PAUSE"
                    ],
                    "type": "alias"
                  }
                ]
              ],
              "tags": [
                {
                  "key": "domain",
                  "operator": "=~",
                  "value": "/^$domain$/"
                },
                {
                  "condition": "AND",
                  "key": "fi_id",
                  "operator": "=",
                  "value": "B"
                },
                {
                  "condition": "AND",
                  "key": "port",
                  "operator": "=~",
                  "value": "/^$server_port$/"
                }
              ]
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "FI-B Server port - TX PAUSE Monitoring",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": "0",
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        }
      ],
      "title": "PAUSE Monitoring on FI Server Ports",
      "type": "row"
    },
    {
      "collapsed": true,
      "datasource": null,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 35
      },
      "id": 144,
      "panels": [
        {
          "datasource": "$data_source",
          "fieldConfig": {
            "defaults": {},
            "overrides": []
          },
          "gridPos": {
            "h": 2,
            "w": 12,
            "x": 0,
            "y": 10
          },
          "id": 141,
          "links": [],
          "options": {
            "content": "<h2 style=\"text-align: center;\">Congestion against <span style=\"background-color: #00ff00;color: black\">Ingress</span> traffic</h2>",
            "mode": "html"
          },
          "pluginVersion": "7.5.7",
          "targets": [
            {
              "groupBy": [
                {
                  "params": [
                    "$__interval"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "null"
                  ],
                  "type": "fill"
                }
              ],
              "orderByTime": "ASC",
              "policy": "default",
              "refId": "A",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "value"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "mean"
                  }
                ]
              ],
              "tags": []
            }
          ],
          "timeFrom": null,
          "timeShift": null,
          "transparent": true,
          "type": "text"
        },
        {
          "datasource": "$data_source",
          "fieldConfig": {
            "defaults": {},
            "overrides": []
          },
          "gridPos": {
            "h": 2,
            "w": 12,
            "x": 12,
            "y": 10
          },
          "id": 134,
          "links": [],
          "options": {
            "content": "<h2 style=\"text-align: center;\">Congestion against <span style=\"background-color: #00ffff;color: black\">Egress</span> traffic</h2>",
            "mode": "html"
          },
          "pluginVersion": "7.5.7",
          "targets": [
            {
              "groupBy": [
                {
                  "params": [
                    "$__interval"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "null"
                  ],
                  "type": "fill"
                }
              ],
              "orderByTime": "ASC",
              "policy": "default",
              "refId": "A",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "value"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "mean"
                  }
                ]
              ],
              "tags": []
            }
          ],
          "timeFrom": null,
          "timeShift": null,
          "transparent": true,
          "type": "text"
        },
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "datasource": "$data_source",
          "description": "**Use Case**: Monitor congestion against ingress traffic on FEX/IOM Backplane Ports. \n\n![Server Ports RX PAUSE](/public/img/utm/backplane_port_rx_pause.png)\n\n**How to use**:  Select a UCS domain and Chassis. The graphs display RX PAUSE received on the FEX/IOM Backplane Ports. These PAUSE frames are sent by the connected servers when they must apply backpressure on the incoming traffic. *Note*: Server Ingress traffic is TX for Backplane Ports.\n\nPAUSE frames may be exchanged under normal conditions also. So, find unusual PAUSE frame activity with below symptoms (not an exhaustive list):\n- PAUSE frame rate in tens or hundreds per second is bad. Thousands, tens-of-thousands, or Millions per second is terribly bad.\n- Look for spike in PAUSE frame rate. Low stable values are probably fine.\n- Does one port among many other similar ports has higher PAUSE frame activity?\n\n**Details**: \n- A server sends PAUSE frames if it is unable to receive the traffic at the ingress rate. These frames are reported as RX PAUSE on the connected port (on FI or FEX or IOM). \n- PAUSE frames are used for FC traffic only (no-drop class). Congestion in Eth traffic is generally indicated by frame drops.\n",
          "fieldConfig": {
            "defaults": {},
            "overrides": []
          },
          "fill": 0,
          "fillGradient": 0,
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 0,
            "y": 12
          },
          "hiddenSeries": false,
          "id": 146,
          "interval": "[[polling_interval]]s",
          "legend": {
            "alignAsTable": true,
            "avg": true,
            "current": false,
            "max": true,
            "min": false,
            "rightSide": true,
            "show": true,
            "sort": "max",
            "sortDesc": true,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "options": {
            "alertThreshold": true
          },
          "percentage": false,
          "pluginVersion": "7.5.7",
          "pointradius": 2,
          "points": true,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "alias": "$tag_bp_port in $tag_chassis from $tag_peer_service_profile",
              "groupBy": [
                {
                  "params": [
                    "$__interval"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "chassis"
                  ],
                  "type": "tag"
                },
                {
                  "params": [
                    "bp_port"
                  ],
                  "type": "tag"
                },
                {
                  "params": [
                    "peer_service_profile"
                  ],
                  "type": "tag"
                },
                {
                  "params": [
                    "null"
                  ],
                  "type": "fill"
                }
              ],
              "measurement": "BackplanePortStats",
              "orderByTime": "ASC",
              "policy": "default",
              "query": "SELECT non_negative_difference(max(\"pause_rx\"))  / elapsed(max(pause_rx),1s) AS \"RX PAUSE\" FROM \"$db\".\"$rp\".\"BackplanePortStats\" WHERE (\"domain\" =~ /^$domain$/ AND \"fi_id\" = 'A' AND \"chassis\" =~ /^$chassis$/) AND $timeFilter GROUP BY time($__interval), \"chassis\", \"bp_port\", \"peer_service_profile\" fill(null)",
              "rawQuery": true,
              "refId": "A",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "pause_rx"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "mean"
                  },
                  {
                    "params": [],
                    "type": "non_negative_difference"
                  },
                  {
                    "params": [
                      " / [[polling_interval]]"
                    ],
                    "type": "math"
                  },
                  {
                    "params": [
                      "RX PAUSE"
                    ],
                    "type": "alias"
                  }
                ]
              ],
              "tags": [
                {
                  "key": "domain",
                  "operator": "=~",
                  "value": "/^$domain$/"
                },
                {
                  "condition": "AND",
                  "key": "fi_id",
                  "operator": "=",
                  "value": "A"
                },
                {
                  "condition": "AND",
                  "key": "chassis",
                  "operator": "=~",
                  "value": "/^$chassis$/"
                }
              ]
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Backplane Ports - RX PAUSE in Chassis $chassis via FI-A",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": "0",
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "datasource": "$data_source",
          "description": "**Use Case**: Monitor congestion against egress traffic on FEX/IOM Backplane Ports. \n\n![Server Ports RX PAUSE](/public/img/utm/backplane_port_tx_pause.png)\n\n**How to use**:  Select a UCS domain and Chassis. The graphs display TX PAUSE sent by the FEX/IOM Backplane Ports. These PAUSE frames are sent to the connected servers when the backpressure must be applied against the outgoing traffic. *Note*: Server Egress traffic is RX for Backplane Ports.\n\nPAUSE frames may be exchanged under normal conditions also. So, find unusual PAUSE frame activity with below symptoms (not an exhaustive list):\n- PAUSE frame rate in tens or hundreds per second is bad. Thousands, tens-of-thousands, or Millions per second is terribly bad.\n- Look for spike in PAUSE frame rate. Low stable values are probably fine.\n- Does one port among many other similar ports has higher PAUSE frame activity?\n\n**Details**: \n- A server receives PAUSE frames if it is transmitting data faster than the receiver can accept it. These frames are reported as TX PAUSE on the connected port (on FI or FEX or IOM). \n- PAUSE frames are used for FC traffic only (no-drop class). Congestion in Eth traffic is generally indicated by frame drops.\n",
          "fieldConfig": {
            "defaults": {},
            "overrides": []
          },
          "fill": 0,
          "fillGradient": 0,
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 12,
            "y": 12
          },
          "hiddenSeries": false,
          "id": 150,
          "interval": "[[polling_interval]]s",
          "legend": {
            "alignAsTable": true,
            "avg": true,
            "current": false,
            "max": true,
            "min": false,
            "rightSide": true,
            "show": true,
            "sort": "max",
            "sortDesc": true,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "options": {
            "alertThreshold": true
          },
          "percentage": false,
          "pluginVersion": "7.5.7",
          "pointradius": 2,
          "points": true,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "alias": "$tag_bp_port in $tag_chassis to $tag_peer_service_profile",
              "groupBy": [
                {
                  "params": [
                    "$__interval"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "chassis"
                  ],
                  "type": "tag"
                },
                {
                  "params": [
                    "bp_port"
                  ],
                  "type": "tag"
                },
                {
                  "params": [
                    "peer_service_profile"
                  ],
                  "type": "tag"
                },
                {
                  "params": [
                    "null"
                  ],
                  "type": "fill"
                }
              ],
              "measurement": "BackplanePortStats",
              "orderByTime": "ASC",
              "policy": "default",
              "query": "SELECT non_negative_difference(max(\"pause_tx\"))  / elapsed(max(pause_tx),1s) AS \"TX PAUSE\" FROM \"$db\".\"$rp\".\"BackplanePortStats\" WHERE (\"domain\" =~ /^$domain$/ AND \"fi_id\" = 'A' AND \"chassis\" =~ /^$chassis$/) AND $timeFilter GROUP BY time($__interval), \"chassis\", \"bp_port\", \"peer_service_profile\" fill(null)",
              "rawQuery": true,
              "refId": "A",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "pause_tx"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "mean"
                  },
                  {
                    "params": [],
                    "type": "non_negative_difference"
                  },
                  {
                    "params": [
                      " / [[polling_interval]]"
                    ],
                    "type": "math"
                  },
                  {
                    "params": [
                      "TX PAUSE"
                    ],
                    "type": "alias"
                  }
                ]
              ],
              "tags": [
                {
                  "key": "domain",
                  "operator": "=~",
                  "value": "/^$domain$/"
                },
                {
                  "condition": "AND",
                  "key": "fi_id",
                  "operator": "=",
                  "value": "A"
                },
                {
                  "condition": "AND",
                  "key": "chassis",
                  "operator": "=~",
                  "value": "/^$chassis$/"
                }
              ]
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Backplane Ports - TX PAUSE in Chassis $chassis via FI-A",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": "0",
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "datasource": "$data_source",
          "description": "**Use Case**: Monitor congestion against ingress traffic on FEX/IOM Backplane Ports. \n\n![Server Ports RX PAUSE](/public/img/utm/backplane_port_rx_pause.png)\n\n**How to use**:  Select a UCS domain and Chassis. The graphs display RX PAUSE received on the FEX/IOM Backplane Ports. These PAUSE frames are sent by the connected servers when they must apply backpressure on the incoming traffic. *Note*: Server Ingress traffic is TX for Backplane Ports.\n\nPAUSE frames may be exchanged under normal conditions also. So, find unusual PAUSE frame activity with below symptoms (not an exhaustive list):\n- PAUSE frame rate in tens or hundreds per second is bad. Thousands, tens-of-thousands, or Millions per second is terribly bad.\n- Look for spike in PAUSE frame rate. Low stable values are probably fine.\n- Does one port among many other similar ports has higher PAUSE frame activity?\n\n**Details**: \n- A server sends PAUSE frames if it is unable to receive the traffic at the ingress rate. These frames are reported as RX PAUSE on the connected port (on FI or FEX or IOM). \n- PAUSE frames are used for FC traffic only (no-drop class). Congestion in Eth traffic is generally indicated by frame drops.\n",
          "fieldConfig": {
            "defaults": {},
            "overrides": []
          },
          "fill": 0,
          "fillGradient": 0,
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 0,
            "y": 20
          },
          "hiddenSeries": false,
          "id": 148,
          "interval": "[[polling_interval]]s",
          "legend": {
            "alignAsTable": true,
            "avg": true,
            "current": false,
            "max": true,
            "min": false,
            "rightSide": true,
            "show": true,
            "sort": "max",
            "sortDesc": true,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "options": {
            "alertThreshold": true
          },
          "percentage": false,
          "pluginVersion": "7.5.7",
          "pointradius": 2,
          "points": true,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "alias": "$tag_bp_port in $tag_chassis from $tag_peer_service_profile",
              "groupBy": [
                {
                  "params": [
                    "$__interval"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "chassis"
                  ],
                  "type": "tag"
                },
                {
                  "params": [
                    "bp_port"
                  ],
                  "type": "tag"
                },
                {
                  "params": [
                    "peer_service_profile"
                  ],
                  "type": "tag"
                },
                {
                  "params": [
                    "null"
                  ],
                  "type": "fill"
                }
              ],
              "measurement": "BackplanePortStats",
              "orderByTime": "ASC",
              "policy": "default",
              "query": "SELECT non_negative_difference(max(\"pause_rx\"))  /elapsed(max(pause_rx),1s) AS \"RX PAUSE\" FROM \"$db\".\"$rp\".\"BackplanePortStats\" WHERE (\"domain\" =~ /^$domain$/ AND \"fi_id\" = 'B' AND \"chassis\" =~ /^$chassis$/) AND $timeFilter GROUP BY time($__interval), \"chassis\", \"bp_port\", \"peer_service_profile\" fill(null)",
              "rawQuery": true,
              "refId": "A",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "pause_rx"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "mean"
                  },
                  {
                    "params": [],
                    "type": "non_negative_difference"
                  },
                  {
                    "params": [
                      " / [[polling_interval]]"
                    ],
                    "type": "math"
                  },
                  {
                    "params": [
                      "RX PAUSE"
                    ],
                    "type": "alias"
                  }
                ]
              ],
              "tags": [
                {
                  "key": "domain",
                  "operator": "=~",
                  "value": "/^$domain$/"
                },
                {
                  "condition": "AND",
                  "key": "fi_id",
                  "operator": "=",
                  "value": "B"
                },
                {
                  "condition": "AND",
                  "key": "chassis",
                  "operator": "=~",
                  "value": "/^$chassis$/"
                }
              ]
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Backplane Ports - RX PAUSE in Chassis $chassis via FI-B",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": "0",
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "datasource": "$data_source",
          "description": "**Use Case**: Monitor congestion against egress traffic on FEX/IOM Backplane Ports. \n\n![Server Ports RX PAUSE](/public/img/utm/backplane_port_tx_pause.png)\n\n**How to use**:  Select a UCS domain and Chassis. The graphs display TX PAUSE sent by the FEX/IOM Backplane Ports. These PAUSE frames are sent to the connected servers when the backpressure must be applied against the outgoing traffic. *Note*: Server Egress traffic is RX for Backplane Ports.\n\nPAUSE frames may be exchanged under normal conditions also. So, find unusual PAUSE frame activity with below symptoms (not an exhaustive list):\n- PAUSE frame rate in tens or hundreds per second is bad. Thousands, tens-of-thousands, or Millions per second is terribly bad.\n- Look for spike in PAUSE frame rate. Low stable values are probably fine.\n- Does one port among many other similar ports has higher PAUSE frame activity?\n\n**Details**: \n- A server receives PAUSE frames if it is transmitting data faster than the receiver can accept it. These frames are reported as TX PAUSE on the connected port (on FI or FEX or IOM). \n- PAUSE frames are used for FC traffic only (no-drop class). Congestion in Eth traffic is generally indicated by frame drops.\n",
          "fieldConfig": {
            "defaults": {},
            "overrides": []
          },
          "fill": 0,
          "fillGradient": 0,
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 12,
            "y": 20
          },
          "hiddenSeries": false,
          "id": 152,
          "interval": "[[polling_interval]]s",
          "legend": {
            "alignAsTable": true,
            "avg": true,
            "current": false,
            "max": true,
            "min": false,
            "rightSide": true,
            "show": true,
            "sort": "max",
            "sortDesc": true,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "options": {
            "alertThreshold": true
          },
          "percentage": false,
          "pluginVersion": "7.5.7",
          "pointradius": 2,
          "points": true,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "alias": "$tag_bp_port in $tag_chassis to $tag_peer_service_profile",
              "groupBy": [
                {
                  "params": [
                    "$__interval"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "chassis"
                  ],
                  "type": "tag"
                },
                {
                  "params": [
                    "bp_port"
                  ],
                  "type": "tag"
                },
                {
                  "params": [
                    "peer_service_profile"
                  ],
                  "type": "tag"
                },
                {
                  "params": [
                    "null"
                  ],
                  "type": "fill"
                }
              ],
              "measurement": "BackplanePortStats",
              "orderByTime": "ASC",
              "policy": "default",
              "query": "SELECT non_negative_difference(max(\"pause_tx\"))  / elapsed(max(pause_tx),1s) AS \"TX PAUSE\" FROM \"$db\".\"$rp\".\"BackplanePortStats\" WHERE (\"domain\" =~ /^$domain$/ AND \"fi_id\" = 'B' AND \"chassis\" =~ /^$chassis$/) AND $timeFilter GROUP BY time($__interval), \"chassis\", \"bp_port\", \"peer_service_profile\" fill(null)",
              "rawQuery": true,
              "refId": "A",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "pause_tx"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "mean"
                  },
                  {
                    "params": [],
                    "type": "non_negative_difference"
                  },
                  {
                    "params": [
                      " / [[polling_interval]]"
                    ],
                    "type": "math"
                  },
                  {
                    "params": [
                      "TX PAUSE"
                    ],
                    "type": "alias"
                  }
                ]
              ],
              "tags": [
                {
                  "key": "domain",
                  "operator": "=~",
                  "value": "/^$domain$/"
                },
                {
                  "condition": "AND",
                  "key": "fi_id",
                  "operator": "=",
                  "value": "B"
                },
                {
                  "condition": "AND",
                  "key": "chassis",
                  "operator": "=~",
                  "value": "/^$chassis$/"
                }
              ]
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Backplane Ports - TX PAUSE in Chassis $chassis via FI-B",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": "0",
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        }
      ],
      "title": "PAUSE Monitoring on Backplane Ports",
      "type": "row"
    },
    {
      "collapsed": true,
      "datasource": null,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 36
      },
      "id": 156,
      "panels": [
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "datasource": "$data_source",
          "description": "**Use Case**: Find the root cause of ingress traffic congestion. \n\n![](/public/img/utm/chassis_ingress_congestion.png)\n\n**How to use**:  Select a UCS domain, chassis, and Backplane Port. One row is created per chassis. Graphs are generated for backplanes ports in that chassis within the row. Choose one Chassis at a time if you have many chassis. \n\nFI and FEX/IOM ports do not originate or terminate the traffic. Mostly, the real cause of congestion is one of the servers which is unable to receive traffic at the incoming rate. Try to find one of those servers by comparing unusual PAUSE frame activity and traffic spikes. Refer to the graphs on the left with RX PAUSE frames on IOM/FEX backplane ports which indicate a backpressure applied by Server against ingress traffic.  PAUSE frames may be exchanged under normal conditions also. So, find unusual PAUSE frame activity with below symptoms (not an exhaustive list):\n- PAUSE frame rate in tens or hundreds per second is bad. Thousands, tens-of-thousands, or Millions per second is terribly bad.\n- Look for spike in PAUSE frame rate. Low stable values are probably fine.\n- Does one port among many other similar ports has higher PAUSE frame activity?\n\nOnce you have a suspect backplane port with unusual PAUSE frame activity, look at the graph on the right which shows the service profile and vNIC/vHBA traffic using that backplane port. High traffic rate or traffic spikes, especially with matching timestamp with unusual PAUSE frame activity, indicate that high utilization is the cause of congestion.\n\n**Details**: \n- A server sends PAUSE frames to IOM/FEX backplane port if it is unable to receive the traffic at the ingress rate. These frames are reported as RX PAUSE on IOM/FEX backplane ports. \n- PAUSE frames are not reported at per vNIC/vHBA granularity. \n- PAUSE frames are used by FC traffic (no-drop class) only. Congestion in Eth traffic is generally indicated by frame drops.\n",
          "fieldConfig": {
            "defaults": {},
            "overrides": []
          },
          "fill": 0,
          "fillGradient": 0,
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 0,
            "y": 11
          },
          "hiddenSeries": false,
          "id": 158,
          "interval": "[[polling_interval]]s",
          "legend": {
            "alignAsTable": true,
            "avg": true,
            "current": false,
            "max": true,
            "min": false,
            "rightSide": true,
            "show": true,
            "sort": "current",
            "sortDesc": true,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "options": {
            "alertThreshold": true
          },
          "percentage": false,
          "pluginVersion": "7.5.7",
          "pointradius": 2,
          "points": true,
          "renderer": "flot",
          "repeat": "bp_port",
          "repeatDirection": "v",
          "scopedVars": {
            "bp_port": {
              "selected": false,
              "text": "1/01",
              "value": "1/01"
            },
            "chassis": {
              "selected": false,
              "text": "chassis-1",
              "value": "chassis-1"
            }
          },
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "alias": "$col <-- $tag_peer_service_profile",
              "groupBy": [
                {
                  "params": [
                    "$__interval"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "domain"
                  ],
                  "type": "tag"
                },
                {
                  "params": [
                    "chassis"
                  ],
                  "type": "tag"
                },
                {
                  "params": [
                    "bp_port"
                  ],
                  "type": "tag"
                },
                {
                  "params": [
                    "null"
                  ],
                  "type": "fill"
                }
              ],
              "measurement": "BackplanePortStats",
              "orderByTime": "ASC",
              "policy": "default",
              "query": "SELECT non_negative_difference(max(\"pause_rx\"))  / elapsed(max(pause_rx),1s) AS \"RX PAUSE\" FROM \"$db\".\"$rp\".\"BackplanePortStats\" WHERE (\"domain\" =~ /^$domain$/ AND \"fi_id\" =~ /^$fi_id$/ AND \"chassis\" =~ /^$chassis$/ AND \"bp_port\" =~ /^$bp_port$/) AND $timeFilter GROUP BY time($__interval), \"domain\", \"chassis\", \"bp_port\",\"peer_service_profile\" fill(null)",
              "rawQuery": true,
              "refId": "A",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "pause_rx"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "mean"
                  },
                  {
                    "params": [],
                    "type": "non_negative_difference"
                  },
                  {
                    "params": [
                      " / [[polling_interval]]"
                    ],
                    "type": "math"
                  },
                  {
                    "params": [
                      "RX PAUSE"
                    ],
                    "type": "alias"
                  }
                ]
              ],
              "tags": [
                {
                  "key": "domain",
                  "operator": "=~",
                  "value": "/^$domain$/"
                },
                {
                  "condition": "AND",
                  "key": "fi_id",
                  "operator": "=~",
                  "value": "/^$fi_id$/"
                },
                {
                  "condition": "AND",
                  "key": "chassis",
                  "operator": "=~",
                  "value": "/^$chassis$/"
                },
                {
                  "condition": "AND",
                  "key": "bp_port",
                  "operator": "=~",
                  "value": "/^$bp_port$/"
                }
              ]
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "RX PAUSE on Backplane Port $bp_port in $chassis",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": "0",
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "datasource": "$data_source",
          "description": "Refer to the description of the panel on the left. Compare high PAUSE frame activity from the left graph to the high traffic activity in this graph.",
          "fieldConfig": {
            "defaults": {},
            "overrides": []
          },
          "fill": 1,
          "fillGradient": 0,
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 12,
            "y": 11
          },
          "hiddenSeries": false,
          "id": 160,
          "interval": "[[polling_interval]]s",
          "legend": {
            "alignAsTable": true,
            "avg": true,
            "current": false,
            "max": true,
            "min": false,
            "rightSide": true,
            "show": true,
            "sort": null,
            "sortDesc": null,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "options": {
            "alertThreshold": true
          },
          "percentage": false,
          "pluginVersion": "7.5.7",
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "repeat": "bp_port",
          "repeatDirection": "v",
          "scopedVars": {
            "bp_port": {
              "selected": false,
              "text": "1/01",
              "value": "1/01"
            },
            "chassis": {
              "selected": false,
              "text": "chassis-1",
              "value": "chassis-1"
            }
          },
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": true,
          "steppedLine": false,
          "targets": [
            {
              "alias": "$tag_service_profile $tag_vif_name $col",
              "groupBy": [
                {
                  "params": [
                    "$__interval"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "vif_name"
                  ],
                  "type": "tag"
                },
                {
                  "params": [
                    "service_profile"
                  ],
                  "type": "tag"
                },
                {
                  "params": [
                    "linear"
                  ],
                  "type": "fill"
                }
              ],
              "measurement": "VnicStats",
              "orderByTime": "ASC",
              "policy": "default",
              "query": "SELECT max(\"bytes_rx_delta\")  *8/[[polling_interval]] AS \"RX\" FROM \"$db\".\"$rp\".\"VnicStats\" WHERE (\"domain\" =~ /^$domain$/ AND \"fi_id\" =~ /^$fi_id$/ AND \"chassis\" =~ /^$chassis$/ AND \"peer_port\" =~ /^$bp_port$/) AND $timeFilter GROUP BY time($__interval), \"vif_name\", \"service_profile\" fill(linear)",
              "rawQuery": true,
              "refId": "A",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "bytes_rx_delta"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "mean"
                  },
                  {
                    "params": [
                      " *8/[[polling_interval]]"
                    ],
                    "type": "math"
                  },
                  {
                    "params": [
                      "RX"
                    ],
                    "type": "alias"
                  }
                ]
              ],
              "tags": [
                {
                  "key": "domain",
                  "operator": "=~",
                  "value": "/^$domain$/"
                },
                {
                  "condition": "AND",
                  "key": "fi_id",
                  "operator": "=~",
                  "value": "/^$fi_id$/"
                },
                {
                  "condition": "AND",
                  "key": "chassis",
                  "operator": "=~",
                  "value": "/^$chassis$/"
                },
                {
                  "condition": "AND",
                  "key": "peer_port",
                  "operator": "=~",
                  "value": "/^$bp_port$/"
                }
              ]
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "RX Traffic to vIFs from Backplane Port $bp_port in $chassis",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "format": "bps",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": "0",
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "datasource": "$data_source",
          "description": "**Use Case**: Find the root cause of ingress traffic congestion. \n\n![](/public/img/utm/chassis_ingress_congestion.png)\n\n**How to use**:  Select a UCS domain, chassis, and Backplane Port. One row is created per chassis. Graphs are generated for backplanes ports in that chassis within the row. Choose one Chassis at a time if you have many chassis. \n\nFI and FEX/IOM ports do not originate or terminate the traffic. Mostly, the real cause of congestion is one of the servers which is unable to receive traffic at the incoming rate. Try to find one of those servers by comparing unusual PAUSE frame activity and traffic spikes. Refer to the graphs on the left with RX PAUSE frames on IOM/FEX backplane ports which indicate a backpressure applied by Server against ingress traffic.  PAUSE frames may be exchanged under normal conditions also. So, find unusual PAUSE frame activity with below symptoms (not an exhaustive list):\n- PAUSE frame rate in tens or hundreds per second is bad. Thousands, tens-of-thousands, or Millions per second is terribly bad.\n- Look for spike in PAUSE frame rate. Low stable values are probably fine.\n- Does one port among many other similar ports has higher PAUSE frame activity?\n\nOnce you have a suspect backplane port with unusual PAUSE frame activity, look at the graph on the right which shows the service profile and vNIC/vHBA traffic using that backplane port. High traffic rate or traffic spikes, especially with matching timestamp with unusual PAUSE frame activity, indicate that high utilization is the cause of congestion.\n\n**Details**: \n- A server sends PAUSE frames to IOM/FEX backplane port if it is unable to receive the traffic at the ingress rate. These frames are reported as RX PAUSE on IOM/FEX backplane ports. \n- PAUSE frames are not reported at per vNIC/vHBA granularity. \n- PAUSE frames are used by FC traffic (no-drop class) only. Congestion in Eth traffic is generally indicated by frame drops.\n",
          "fieldConfig": {
            "defaults": {},
            "overrides": []
          },
          "fill": 0,
          "fillGradient": 0,
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 0,
            "y": 19
          },
          "hiddenSeries": false,
          "id": 253,
          "interval": "[[polling_interval]]s",
          "legend": {
            "alignAsTable": true,
            "avg": true,
            "current": false,
            "max": true,
            "min": false,
            "rightSide": true,
            "show": true,
            "sort": "current",
            "sortDesc": true,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "options": {
            "alertThreshold": true
          },
          "percentage": false,
          "pluginVersion": "7.5.7",
          "pointradius": 2,
          "points": true,
          "renderer": "flot",
          "repeatDirection": "v",
          "repeatIteration": 1623359149151,
          "repeatPanelId": 158,
          "scopedVars": {
            "bp_port": {
              "selected": false,
              "text": "1/03",
              "value": "1/03"
            },
            "chassis": {
              "selected": false,
              "text": "chassis-1",
              "value": "chassis-1"
            }
          },
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "alias": "$col <-- $tag_peer_service_profile",
              "groupBy": [
                {
                  "params": [
                    "$__interval"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "domain"
                  ],
                  "type": "tag"
                },
                {
                  "params": [
                    "chassis"
                  ],
                  "type": "tag"
                },
                {
                  "params": [
                    "bp_port"
                  ],
                  "type": "tag"
                },
                {
                  "params": [
                    "null"
                  ],
                  "type": "fill"
                }
              ],
              "measurement": "BackplanePortStats",
              "orderByTime": "ASC",
              "policy": "default",
              "query": "SELECT non_negative_difference(max(\"pause_rx\"))  / elapsed(max(pause_rx),1s) AS \"RX PAUSE\" FROM \"$db\".\"$rp\".\"BackplanePortStats\" WHERE (\"domain\" =~ /^$domain$/ AND \"fi_id\" =~ /^$fi_id$/ AND \"chassis\" =~ /^$chassis$/ AND \"bp_port\" =~ /^$bp_port$/) AND $timeFilter GROUP BY time($__interval), \"domain\", \"chassis\", \"bp_port\",\"peer_service_profile\" fill(null)",
              "rawQuery": true,
              "refId": "A",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "pause_rx"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "mean"
                  },
                  {
                    "params": [],
                    "type": "non_negative_difference"
                  },
                  {
                    "params": [
                      " / [[polling_interval]]"
                    ],
                    "type": "math"
                  },
                  {
                    "params": [
                      "RX PAUSE"
                    ],
                    "type": "alias"
                  }
                ]
              ],
              "tags": [
                {
                  "key": "domain",
                  "operator": "=~",
                  "value": "/^$domain$/"
                },
                {
                  "condition": "AND",
                  "key": "fi_id",
                  "operator": "=~",
                  "value": "/^$fi_id$/"
                },
                {
                  "condition": "AND",
                  "key": "chassis",
                  "operator": "=~",
                  "value": "/^$chassis$/"
                },
                {
                  "condition": "AND",
                  "key": "bp_port",
                  "operator": "=~",
                  "value": "/^$bp_port$/"
                }
              ]
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "RX PAUSE on Backplane Port $bp_port in $chassis",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": "0",
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "datasource": "$data_source",
          "description": "Refer to the description of the panel on the left. Compare high PAUSE frame activity from the left graph to the high traffic activity in this graph.",
          "fieldConfig": {
            "defaults": {},
            "overrides": []
          },
          "fill": 1,
          "fillGradient": 0,
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 12,
            "y": 19
          },
          "hiddenSeries": false,
          "id": 257,
          "interval": "[[polling_interval]]s",
          "legend": {
            "alignAsTable": true,
            "avg": true,
            "current": false,
            "max": true,
            "min": false,
            "rightSide": true,
            "show": true,
            "sort": null,
            "sortDesc": null,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "options": {
            "alertThreshold": true
          },
          "percentage": false,
          "pluginVersion": "7.5.7",
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "repeatDirection": "v",
          "repeatIteration": 1623359149151,
          "repeatPanelId": 160,
          "scopedVars": {
            "bp_port": {
              "selected": false,
              "text": "1/03",
              "value": "1/03"
            },
            "chassis": {
              "selected": false,
              "text": "chassis-1",
              "value": "chassis-1"
            }
          },
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": true,
          "steppedLine": false,
          "targets": [
            {
              "alias": "$tag_service_profile $tag_vif_name $col",
              "groupBy": [
                {
                  "params": [
                    "$__interval"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "vif_name"
                  ],
                  "type": "tag"
                },
                {
                  "params": [
                    "service_profile"
                  ],
                  "type": "tag"
                },
                {
                  "params": [
                    "linear"
                  ],
                  "type": "fill"
                }
              ],
              "measurement": "VnicStats",
              "orderByTime": "ASC",
              "policy": "default",
              "query": "SELECT max(\"bytes_rx_delta\")  *8/[[polling_interval]] AS \"RX\" FROM \"$db\".\"$rp\".\"VnicStats\" WHERE (\"domain\" =~ /^$domain$/ AND \"fi_id\" =~ /^$fi_id$/ AND \"chassis\" =~ /^$chassis$/ AND \"peer_port\" =~ /^$bp_port$/) AND $timeFilter GROUP BY time($__interval), \"vif_name\", \"service_profile\" fill(linear)",
              "rawQuery": true,
              "refId": "A",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "bytes_rx_delta"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "mean"
                  },
                  {
                    "params": [
                      " *8/[[polling_interval]]"
                    ],
                    "type": "math"
                  },
                  {
                    "params": [
                      "RX"
                    ],
                    "type": "alias"
                  }
                ]
              ],
              "tags": [
                {
                  "key": "domain",
                  "operator": "=~",
                  "value": "/^$domain$/"
                },
                {
                  "condition": "AND",
                  "key": "fi_id",
                  "operator": "=~",
                  "value": "/^$fi_id$/"
                },
                {
                  "condition": "AND",
                  "key": "chassis",
                  "operator": "=~",
                  "value": "/^$chassis$/"
                },
                {
                  "condition": "AND",
                  "key": "peer_port",
                  "operator": "=~",
                  "value": "/^$bp_port$/"
                }
              ]
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "RX Traffic to vIFs from Backplane Port $bp_port in $chassis",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "format": "bps",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": "0",
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "datasource": "$data_source",
          "description": "**Use Case**: Find the root cause of ingress traffic congestion. \n\n![](/public/img/utm/chassis_ingress_congestion.png)\n\n**How to use**:  Select a UCS domain, chassis, and Backplane Port. One row is created per chassis. Graphs are generated for backplanes ports in that chassis within the row. Choose one Chassis at a time if you have many chassis. \n\nFI and FEX/IOM ports do not originate or terminate the traffic. Mostly, the real cause of congestion is one of the servers which is unable to receive traffic at the incoming rate. Try to find one of those servers by comparing unusual PAUSE frame activity and traffic spikes. Refer to the graphs on the left with RX PAUSE frames on IOM/FEX backplane ports which indicate a backpressure applied by Server against ingress traffic.  PAUSE frames may be exchanged under normal conditions also. So, find unusual PAUSE frame activity with below symptoms (not an exhaustive list):\n- PAUSE frame rate in tens or hundreds per second is bad. Thousands, tens-of-thousands, or Millions per second is terribly bad.\n- Look for spike in PAUSE frame rate. Low stable values are probably fine.\n- Does one port among many other similar ports has higher PAUSE frame activity?\n\nOnce you have a suspect backplane port with unusual PAUSE frame activity, look at the graph on the right which shows the service profile and vNIC/vHBA traffic using that backplane port. High traffic rate or traffic spikes, especially with matching timestamp with unusual PAUSE frame activity, indicate that high utilization is the cause of congestion.\n\n**Details**: \n- A server sends PAUSE frames to IOM/FEX backplane port if it is unable to receive the traffic at the ingress rate. These frames are reported as RX PAUSE on IOM/FEX backplane ports. \n- PAUSE frames are not reported at per vNIC/vHBA granularity. \n- PAUSE frames are used by FC traffic (no-drop class) only. Congestion in Eth traffic is generally indicated by frame drops.\n",
          "fieldConfig": {
            "defaults": {},
            "overrides": []
          },
          "fill": 0,
          "fillGradient": 0,
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 0,
            "y": 27
          },
          "hiddenSeries": false,
          "id": 254,
          "interval": "[[polling_interval]]s",
          "legend": {
            "alignAsTable": true,
            "avg": true,
            "current": false,
            "max": true,
            "min": false,
            "rightSide": true,
            "show": true,
            "sort": "current",
            "sortDesc": true,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "options": {
            "alertThreshold": true
          },
          "percentage": false,
          "pluginVersion": "7.5.7",
          "pointradius": 2,
          "points": true,
          "renderer": "flot",
          "repeatDirection": "v",
          "repeatIteration": 1623359149151,
          "repeatPanelId": 158,
          "scopedVars": {
            "bp_port": {
              "selected": false,
              "text": "1/05",
              "value": "1/05"
            },
            "chassis": {
              "selected": false,
              "text": "chassis-1",
              "value": "chassis-1"
            }
          },
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "alias": "$col <-- $tag_peer_service_profile",
              "groupBy": [
                {
                  "params": [
                    "$__interval"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "domain"
                  ],
                  "type": "tag"
                },
                {
                  "params": [
                    "chassis"
                  ],
                  "type": "tag"
                },
                {
                  "params": [
                    "bp_port"
                  ],
                  "type": "tag"
                },
                {
                  "params": [
                    "null"
                  ],
                  "type": "fill"
                }
              ],
              "measurement": "BackplanePortStats",
              "orderByTime": "ASC",
              "policy": "default",
              "query": "SELECT non_negative_difference(max(\"pause_rx\"))  / elapsed(max(pause_rx),1s) AS \"RX PAUSE\" FROM \"$db\".\"$rp\".\"BackplanePortStats\" WHERE (\"domain\" =~ /^$domain$/ AND \"fi_id\" =~ /^$fi_id$/ AND \"chassis\" =~ /^$chassis$/ AND \"bp_port\" =~ /^$bp_port$/) AND $timeFilter GROUP BY time($__interval), \"domain\", \"chassis\", \"bp_port\",\"peer_service_profile\" fill(null)",
              "rawQuery": true,
              "refId": "A",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "pause_rx"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "mean"
                  },
                  {
                    "params": [],
                    "type": "non_negative_difference"
                  },
                  {
                    "params": [
                      " / [[polling_interval]]"
                    ],
                    "type": "math"
                  },
                  {
                    "params": [
                      "RX PAUSE"
                    ],
                    "type": "alias"
                  }
                ]
              ],
              "tags": [
                {
                  "key": "domain",
                  "operator": "=~",
                  "value": "/^$domain$/"
                },
                {
                  "condition": "AND",
                  "key": "fi_id",
                  "operator": "=~",
                  "value": "/^$fi_id$/"
                },
                {
                  "condition": "AND",
                  "key": "chassis",
                  "operator": "=~",
                  "value": "/^$chassis$/"
                },
                {
                  "condition": "AND",
                  "key": "bp_port",
                  "operator": "=~",
                  "value": "/^$bp_port$/"
                }
              ]
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "RX PAUSE on Backplane Port $bp_port in $chassis",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": "0",
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "datasource": "$data_source",
          "description": "Refer to the description of the panel on the left. Compare high PAUSE frame activity from the left graph to the high traffic activity in this graph.",
          "fieldConfig": {
            "defaults": {},
            "overrides": []
          },
          "fill": 1,
          "fillGradient": 0,
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 12,
            "y": 27
          },
          "hiddenSeries": false,
          "id": 258,
          "interval": "[[polling_interval]]s",
          "legend": {
            "alignAsTable": true,
            "avg": true,
            "current": false,
            "max": true,
            "min": false,
            "rightSide": true,
            "show": true,
            "sort": null,
            "sortDesc": null,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "options": {
            "alertThreshold": true
          },
          "percentage": false,
          "pluginVersion": "7.5.7",
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "repeatDirection": "v",
          "repeatIteration": 1623359149151,
          "repeatPanelId": 160,
          "scopedVars": {
            "bp_port": {
              "selected": false,
              "text": "1/05",
              "value": "1/05"
            },
            "chassis": {
              "selected": false,
              "text": "chassis-1",
              "value": "chassis-1"
            }
          },
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": true,
          "steppedLine": false,
          "targets": [
            {
              "alias": "$tag_service_profile $tag_vif_name $col",
              "groupBy": [
                {
                  "params": [
                    "$__interval"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "vif_name"
                  ],
                  "type": "tag"
                },
                {
                  "params": [
                    "service_profile"
                  ],
                  "type": "tag"
                },
                {
                  "params": [
                    "linear"
                  ],
                  "type": "fill"
                }
              ],
              "measurement": "VnicStats",
              "orderByTime": "ASC",
              "policy": "default",
              "query": "SELECT max(\"bytes_rx_delta\")  *8/[[polling_interval]] AS \"RX\" FROM \"$db\".\"$rp\".\"VnicStats\" WHERE (\"domain\" =~ /^$domain$/ AND \"fi_id\" =~ /^$fi_id$/ AND \"chassis\" =~ /^$chassis$/ AND \"peer_port\" =~ /^$bp_port$/) AND $timeFilter GROUP BY time($__interval), \"vif_name\", \"service_profile\" fill(linear)",
              "rawQuery": true,
              "refId": "A",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "bytes_rx_delta"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "mean"
                  },
                  {
                    "params": [
                      " *8/[[polling_interval]]"
                    ],
                    "type": "math"
                  },
                  {
                    "params": [
                      "RX"
                    ],
                    "type": "alias"
                  }
                ]
              ],
              "tags": [
                {
                  "key": "domain",
                  "operator": "=~",
                  "value": "/^$domain$/"
                },
                {
                  "condition": "AND",
                  "key": "fi_id",
                  "operator": "=~",
                  "value": "/^$fi_id$/"
                },
                {
                  "condition": "AND",
                  "key": "chassis",
                  "operator": "=~",
                  "value": "/^$chassis$/"
                },
                {
                  "condition": "AND",
                  "key": "peer_port",
                  "operator": "=~",
                  "value": "/^$bp_port$/"
                }
              ]
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "RX Traffic to vIFs from Backplane Port $bp_port in $chassis",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "format": "bps",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": "0",
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "datasource": "$data_source",
          "description": "**Use Case**: Find the root cause of ingress traffic congestion. \n\n![](/public/img/utm/chassis_ingress_congestion.png)\n\n**How to use**:  Select a UCS domain, chassis, and Backplane Port. One row is created per chassis. Graphs are generated for backplanes ports in that chassis within the row. Choose one Chassis at a time if you have many chassis. \n\nFI and FEX/IOM ports do not originate or terminate the traffic. Mostly, the real cause of congestion is one of the servers which is unable to receive traffic at the incoming rate. Try to find one of those servers by comparing unusual PAUSE frame activity and traffic spikes. Refer to the graphs on the left with RX PAUSE frames on IOM/FEX backplane ports which indicate a backpressure applied by Server against ingress traffic.  PAUSE frames may be exchanged under normal conditions also. So, find unusual PAUSE frame activity with below symptoms (not an exhaustive list):\n- PAUSE frame rate in tens or hundreds per second is bad. Thousands, tens-of-thousands, or Millions per second is terribly bad.\n- Look for spike in PAUSE frame rate. Low stable values are probably fine.\n- Does one port among many other similar ports has higher PAUSE frame activity?\n\nOnce you have a suspect backplane port with unusual PAUSE frame activity, look at the graph on the right which shows the service profile and vNIC/vHBA traffic using that backplane port. High traffic rate or traffic spikes, especially with matching timestamp with unusual PAUSE frame activity, indicate that high utilization is the cause of congestion.\n\n**Details**: \n- A server sends PAUSE frames to IOM/FEX backplane port if it is unable to receive the traffic at the ingress rate. These frames are reported as RX PAUSE on IOM/FEX backplane ports. \n- PAUSE frames are not reported at per vNIC/vHBA granularity. \n- PAUSE frames are used by FC traffic (no-drop class) only. Congestion in Eth traffic is generally indicated by frame drops.\n",
          "fieldConfig": {
            "defaults": {},
            "overrides": []
          },
          "fill": 0,
          "fillGradient": 0,
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 0,
            "y": 35
          },
          "hiddenSeries": false,
          "id": 255,
          "interval": "[[polling_interval]]s",
          "legend": {
            "alignAsTable": true,
            "avg": true,
            "current": false,
            "max": true,
            "min": false,
            "rightSide": true,
            "show": true,
            "sort": "current",
            "sortDesc": true,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "options": {
            "alertThreshold": true
          },
          "percentage": false,
          "pluginVersion": "7.5.7",
          "pointradius": 2,
          "points": true,
          "renderer": "flot",
          "repeatDirection": "v",
          "repeatIteration": 1623359149151,
          "repeatPanelId": 158,
          "scopedVars": {
            "bp_port": {
              "selected": false,
              "text": "1/07",
              "value": "1/07"
            },
            "chassis": {
              "selected": false,
              "text": "chassis-1",
              "value": "chassis-1"
            }
          },
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "alias": "$col <-- $tag_peer_service_profile",
              "groupBy": [
                {
                  "params": [
                    "$__interval"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "domain"
                  ],
                  "type": "tag"
                },
                {
                  "params": [
                    "chassis"
                  ],
                  "type": "tag"
                },
                {
                  "params": [
                    "bp_port"
                  ],
                  "type": "tag"
                },
                {
                  "params": [
                    "null"
                  ],
                  "type": "fill"
                }
              ],
              "measurement": "BackplanePortStats",
              "orderByTime": "ASC",
              "policy": "default",
              "query": "SELECT non_negative_difference(max(\"pause_rx\"))  / elapsed(max(pause_rx),1s) AS \"RX PAUSE\" FROM \"$db\".\"$rp\".\"BackplanePortStats\" WHERE (\"domain\" =~ /^$domain$/ AND \"fi_id\" =~ /^$fi_id$/ AND \"chassis\" =~ /^$chassis$/ AND \"bp_port\" =~ /^$bp_port$/) AND $timeFilter GROUP BY time($__interval), \"domain\", \"chassis\", \"bp_port\",\"peer_service_profile\" fill(null)",
              "rawQuery": true,
              "refId": "A",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "pause_rx"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "mean"
                  },
                  {
                    "params": [],
                    "type": "non_negative_difference"
                  },
                  {
                    "params": [
                      " / [[polling_interval]]"
                    ],
                    "type": "math"
                  },
                  {
                    "params": [
                      "RX PAUSE"
                    ],
                    "type": "alias"
                  }
                ]
              ],
              "tags": [
                {
                  "key": "domain",
                  "operator": "=~",
                  "value": "/^$domain$/"
                },
                {
                  "condition": "AND",
                  "key": "fi_id",
                  "operator": "=~",
                  "value": "/^$fi_id$/"
                },
                {
                  "condition": "AND",
                  "key": "chassis",
                  "operator": "=~",
                  "value": "/^$chassis$/"
                },
                {
                  "condition": "AND",
                  "key": "bp_port",
                  "operator": "=~",
                  "value": "/^$bp_port$/"
                }
              ]
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "RX PAUSE on Backplane Port $bp_port in $chassis",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": "0",
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "datasource": "$data_source",
          "description": "Refer to the description of the panel on the left. Compare high PAUSE frame activity from the left graph to the high traffic activity in this graph.",
          "fieldConfig": {
            "defaults": {},
            "overrides": []
          },
          "fill": 1,
          "fillGradient": 0,
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 12,
            "y": 35
          },
          "hiddenSeries": false,
          "id": 259,
          "interval": "[[polling_interval]]s",
          "legend": {
            "alignAsTable": true,
            "avg": true,
            "current": false,
            "max": true,
            "min": false,
            "rightSide": true,
            "show": true,
            "sort": null,
            "sortDesc": null,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "options": {
            "alertThreshold": true
          },
          "percentage": false,
          "pluginVersion": "7.5.7",
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "repeatDirection": "v",
          "repeatIteration": 1623359149151,
          "repeatPanelId": 160,
          "scopedVars": {
            "bp_port": {
              "selected": false,
              "text": "1/07",
              "value": "1/07"
            },
            "chassis": {
              "selected": false,
              "text": "chassis-1",
              "value": "chassis-1"
            }
          },
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": true,
          "steppedLine": false,
          "targets": [
            {
              "alias": "$tag_service_profile $tag_vif_name $col",
              "groupBy": [
                {
                  "params": [
                    "$__interval"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "vif_name"
                  ],
                  "type": "tag"
                },
                {
                  "params": [
                    "service_profile"
                  ],
                  "type": "tag"
                },
                {
                  "params": [
                    "linear"
                  ],
                  "type": "fill"
                }
              ],
              "measurement": "VnicStats",
              "orderByTime": "ASC",
              "policy": "default",
              "query": "SELECT max(\"bytes_rx_delta\")  *8/[[polling_interval]] AS \"RX\" FROM \"$db\".\"$rp\".\"VnicStats\" WHERE (\"domain\" =~ /^$domain$/ AND \"fi_id\" =~ /^$fi_id$/ AND \"chassis\" =~ /^$chassis$/ AND \"peer_port\" =~ /^$bp_port$/) AND $timeFilter GROUP BY time($__interval), \"vif_name\", \"service_profile\" fill(linear)",
              "rawQuery": true,
              "refId": "A",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "bytes_rx_delta"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "mean"
                  },
                  {
                    "params": [
                      " *8/[[polling_interval]]"
                    ],
                    "type": "math"
                  },
                  {
                    "params": [
                      "RX"
                    ],
                    "type": "alias"
                  }
                ]
              ],
              "tags": [
                {
                  "key": "domain",
                  "operator": "=~",
                  "value": "/^$domain$/"
                },
                {
                  "condition": "AND",
                  "key": "fi_id",
                  "operator": "=~",
                  "value": "/^$fi_id$/"
                },
                {
                  "condition": "AND",
                  "key": "chassis",
                  "operator": "=~",
                  "value": "/^$chassis$/"
                },
                {
                  "condition": "AND",
                  "key": "peer_port",
                  "operator": "=~",
                  "value": "/^$bp_port$/"
                }
              ]
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "RX Traffic to vIFs from Backplane Port $bp_port in $chassis",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "format": "bps",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": "0",
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "datasource": "$data_source",
          "description": "**Use Case**: Find the root cause of ingress traffic congestion. \n\n![](/public/img/utm/chassis_ingress_congestion.png)\n\n**How to use**:  Select a UCS domain, chassis, and Backplane Port. One row is created per chassis. Graphs are generated for backplanes ports in that chassis within the row. Choose one Chassis at a time if you have many chassis. \n\nFI and FEX/IOM ports do not originate or terminate the traffic. Mostly, the real cause of congestion is one of the servers which is unable to receive traffic at the incoming rate. Try to find one of those servers by comparing unusual PAUSE frame activity and traffic spikes. Refer to the graphs on the left with RX PAUSE frames on IOM/FEX backplane ports which indicate a backpressure applied by Server against ingress traffic.  PAUSE frames may be exchanged under normal conditions also. So, find unusual PAUSE frame activity with below symptoms (not an exhaustive list):\n- PAUSE frame rate in tens or hundreds per second is bad. Thousands, tens-of-thousands, or Millions per second is terribly bad.\n- Look for spike in PAUSE frame rate. Low stable values are probably fine.\n- Does one port among many other similar ports has higher PAUSE frame activity?\n\nOnce you have a suspect backplane port with unusual PAUSE frame activity, look at the graph on the right which shows the service profile and vNIC/vHBA traffic using that backplane port. High traffic rate or traffic spikes, especially with matching timestamp with unusual PAUSE frame activity, indicate that high utilization is the cause of congestion.\n\n**Details**: \n- A server sends PAUSE frames to IOM/FEX backplane port if it is unable to receive the traffic at the ingress rate. These frames are reported as RX PAUSE on IOM/FEX backplane ports. \n- PAUSE frames are not reported at per vNIC/vHBA granularity. \n- PAUSE frames are used by FC traffic (no-drop class) only. Congestion in Eth traffic is generally indicated by frame drops.\n",
          "fieldConfig": {
            "defaults": {},
            "overrides": []
          },
          "fill": 0,
          "fillGradient": 0,
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 0,
            "y": 43
          },
          "hiddenSeries": false,
          "id": 256,
          "interval": "[[polling_interval]]s",
          "legend": {
            "alignAsTable": true,
            "avg": true,
            "current": false,
            "max": true,
            "min": false,
            "rightSide": true,
            "show": true,
            "sort": "current",
            "sortDesc": true,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "options": {
            "alertThreshold": true
          },
          "percentage": false,
          "pluginVersion": "7.5.7",
          "pointradius": 2,
          "points": true,
          "renderer": "flot",
          "repeatDirection": "v",
          "repeatIteration": 1623359149151,
          "repeatPanelId": 158,
          "scopedVars": {
            "bp_port": {
              "selected": false,
              "text": "1/09",
              "value": "1/09"
            },
            "chassis": {
              "selected": false,
              "text": "chassis-1",
              "value": "chassis-1"
            }
          },
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "alias": "$col <-- $tag_peer_service_profile",
              "groupBy": [
                {
                  "params": [
                    "$__interval"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "domain"
                  ],
                  "type": "tag"
                },
                {
                  "params": [
                    "chassis"
                  ],
                  "type": "tag"
                },
                {
                  "params": [
                    "bp_port"
                  ],
                  "type": "tag"
                },
                {
                  "params": [
                    "null"
                  ],
                  "type": "fill"
                }
              ],
              "measurement": "BackplanePortStats",
              "orderByTime": "ASC",
              "policy": "default",
              "query": "SELECT non_negative_difference(max(\"pause_rx\"))  / elapsed(max(pause_rx),1s) AS \"RX PAUSE\" FROM \"$db\".\"$rp\".\"BackplanePortStats\" WHERE (\"domain\" =~ /^$domain$/ AND \"fi_id\" =~ /^$fi_id$/ AND \"chassis\" =~ /^$chassis$/ AND \"bp_port\" =~ /^$bp_port$/) AND $timeFilter GROUP BY time($__interval), \"domain\", \"chassis\", \"bp_port\",\"peer_service_profile\" fill(null)",
              "rawQuery": true,
              "refId": "A",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "pause_rx"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "mean"
                  },
                  {
                    "params": [],
                    "type": "non_negative_difference"
                  },
                  {
                    "params": [
                      " / [[polling_interval]]"
                    ],
                    "type": "math"
                  },
                  {
                    "params": [
                      "RX PAUSE"
                    ],
                    "type": "alias"
                  }
                ]
              ],
              "tags": [
                {
                  "key": "domain",
                  "operator": "=~",
                  "value": "/^$domain$/"
                },
                {
                  "condition": "AND",
                  "key": "fi_id",
                  "operator": "=~",
                  "value": "/^$fi_id$/"
                },
                {
                  "condition": "AND",
                  "key": "chassis",
                  "operator": "=~",
                  "value": "/^$chassis$/"
                },
                {
                  "condition": "AND",
                  "key": "bp_port",
                  "operator": "=~",
                  "value": "/^$bp_port$/"
                }
              ]
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "RX PAUSE on Backplane Port $bp_port in $chassis",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": "0",
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "datasource": "$data_source",
          "description": "Refer to the description of the panel on the left. Compare high PAUSE frame activity from the left graph to the high traffic activity in this graph.",
          "fieldConfig": {
            "defaults": {},
            "overrides": []
          },
          "fill": 1,
          "fillGradient": 0,
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 12,
            "y": 43
          },
          "hiddenSeries": false,
          "id": 260,
          "interval": "[[polling_interval]]s",
          "legend": {
            "alignAsTable": true,
            "avg": true,
            "current": false,
            "max": true,
            "min": false,
            "rightSide": true,
            "show": true,
            "sort": null,
            "sortDesc": null,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "options": {
            "alertThreshold": true
          },
          "percentage": false,
          "pluginVersion": "7.5.7",
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "repeatDirection": "v",
          "repeatIteration": 1623359149151,
          "repeatPanelId": 160,
          "scopedVars": {
            "bp_port": {
              "selected": false,
              "text": "1/09",
              "value": "1/09"
            },
            "chassis": {
              "selected": false,
              "text": "chassis-1",
              "value": "chassis-1"
            }
          },
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": true,
          "steppedLine": false,
          "targets": [
            {
              "alias": "$tag_service_profile $tag_vif_name $col",
              "groupBy": [
                {
                  "params": [
                    "$__interval"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "vif_name"
                  ],
                  "type": "tag"
                },
                {
                  "params": [
                    "service_profile"
                  ],
                  "type": "tag"
                },
                {
                  "params": [
                    "linear"
                  ],
                  "type": "fill"
                }
              ],
              "measurement": "VnicStats",
              "orderByTime": "ASC",
              "policy": "default",
              "query": "SELECT max(\"bytes_rx_delta\")  *8/[[polling_interval]] AS \"RX\" FROM \"$db\".\"$rp\".\"VnicStats\" WHERE (\"domain\" =~ /^$domain$/ AND \"fi_id\" =~ /^$fi_id$/ AND \"chassis\" =~ /^$chassis$/ AND \"peer_port\" =~ /^$bp_port$/) AND $timeFilter GROUP BY time($__interval), \"vif_name\", \"service_profile\" fill(linear)",
              "rawQuery": true,
              "refId": "A",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "bytes_rx_delta"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "mean"
                  },
                  {
                    "params": [
                      " *8/[[polling_interval]]"
                    ],
                    "type": "math"
                  },
                  {
                    "params": [
                      "RX"
                    ],
                    "type": "alias"
                  }
                ]
              ],
              "tags": [
                {
                  "key": "domain",
                  "operator": "=~",
                  "value": "/^$domain$/"
                },
                {
                  "condition": "AND",
                  "key": "fi_id",
                  "operator": "=~",
                  "value": "/^$fi_id$/"
                },
                {
                  "condition": "AND",
                  "key": "chassis",
                  "operator": "=~",
                  "value": "/^$chassis$/"
                },
                {
                  "condition": "AND",
                  "key": "peer_port",
                  "operator": "=~",
                  "value": "/^$bp_port$/"
                }
              ]
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "RX Traffic to vIFs from Backplane Port $bp_port in $chassis",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "format": "bps",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": "0",
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        }
      ],
      "repeat": "chassis",
      "title": "Ingress Traffic Congestion in Chassis - $chassis",
      "type": "row"
    },
    {
      "collapsed": true,
      "datasource": null,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 37
      },
      "id": 154,
      "panels": [
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "datasource": "$data_source",
          "description": "**Use Case**: Find the root cause of egress traffic congestion. \n\n![](/public/img/utm/chassis_egress_congestion.png)\n\n**How to use**:  Select a UCS domain, chassis, and Backplane Port. One row is created per chassis. Graphs are generated for backplanes ports in that chassis within the row. Choose one Chassis at a time if you have many chassis. \n\nFI and FEX/IOM ports do not originate or terminate the traffic. Mostly, the real cause of congestion is one of the servers which is unable to sending data faster than the receiver can ingest it. Try to find one of those servers by comparing unusual PAUSE frame activity and traffic spikes. Refer to the graphs on the left with TX PAUSE frames on IOM/FEX backplane ports which indicate a backpressure applied to Servers against egress traffic.  PAUSE frames may be exchanged under normal conditions also. So, find unusual PAUSE frame activity with below symptoms (not an exhaustive list):\n- PAUSE frame rate in tens or hundreds per second is bad. Thousands, tens-of-thousands, or Millions per second is terribly bad.\n- Look for spike in PAUSE frame rate. Low stable values are probably fine.\n- Does one port among many other similar ports has higher PAUSE frame activity?\n\nOnce you have a suspect backplane port with unusual PAUSE frame activity, look at the graph on the right which shows the service profile and vNIC/vHBA traffic using that backplane port. High traffic rate or traffic spikes, especially with matching timestamp with unusual PAUSE frame activity, indicate that high utilization is the cause of congestion.\n\n**Details**: \n- A server receives PAUSE frames if it is transmitting data faster than the receiver can accept it. These frames are reported as TX PAUSE on the connected port (on FI or FEX or IOM). \n- PAUSE frames are not reported at per vNIC/vHBA granularity. \n- PAUSE frames are used by FC traffic (no-drop class) only. Congestion in Eth traffic is generally indicated by frame drops.\n",
          "fieldConfig": {
            "defaults": {},
            "overrides": []
          },
          "fill": 0,
          "fillGradient": 0,
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 0,
            "y": 12
          },
          "hiddenSeries": false,
          "id": 178,
          "interval": "[[polling_interval]]s",
          "legend": {
            "alignAsTable": true,
            "avg": true,
            "current": false,
            "max": true,
            "min": false,
            "rightSide": true,
            "show": true,
            "sort": "current",
            "sortDesc": true,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "options": {
            "alertThreshold": true
          },
          "percentage": false,
          "pluginVersion": "7.5.7",
          "pointradius": 2,
          "points": true,
          "renderer": "flot",
          "repeat": "bp_port",
          "repeatDirection": "v",
          "scopedVars": {
            "bp_port": {
              "selected": false,
              "text": "1/01",
              "value": "1/01"
            },
            "chassis": {
              "selected": false,
              "text": "chassis-1",
              "value": "chassis-1"
            }
          },
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "alias": "$col --> $tag_peer_service_profile",
              "groupBy": [
                {
                  "params": [
                    "$__interval"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "domain"
                  ],
                  "type": "tag"
                },
                {
                  "params": [
                    "chassis"
                  ],
                  "type": "tag"
                },
                {
                  "params": [
                    "bp_port"
                  ],
                  "type": "tag"
                },
                {
                  "params": [
                    "null"
                  ],
                  "type": "fill"
                }
              ],
              "measurement": "BackplanePortStats",
              "orderByTime": "ASC",
              "policy": "default",
              "query": "SELECT non_negative_difference(max(\"pause_tx\"))  / elapsed(max(pause_tx),1s) AS \"TX PAUSE\" FROM \"$db\".\"$rp\".\"BackplanePortStats\" WHERE (\"domain\" =~ /^$domain$/ AND \"fi_id\" =~ /^$fi_id$/ AND \"chassis\" =~ /^$chassis$/ AND \"bp_port\" =~ /^$bp_port$/) AND $timeFilter GROUP BY time($__interval), \"domain\", \"chassis\", \"bp_port\",\"peer_service_profile\"",
              "rawQuery": true,
              "refId": "A",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "pause_tx"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "mean"
                  },
                  {
                    "params": [],
                    "type": "non_negative_difference"
                  },
                  {
                    "params": [
                      " / [[polling_interval]]"
                    ],
                    "type": "math"
                  },
                  {
                    "params": [
                      "TX PAUSE"
                    ],
                    "type": "alias"
                  }
                ]
              ],
              "tags": [
                {
                  "key": "domain",
                  "operator": "=~",
                  "value": "/^$domain$/"
                },
                {
                  "condition": "AND",
                  "key": "fi_id",
                  "operator": "=~",
                  "value": "/^$fi_id$/"
                },
                {
                  "condition": "AND",
                  "key": "chassis",
                  "operator": "=~",
                  "value": "/^$chassis$/"
                },
                {
                  "condition": "AND",
                  "key": "bp_port",
                  "operator": "=~",
                  "value": "/^$bp_port$/"
                }
              ]
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "TX PAUSE on Backplane Port $bp_port in $chassis",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": "0",
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "datasource": "$data_source",
          "description": "Refer to the description of the panel on the left. Compare high PAUSE frame activity from the left graph to the high traffic activity in this graph.",
          "fieldConfig": {
            "defaults": {},
            "overrides": []
          },
          "fill": 1,
          "fillGradient": 0,
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 12,
            "y": 12
          },
          "hiddenSeries": false,
          "id": 180,
          "interval": "[[polling_interval]]s",
          "legend": {
            "alignAsTable": true,
            "avg": true,
            "current": false,
            "max": true,
            "min": false,
            "rightSide": true,
            "show": true,
            "sort": "current",
            "sortDesc": true,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "options": {
            "alertThreshold": true
          },
          "percentage": false,
          "pluginVersion": "7.5.7",
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "repeat": "bp_port",
          "repeatDirection": "v",
          "scopedVars": {
            "bp_port": {
              "selected": false,
              "text": "1/01",
              "value": "1/01"
            },
            "chassis": {
              "selected": false,
              "text": "chassis-1",
              "value": "chassis-1"
            }
          },
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": true,
          "steppedLine": false,
          "targets": [
            {
              "alias": "$tag_service_profile $tag_vif_name $col",
              "groupBy": [
                {
                  "params": [
                    "$__interval"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "vif_name"
                  ],
                  "type": "tag"
                },
                {
                  "params": [
                    "service_profile"
                  ],
                  "type": "tag"
                },
                {
                  "params": [
                    "linear"
                  ],
                  "type": "fill"
                }
              ],
              "measurement": "VnicStats",
              "orderByTime": "ASC",
              "policy": "default",
              "query": "SELECT max(\"bytes_tx_delta\")  *8/[[polling_interval]] AS \"TX\" FROM \"$db\".\"$rp\".\"VnicStats\" WHERE (\"domain\" =~ /^$domain$/ AND \"fi_id\" =~ /^$fi_id$/ AND \"chassis\" =~ /^$chassis$/ AND \"peer_port\" =~ /^$bp_port$/) AND $timeFilter GROUP BY time($__interval), \"vif_name\", \"service_profile\" fill(linear)",
              "rawQuery": true,
              "refId": "A",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "bytes_tx_delta"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "mean"
                  },
                  {
                    "params": [
                      " *8/[[polling_interval]]"
                    ],
                    "type": "math"
                  },
                  {
                    "params": [
                      "TX"
                    ],
                    "type": "alias"
                  }
                ]
              ],
              "tags": [
                {
                  "key": "domain",
                  "operator": "=~",
                  "value": "/^$domain$/"
                },
                {
                  "condition": "AND",
                  "key": "fi_id",
                  "operator": "=~",
                  "value": "/^$fi_id$/"
                },
                {
                  "condition": "AND",
                  "key": "chassis",
                  "operator": "=~",
                  "value": "/^$chassis$/"
                },
                {
                  "condition": "AND",
                  "key": "peer_port",
                  "operator": "=~",
                  "value": "/^$bp_port$/"
                }
              ]
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "TX Traffic from vIFs to Backplane Port $bp_port in $chassis",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "format": "bps",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": "0",
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "datasource": "$data_source",
          "description": "**Use Case**: Find the root cause of egress traffic congestion. \n\n![](/public/img/utm/chassis_egress_congestion.png)\n\n**How to use**:  Select a UCS domain, chassis, and Backplane Port. One row is created per chassis. Graphs are generated for backplanes ports in that chassis within the row. Choose one Chassis at a time if you have many chassis. \n\nFI and FEX/IOM ports do not originate or terminate the traffic. Mostly, the real cause of congestion is one of the servers which is unable to sending data faster than the receiver can ingest it. Try to find one of those servers by comparing unusual PAUSE frame activity and traffic spikes. Refer to the graphs on the left with TX PAUSE frames on IOM/FEX backplane ports which indicate a backpressure applied to Servers against egress traffic.  PAUSE frames may be exchanged under normal conditions also. So, find unusual PAUSE frame activity with below symptoms (not an exhaustive list):\n- PAUSE frame rate in tens or hundreds per second is bad. Thousands, tens-of-thousands, or Millions per second is terribly bad.\n- Look for spike in PAUSE frame rate. Low stable values are probably fine.\n- Does one port among many other similar ports has higher PAUSE frame activity?\n\nOnce you have a suspect backplane port with unusual PAUSE frame activity, look at the graph on the right which shows the service profile and vNIC/vHBA traffic using that backplane port. High traffic rate or traffic spikes, especially with matching timestamp with unusual PAUSE frame activity, indicate that high utilization is the cause of congestion.\n\n**Details**: \n- A server receives PAUSE frames if it is transmitting data faster than the receiver can accept it. These frames are reported as TX PAUSE on the connected port (on FI or FEX or IOM). \n- PAUSE frames are not reported at per vNIC/vHBA granularity. \n- PAUSE frames are used by FC traffic (no-drop class) only. Congestion in Eth traffic is generally indicated by frame drops.\n",
          "fieldConfig": {
            "defaults": {},
            "overrides": []
          },
          "fill": 0,
          "fillGradient": 0,
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 0,
            "y": 20
          },
          "hiddenSeries": false,
          "id": 261,
          "interval": "[[polling_interval]]s",
          "legend": {
            "alignAsTable": true,
            "avg": true,
            "current": false,
            "max": true,
            "min": false,
            "rightSide": true,
            "show": true,
            "sort": "current",
            "sortDesc": true,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "options": {
            "alertThreshold": true
          },
          "percentage": false,
          "pluginVersion": "7.5.7",
          "pointradius": 2,
          "points": true,
          "renderer": "flot",
          "repeatDirection": "v",
          "repeatIteration": 1623359149151,
          "repeatPanelId": 178,
          "scopedVars": {
            "bp_port": {
              "selected": false,
              "text": "1/03",
              "value": "1/03"
            },
            "chassis": {
              "selected": false,
              "text": "chassis-1",
              "value": "chassis-1"
            }
          },
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "alias": "$col --> $tag_peer_service_profile",
              "groupBy": [
                {
                  "params": [
                    "$__interval"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "domain"
                  ],
                  "type": "tag"
                },
                {
                  "params": [
                    "chassis"
                  ],
                  "type": "tag"
                },
                {
                  "params": [
                    "bp_port"
                  ],
                  "type": "tag"
                },
                {
                  "params": [
                    "null"
                  ],
                  "type": "fill"
                }
              ],
              "measurement": "BackplanePortStats",
              "orderByTime": "ASC",
              "policy": "default",
              "query": "SELECT non_negative_difference(max(\"pause_tx\"))  / elapsed(max(pause_tx),1s) AS \"TX PAUSE\" FROM \"$db\".\"$rp\".\"BackplanePortStats\" WHERE (\"domain\" =~ /^$domain$/ AND \"fi_id\" =~ /^$fi_id$/ AND \"chassis\" =~ /^$chassis$/ AND \"bp_port\" =~ /^$bp_port$/) AND $timeFilter GROUP BY time($__interval), \"domain\", \"chassis\", \"bp_port\",\"peer_service_profile\"",
              "rawQuery": true,
              "refId": "A",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "pause_tx"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "mean"
                  },
                  {
                    "params": [],
                    "type": "non_negative_difference"
                  },
                  {
                    "params": [
                      " / [[polling_interval]]"
                    ],
                    "type": "math"
                  },
                  {
                    "params": [
                      "TX PAUSE"
                    ],
                    "type": "alias"
                  }
                ]
              ],
              "tags": [
                {
                  "key": "domain",
                  "operator": "=~",
                  "value": "/^$domain$/"
                },
                {
                  "condition": "AND",
                  "key": "fi_id",
                  "operator": "=~",
                  "value": "/^$fi_id$/"
                },
                {
                  "condition": "AND",
                  "key": "chassis",
                  "operator": "=~",
                  "value": "/^$chassis$/"
                },
                {
                  "condition": "AND",
                  "key": "bp_port",
                  "operator": "=~",
                  "value": "/^$bp_port$/"
                }
              ]
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "TX PAUSE on Backplane Port $bp_port in $chassis",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": "0",
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "datasource": "$data_source",
          "description": "Refer to the description of the panel on the left. Compare high PAUSE frame activity from the left graph to the high traffic activity in this graph.",
          "fieldConfig": {
            "defaults": {},
            "overrides": []
          },
          "fill": 1,
          "fillGradient": 0,
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 12,
            "y": 20
          },
          "hiddenSeries": false,
          "id": 265,
          "interval": "[[polling_interval]]s",
          "legend": {
            "alignAsTable": true,
            "avg": true,
            "current": false,
            "max": true,
            "min": false,
            "rightSide": true,
            "show": true,
            "sort": "current",
            "sortDesc": true,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "options": {
            "alertThreshold": true
          },
          "percentage": false,
          "pluginVersion": "7.5.7",
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "repeatDirection": "v",
          "repeatIteration": 1623359149151,
          "repeatPanelId": 180,
          "scopedVars": {
            "bp_port": {
              "selected": false,
              "text": "1/03",
              "value": "1/03"
            },
            "chassis": {
              "selected": false,
              "text": "chassis-1",
              "value": "chassis-1"
            }
          },
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": true,
          "steppedLine": false,
          "targets": [
            {
              "alias": "$tag_service_profile $tag_vif_name $col",
              "groupBy": [
                {
                  "params": [
                    "$__interval"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "vif_name"
                  ],
                  "type": "tag"
                },
                {
                  "params": [
                    "service_profile"
                  ],
                  "type": "tag"
                },
                {
                  "params": [
                    "linear"
                  ],
                  "type": "fill"
                }
              ],
              "measurement": "VnicStats",
              "orderByTime": "ASC",
              "policy": "default",
              "query": "SELECT max(\"bytes_tx_delta\")  *8/[[polling_interval]] AS \"TX\" FROM \"$db\".\"$rp\".\"VnicStats\" WHERE (\"domain\" =~ /^$domain$/ AND \"fi_id\" =~ /^$fi_id$/ AND \"chassis\" =~ /^$chassis$/ AND \"peer_port\" =~ /^$bp_port$/) AND $timeFilter GROUP BY time($__interval), \"vif_name\", \"service_profile\" fill(linear)",
              "rawQuery": true,
              "refId": "A",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "bytes_tx_delta"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "mean"
                  },
                  {
                    "params": [
                      " *8/[[polling_interval]]"
                    ],
                    "type": "math"
                  },
                  {
                    "params": [
                      "TX"
                    ],
                    "type": "alias"
                  }
                ]
              ],
              "tags": [
                {
                  "key": "domain",
                  "operator": "=~",
                  "value": "/^$domain$/"
                },
                {
                  "condition": "AND",
                  "key": "fi_id",
                  "operator": "=~",
                  "value": "/^$fi_id$/"
                },
                {
                  "condition": "AND",
                  "key": "chassis",
                  "operator": "=~",
                  "value": "/^$chassis$/"
                },
                {
                  "condition": "AND",
                  "key": "peer_port",
                  "operator": "=~",
                  "value": "/^$bp_port$/"
                }
              ]
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "TX Traffic from vIFs to Backplane Port $bp_port in $chassis",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "format": "bps",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": "0",
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "datasource": "$data_source",
          "description": "**Use Case**: Find the root cause of egress traffic congestion. \n\n![](/public/img/utm/chassis_egress_congestion.png)\n\n**How to use**:  Select a UCS domain, chassis, and Backplane Port. One row is created per chassis. Graphs are generated for backplanes ports in that chassis within the row. Choose one Chassis at a time if you have many chassis. \n\nFI and FEX/IOM ports do not originate or terminate the traffic. Mostly, the real cause of congestion is one of the servers which is unable to sending data faster than the receiver can ingest it. Try to find one of those servers by comparing unusual PAUSE frame activity and traffic spikes. Refer to the graphs on the left with TX PAUSE frames on IOM/FEX backplane ports which indicate a backpressure applied to Servers against egress traffic.  PAUSE frames may be exchanged under normal conditions also. So, find unusual PAUSE frame activity with below symptoms (not an exhaustive list):\n- PAUSE frame rate in tens or hundreds per second is bad. Thousands, tens-of-thousands, or Millions per second is terribly bad.\n- Look for spike in PAUSE frame rate. Low stable values are probably fine.\n- Does one port among many other similar ports has higher PAUSE frame activity?\n\nOnce you have a suspect backplane port with unusual PAUSE frame activity, look at the graph on the right which shows the service profile and vNIC/vHBA traffic using that backplane port. High traffic rate or traffic spikes, especially with matching timestamp with unusual PAUSE frame activity, indicate that high utilization is the cause of congestion.\n\n**Details**: \n- A server receives PAUSE frames if it is transmitting data faster than the receiver can accept it. These frames are reported as TX PAUSE on the connected port (on FI or FEX or IOM). \n- PAUSE frames are not reported at per vNIC/vHBA granularity. \n- PAUSE frames are used by FC traffic (no-drop class) only. Congestion in Eth traffic is generally indicated by frame drops.\n",
          "fieldConfig": {
            "defaults": {},
            "overrides": []
          },
          "fill": 0,
          "fillGradient": 0,
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 0,
            "y": 28
          },
          "hiddenSeries": false,
          "id": 262,
          "interval": "[[polling_interval]]s",
          "legend": {
            "alignAsTable": true,
            "avg": true,
            "current": false,
            "max": true,
            "min": false,
            "rightSide": true,
            "show": true,
            "sort": "current",
            "sortDesc": true,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "options": {
            "alertThreshold": true
          },
          "percentage": false,
          "pluginVersion": "7.5.7",
          "pointradius": 2,
          "points": true,
          "renderer": "flot",
          "repeatDirection": "v",
          "repeatIteration": 1623359149151,
          "repeatPanelId": 178,
          "scopedVars": {
            "bp_port": {
              "selected": false,
              "text": "1/05",
              "value": "1/05"
            },
            "chassis": {
              "selected": false,
              "text": "chassis-1",
              "value": "chassis-1"
            }
          },
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "alias": "$col --> $tag_peer_service_profile",
              "groupBy": [
                {
                  "params": [
                    "$__interval"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "domain"
                  ],
                  "type": "tag"
                },
                {
                  "params": [
                    "chassis"
                  ],
                  "type": "tag"
                },
                {
                  "params": [
                    "bp_port"
                  ],
                  "type": "tag"
                },
                {
                  "params": [
                    "null"
                  ],
                  "type": "fill"
                }
              ],
              "measurement": "BackplanePortStats",
              "orderByTime": "ASC",
              "policy": "default",
              "query": "SELECT non_negative_difference(max(\"pause_tx\"))  / elapsed(max(pause_tx),1s) AS \"TX PAUSE\" FROM \"$db\".\"$rp\".\"BackplanePortStats\" WHERE (\"domain\" =~ /^$domain$/ AND \"fi_id\" =~ /^$fi_id$/ AND \"chassis\" =~ /^$chassis$/ AND \"bp_port\" =~ /^$bp_port$/) AND $timeFilter GROUP BY time($__interval), \"domain\", \"chassis\", \"bp_port\",\"peer_service_profile\"",
              "rawQuery": true,
              "refId": "A",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "pause_tx"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "mean"
                  },
                  {
                    "params": [],
                    "type": "non_negative_difference"
                  },
                  {
                    "params": [
                      " / [[polling_interval]]"
                    ],
                    "type": "math"
                  },
                  {
                    "params": [
                      "TX PAUSE"
                    ],
                    "type": "alias"
                  }
                ]
              ],
              "tags": [
                {
                  "key": "domain",
                  "operator": "=~",
                  "value": "/^$domain$/"
                },
                {
                  "condition": "AND",
                  "key": "fi_id",
                  "operator": "=~",
                  "value": "/^$fi_id$/"
                },
                {
                  "condition": "AND",
                  "key": "chassis",
                  "operator": "=~",
                  "value": "/^$chassis$/"
                },
                {
                  "condition": "AND",
                  "key": "bp_port",
                  "operator": "=~",
                  "value": "/^$bp_port$/"
                }
              ]
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "TX PAUSE on Backplane Port $bp_port in $chassis",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": "0",
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "datasource": "$data_source",
          "description": "Refer to the description of the panel on the left. Compare high PAUSE frame activity from the left graph to the high traffic activity in this graph.",
          "fieldConfig": {
            "defaults": {},
            "overrides": []
          },
          "fill": 1,
          "fillGradient": 0,
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 12,
            "y": 28
          },
          "hiddenSeries": false,
          "id": 266,
          "interval": "[[polling_interval]]s",
          "legend": {
            "alignAsTable": true,
            "avg": true,
            "current": false,
            "max": true,
            "min": false,
            "rightSide": true,
            "show": true,
            "sort": "current",
            "sortDesc": true,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "options": {
            "alertThreshold": true
          },
          "percentage": false,
          "pluginVersion": "7.5.7",
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "repeatDirection": "v",
          "repeatIteration": 1623359149151,
          "repeatPanelId": 180,
          "scopedVars": {
            "bp_port": {
              "selected": false,
              "text": "1/05",
              "value": "1/05"
            },
            "chassis": {
              "selected": false,
              "text": "chassis-1",
              "value": "chassis-1"
            }
          },
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": true,
          "steppedLine": false,
          "targets": [
            {
              "alias": "$tag_service_profile $tag_vif_name $col",
              "groupBy": [
                {
                  "params": [
                    "$__interval"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "vif_name"
                  ],
                  "type": "tag"
                },
                {
                  "params": [
                    "service_profile"
                  ],
                  "type": "tag"
                },
                {
                  "params": [
                    "linear"
                  ],
                  "type": "fill"
                }
              ],
              "measurement": "VnicStats",
              "orderByTime": "ASC",
              "policy": "default",
              "query": "SELECT max(\"bytes_tx_delta\")  *8/[[polling_interval]] AS \"TX\" FROM \"$db\".\"$rp\".\"VnicStats\" WHERE (\"domain\" =~ /^$domain$/ AND \"fi_id\" =~ /^$fi_id$/ AND \"chassis\" =~ /^$chassis$/ AND \"peer_port\" =~ /^$bp_port$/) AND $timeFilter GROUP BY time($__interval), \"vif_name\", \"service_profile\" fill(linear)",
              "rawQuery": true,
              "refId": "A",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "bytes_tx_delta"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "mean"
                  },
                  {
                    "params": [
                      " *8/[[polling_interval]]"
                    ],
                    "type": "math"
                  },
                  {
                    "params": [
                      "TX"
                    ],
                    "type": "alias"
                  }
                ]
              ],
              "tags": [
                {
                  "key": "domain",
                  "operator": "=~",
                  "value": "/^$domain$/"
                },
                {
                  "condition": "AND",
                  "key": "fi_id",
                  "operator": "=~",
                  "value": "/^$fi_id$/"
                },
                {
                  "condition": "AND",
                  "key": "chassis",
                  "operator": "=~",
                  "value": "/^$chassis$/"
                },
                {
                  "condition": "AND",
                  "key": "peer_port",
                  "operator": "=~",
                  "value": "/^$bp_port$/"
                }
              ]
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "TX Traffic from vIFs to Backplane Port $bp_port in $chassis",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "format": "bps",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": "0",
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "datasource": "$data_source",
          "description": "**Use Case**: Find the root cause of egress traffic congestion. \n\n![](/public/img/utm/chassis_egress_congestion.png)\n\n**How to use**:  Select a UCS domain, chassis, and Backplane Port. One row is created per chassis. Graphs are generated for backplanes ports in that chassis within the row. Choose one Chassis at a time if you have many chassis. \n\nFI and FEX/IOM ports do not originate or terminate the traffic. Mostly, the real cause of congestion is one of the servers which is unable to sending data faster than the receiver can ingest it. Try to find one of those servers by comparing unusual PAUSE frame activity and traffic spikes. Refer to the graphs on the left with TX PAUSE frames on IOM/FEX backplane ports which indicate a backpressure applied to Servers against egress traffic.  PAUSE frames may be exchanged under normal conditions also. So, find unusual PAUSE frame activity with below symptoms (not an exhaustive list):\n- PAUSE frame rate in tens or hundreds per second is bad. Thousands, tens-of-thousands, or Millions per second is terribly bad.\n- Look for spike in PAUSE frame rate. Low stable values are probably fine.\n- Does one port among many other similar ports has higher PAUSE frame activity?\n\nOnce you have a suspect backplane port with unusual PAUSE frame activity, look at the graph on the right which shows the service profile and vNIC/vHBA traffic using that backplane port. High traffic rate or traffic spikes, especially with matching timestamp with unusual PAUSE frame activity, indicate that high utilization is the cause of congestion.\n\n**Details**: \n- A server receives PAUSE frames if it is transmitting data faster than the receiver can accept it. These frames are reported as TX PAUSE on the connected port (on FI or FEX or IOM). \n- PAUSE frames are not reported at per vNIC/vHBA granularity. \n- PAUSE frames are used by FC traffic (no-drop class) only. Congestion in Eth traffic is generally indicated by frame drops.\n",
          "fieldConfig": {
            "defaults": {},
            "overrides": []
          },
          "fill": 0,
          "fillGradient": 0,
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 0,
            "y": 36
          },
          "hiddenSeries": false,
          "id": 263,
          "interval": "[[polling_interval]]s",
          "legend": {
            "alignAsTable": true,
            "avg": true,
            "current": false,
            "max": true,
            "min": false,
            "rightSide": true,
            "show": true,
            "sort": "current",
            "sortDesc": true,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "options": {
            "alertThreshold": true
          },
          "percentage": false,
          "pluginVersion": "7.5.7",
          "pointradius": 2,
          "points": true,
          "renderer": "flot",
          "repeatDirection": "v",
          "repeatIteration": 1623359149151,
          "repeatPanelId": 178,
          "scopedVars": {
            "bp_port": {
              "selected": false,
              "text": "1/07",
              "value": "1/07"
            },
            "chassis": {
              "selected": false,
              "text": "chassis-1",
              "value": "chassis-1"
            }
          },
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "alias": "$col --> $tag_peer_service_profile",
              "groupBy": [
                {
                  "params": [
                    "$__interval"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "domain"
                  ],
                  "type": "tag"
                },
                {
                  "params": [
                    "chassis"
                  ],
                  "type": "tag"
                },
                {
                  "params": [
                    "bp_port"
                  ],
                  "type": "tag"
                },
                {
                  "params": [
                    "null"
                  ],
                  "type": "fill"
                }
              ],
              "measurement": "BackplanePortStats",
              "orderByTime": "ASC",
              "policy": "default",
              "query": "SELECT non_negative_difference(max(\"pause_tx\"))  / elapsed(max(pause_tx),1s) AS \"TX PAUSE\" FROM \"$db\".\"$rp\".\"BackplanePortStats\" WHERE (\"domain\" =~ /^$domain$/ AND \"fi_id\" =~ /^$fi_id$/ AND \"chassis\" =~ /^$chassis$/ AND \"bp_port\" =~ /^$bp_port$/) AND $timeFilter GROUP BY time($__interval), \"domain\", \"chassis\", \"bp_port\",\"peer_service_profile\"",
              "rawQuery": true,
              "refId": "A",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "pause_tx"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "mean"
                  },
                  {
                    "params": [],
                    "type": "non_negative_difference"
                  },
                  {
                    "params": [
                      " / [[polling_interval]]"
                    ],
                    "type": "math"
                  },
                  {
                    "params": [
                      "TX PAUSE"
                    ],
                    "type": "alias"
                  }
                ]
              ],
              "tags": [
                {
                  "key": "domain",
                  "operator": "=~",
                  "value": "/^$domain$/"
                },
                {
                  "condition": "AND",
                  "key": "fi_id",
                  "operator": "=~",
                  "value": "/^$fi_id$/"
                },
                {
                  "condition": "AND",
                  "key": "chassis",
                  "operator": "=~",
                  "value": "/^$chassis$/"
                },
                {
                  "condition": "AND",
                  "key": "bp_port",
                  "operator": "=~",
                  "value": "/^$bp_port$/"
                }
              ]
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "TX PAUSE on Backplane Port $bp_port in $chassis",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": "0",
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "datasource": "$data_source",
          "description": "Refer to the description of the panel on the left. Compare high PAUSE frame activity from the left graph to the high traffic activity in this graph.",
          "fieldConfig": {
            "defaults": {},
            "overrides": []
          },
          "fill": 1,
          "fillGradient": 0,
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 12,
            "y": 36
          },
          "hiddenSeries": false,
          "id": 267,
          "interval": "[[polling_interval]]s",
          "legend": {
            "alignAsTable": true,
            "avg": true,
            "current": false,
            "max": true,
            "min": false,
            "rightSide": true,
            "show": true,
            "sort": "current",
            "sortDesc": true,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "options": {
            "alertThreshold": true
          },
          "percentage": false,
          "pluginVersion": "7.5.7",
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "repeatDirection": "v",
          "repeatIteration": 1623359149151,
          "repeatPanelId": 180,
          "scopedVars": {
            "bp_port": {
              "selected": false,
              "text": "1/07",
              "value": "1/07"
            },
            "chassis": {
              "selected": false,
              "text": "chassis-1",
              "value": "chassis-1"
            }
          },
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": true,
          "steppedLine": false,
          "targets": [
            {
              "alias": "$tag_service_profile $tag_vif_name $col",
              "groupBy": [
                {
                  "params": [
                    "$__interval"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "vif_name"
                  ],
                  "type": "tag"
                },
                {
                  "params": [
                    "service_profile"
                  ],
                  "type": "tag"
                },
                {
                  "params": [
                    "linear"
                  ],
                  "type": "fill"
                }
              ],
              "measurement": "VnicStats",
              "orderByTime": "ASC",
              "policy": "default",
              "query": "SELECT max(\"bytes_tx_delta\")  *8/[[polling_interval]] AS \"TX\" FROM \"$db\".\"$rp\".\"VnicStats\" WHERE (\"domain\" =~ /^$domain$/ AND \"fi_id\" =~ /^$fi_id$/ AND \"chassis\" =~ /^$chassis$/ AND \"peer_port\" =~ /^$bp_port$/) AND $timeFilter GROUP BY time($__interval), \"vif_name\", \"service_profile\" fill(linear)",
              "rawQuery": true,
              "refId": "A",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "bytes_tx_delta"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "mean"
                  },
                  {
                    "params": [
                      " *8/[[polling_interval]]"
                    ],
                    "type": "math"
                  },
                  {
                    "params": [
                      "TX"
                    ],
                    "type": "alias"
                  }
                ]
              ],
              "tags": [
                {
                  "key": "domain",
                  "operator": "=~",
                  "value": "/^$domain$/"
                },
                {
                  "condition": "AND",
                  "key": "fi_id",
                  "operator": "=~",
                  "value": "/^$fi_id$/"
                },
                {
                  "condition": "AND",
                  "key": "chassis",
                  "operator": "=~",
                  "value": "/^$chassis$/"
                },
                {
                  "condition": "AND",
                  "key": "peer_port",
                  "operator": "=~",
                  "value": "/^$bp_port$/"
                }
              ]
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "TX Traffic from vIFs to Backplane Port $bp_port in $chassis",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "format": "bps",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": "0",
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "datasource": "$data_source",
          "description": "**Use Case**: Find the root cause of egress traffic congestion. \n\n![](/public/img/utm/chassis_egress_congestion.png)\n\n**How to use**:  Select a UCS domain, chassis, and Backplane Port. One row is created per chassis. Graphs are generated for backplanes ports in that chassis within the row. Choose one Chassis at a time if you have many chassis. \n\nFI and FEX/IOM ports do not originate or terminate the traffic. Mostly, the real cause of congestion is one of the servers which is unable to sending data faster than the receiver can ingest it. Try to find one of those servers by comparing unusual PAUSE frame activity and traffic spikes. Refer to the graphs on the left with TX PAUSE frames on IOM/FEX backplane ports which indicate a backpressure applied to Servers against egress traffic.  PAUSE frames may be exchanged under normal conditions also. So, find unusual PAUSE frame activity with below symptoms (not an exhaustive list):\n- PAUSE frame rate in tens or hundreds per second is bad. Thousands, tens-of-thousands, or Millions per second is terribly bad.\n- Look for spike in PAUSE frame rate. Low stable values are probably fine.\n- Does one port among many other similar ports has higher PAUSE frame activity?\n\nOnce you have a suspect backplane port with unusual PAUSE frame activity, look at the graph on the right which shows the service profile and vNIC/vHBA traffic using that backplane port. High traffic rate or traffic spikes, especially with matching timestamp with unusual PAUSE frame activity, indicate that high utilization is the cause of congestion.\n\n**Details**: \n- A server receives PAUSE frames if it is transmitting data faster than the receiver can accept it. These frames are reported as TX PAUSE on the connected port (on FI or FEX or IOM). \n- PAUSE frames are not reported at per vNIC/vHBA granularity. \n- PAUSE frames are used by FC traffic (no-drop class) only. Congestion in Eth traffic is generally indicated by frame drops.\n",
          "fieldConfig": {
            "defaults": {},
            "overrides": []
          },
          "fill": 0,
          "fillGradient": 0,
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 0,
            "y": 44
          },
          "hiddenSeries": false,
          "id": 264,
          "interval": "[[polling_interval]]s",
          "legend": {
            "alignAsTable": true,
            "avg": true,
            "current": false,
            "max": true,
            "min": false,
            "rightSide": true,
            "show": true,
            "sort": "current",
            "sortDesc": true,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "options": {
            "alertThreshold": true
          },
          "percentage": false,
          "pluginVersion": "7.5.7",
          "pointradius": 2,
          "points": true,
          "renderer": "flot",
          "repeatDirection": "v",
          "repeatIteration": 1623359149151,
          "repeatPanelId": 178,
          "scopedVars": {
            "bp_port": {
              "selected": false,
              "text": "1/09",
              "value": "1/09"
            },
            "chassis": {
              "selected": false,
              "text": "chassis-1",
              "value": "chassis-1"
            }
          },
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "alias": "$col --> $tag_peer_service_profile",
              "groupBy": [
                {
                  "params": [
                    "$__interval"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "domain"
                  ],
                  "type": "tag"
                },
                {
                  "params": [
                    "chassis"
                  ],
                  "type": "tag"
                },
                {
                  "params": [
                    "bp_port"
                  ],
                  "type": "tag"
                },
                {
                  "params": [
                    "null"
                  ],
                  "type": "fill"
                }
              ],
              "measurement": "BackplanePortStats",
              "orderByTime": "ASC",
              "policy": "default",
              "query": "SELECT non_negative_difference(max(\"pause_tx\"))  / elapsed(max(pause_tx),1s) AS \"TX PAUSE\" FROM \"$db\".\"$rp\".\"BackplanePortStats\" WHERE (\"domain\" =~ /^$domain$/ AND \"fi_id\" =~ /^$fi_id$/ AND \"chassis\" =~ /^$chassis$/ AND \"bp_port\" =~ /^$bp_port$/) AND $timeFilter GROUP BY time($__interval), \"domain\", \"chassis\", \"bp_port\",\"peer_service_profile\"",
              "rawQuery": true,
              "refId": "A",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "pause_tx"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "mean"
                  },
                  {
                    "params": [],
                    "type": "non_negative_difference"
                  },
                  {
                    "params": [
                      " / [[polling_interval]]"
                    ],
                    "type": "math"
                  },
                  {
                    "params": [
                      "TX PAUSE"
                    ],
                    "type": "alias"
                  }
                ]
              ],
              "tags": [
                {
                  "key": "domain",
                  "operator": "=~",
                  "value": "/^$domain$/"
                },
                {
                  "condition": "AND",
                  "key": "fi_id",
                  "operator": "=~",
                  "value": "/^$fi_id$/"
                },
                {
                  "condition": "AND",
                  "key": "chassis",
                  "operator": "=~",
                  "value": "/^$chassis$/"
                },
                {
                  "condition": "AND",
                  "key": "bp_port",
                  "operator": "=~",
                  "value": "/^$bp_port$/"
                }
              ]
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "TX PAUSE on Backplane Port $bp_port in $chassis",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": "0",
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "datasource": "$data_source",
          "description": "Refer to the description of the panel on the left. Compare high PAUSE frame activity from the left graph to the high traffic activity in this graph.",
          "fieldConfig": {
            "defaults": {},
            "overrides": []
          },
          "fill": 1,
          "fillGradient": 0,
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 12,
            "y": 44
          },
          "hiddenSeries": false,
          "id": 268,
          "interval": "[[polling_interval]]s",
          "legend": {
            "alignAsTable": true,
            "avg": true,
            "current": false,
            "max": true,
            "min": false,
            "rightSide": true,
            "show": true,
            "sort": "current",
            "sortDesc": true,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "options": {
            "alertThreshold": true
          },
          "percentage": false,
          "pluginVersion": "7.5.7",
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "repeatDirection": "v",
          "repeatIteration": 1623359149151,
          "repeatPanelId": 180,
          "scopedVars": {
            "bp_port": {
              "selected": false,
              "text": "1/09",
              "value": "1/09"
            },
            "chassis": {
              "selected": false,
              "text": "chassis-1",
              "value": "chassis-1"
            }
          },
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": true,
          "steppedLine": false,
          "targets": [
            {
              "alias": "$tag_service_profile $tag_vif_name $col",
              "groupBy": [
                {
                  "params": [
                    "$__interval"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "vif_name"
                  ],
                  "type": "tag"
                },
                {
                  "params": [
                    "service_profile"
                  ],
                  "type": "tag"
                },
                {
                  "params": [
                    "linear"
                  ],
                  "type": "fill"
                }
              ],
              "measurement": "VnicStats",
              "orderByTime": "ASC",
              "policy": "default",
              "query": "SELECT max(\"bytes_tx_delta\")  *8/[[polling_interval]] AS \"TX\" FROM \"$db\".\"$rp\".\"VnicStats\" WHERE (\"domain\" =~ /^$domain$/ AND \"fi_id\" =~ /^$fi_id$/ AND \"chassis\" =~ /^$chassis$/ AND \"peer_port\" =~ /^$bp_port$/) AND $timeFilter GROUP BY time($__interval), \"vif_name\", \"service_profile\" fill(linear)",
              "rawQuery": true,
              "refId": "A",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "bytes_tx_delta"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "mean"
                  },
                  {
                    "params": [
                      " *8/[[polling_interval]]"
                    ],
                    "type": "math"
                  },
                  {
                    "params": [
                      "TX"
                    ],
                    "type": "alias"
                  }
                ]
              ],
              "tags": [
                {
                  "key": "domain",
                  "operator": "=~",
                  "value": "/^$domain$/"
                },
                {
                  "condition": "AND",
                  "key": "fi_id",
                  "operator": "=~",
                  "value": "/^$fi_id$/"
                },
                {
                  "condition": "AND",
                  "key": "chassis",
                  "operator": "=~",
                  "value": "/^$chassis$/"
                },
                {
                  "condition": "AND",
                  "key": "peer_port",
                  "operator": "=~",
                  "value": "/^$bp_port$/"
                }
              ]
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "TX Traffic from vIFs to Backplane Port $bp_port in $chassis",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "format": "bps",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": "0",
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        }
      ],
      "repeat": "chassis",
      "title": "Egress Traffic Congestion in Chassis - $chassis",
      "type": "row"
    },
    {
      "collapsed": true,
      "datasource": null,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 38
      },
      "id": 247,
      "panels": [
        {
          "datasource": "$data_source",
          "description": "",
          "fieldConfig": {
            "defaults": {},
            "overrides": []
          },
          "flowchartsData": {
            "flowcharts": [
              {
                "allowDrawio": false,
                "bgColor": null,
                "center": true,
                "csv": "## See more information for the syntax at https://drawio-app.com/import-from-csv-to-drawio/\n##\n## Example CSV. Use ## for comments and # for configuration.\n## The following names are reserved and should not be used (or ignored):\n## id, tooltip, placeholder(s), link and label (see below)\n##\n#\n## Node label with placeholders and HTML.\n## Default is '%name_of_first_column%'.\n#\n# label: %name%<br><i style=\"color:gray;\">%position%</i><br><a href=\"mailto:%email%\">Email</a>\n#\n## Node style (placeholders are replaced once).\n## Default is the current style for nodes.\n#\n# style: label;image=%image%;whiteSpace=wrap;html=1;rounded=1;fillColor=%fill%;strokeColor=%stroke%;\n#\n## Parent style for nodes with child nodes (placeholders are replaced once).\n#\n# parentstyle: swimlane;whiteSpace=wrap;html=1;childLayout=stackLayout;horizontal=1;horizontalStack=0;resizeParent=1;resizeLast=0;collapsible=1;\n#\n## Optional column name that contains a reference to a named style in styles.\n## Default is the current style for nodes.\n#\n# stylename: -\n#\n## JSON for named styles of the form {\"name\": \"style\", \"name\": \"style\"} where style is a cell style with\n## placeholders that are replaced once.\n#\n# styles: -\n#\n## Optional column name that contains a reference to a named label in labels.\n## Default is the current label.\n#\n# labelname: -\n#\n## JSON for named labels of the form {\"name\": \"label\", \"name\": \"label\"} where label is a cell label with\n## placeholders.\n#\n# labels: -\n#\n## Uses the given column name as the identity for cells (updates existing cells).\n## Default is no identity (empty value or -).\n#\n# identity: -\n#\n## Uses the given column name as the parent reference for cells. Default is no parent (empty or -).\n## The identity above is used for resolving the reference so it must be specified.\n#\n# parent: -\n#\n## Adds a prefix to the identity of cells to make sure they do not collide with existing cells (whose\n## IDs are numbers from 0..n, sometimes with a GUID prefix in the context of realtime collaboration).\n## Default is csvimport-.\n#\n# namespace: csvimport-\n#\n## Connections between rows (\"from\": source colum, \"to\": target column).\n## Label, style and invert are optional. Defaults are '', current style and false.\n## If placeholders are used in the style, they are replaced with data from the source.\n## An optional placeholders can be set to target to use data from the target instead.\n## In addition to label, an optional fromlabel and tolabel can be used to name the column\n## that contains the text for the label in the edges source or target (invert ignored).\n## The label is concatenated in the form fromlabel + label + tolabel if all are defined.\n## The target column may contain a comma-separated list of values.\n## Multiple connect entries are allowed.\n#\n# connect: {\"from\": \"manager\", \"to\": \"name\", \"invert\": true, \"label\": \"manages\", \\\n#          \"style\": \"curved=1;endArrow=blockThin;endFill=1;fontSize=11;\"}\n# connect: {\"from\": \"refs\", \"to\": \"id\", \"style\": \"curved=1;fontSize=11;\"}\n#\n## Node x-coordinate. Possible value is a column name. Default is empty. Layouts will\n## override this value.\n#\n# left: \n#\n## Node y-coordinate. Possible value is a column name. Default is empty. Layouts will\n## override this value.\n#\n# top: \n#\n## Node width. Possible value is a number (in px), auto or an @ sign followed by a column\n## name that contains the value for the width. Default is auto.\n#\n# width: auto\n#\n## Node height. Possible value is a number (in px), auto or an @ sign followed by a column\n## name that contains the value for the height. Default is auto.\n#\n# height: auto\n#\n## Padding for autosize. Default is 0.\n#\n# padding: -12\n#\n## Comma-separated list of ignored columns for metadata. (These can be\n## used for connections and styles but will not be added as metadata.)\n#\n# ignore: id,image,fill,stroke,refs,manager\n#\n## Column to be renamed to link attribute (used as link).\n#\n# link: url\n#\n## Spacing between nodes. Default is 40.\n#\n# nodespacing: 40\n#\n## Spacing between levels of hierarchical layouts. Default is 100.\n#\n# levelspacing: 100\n#\n## Spacing between parallel edges. Default is 40. Use 0 to disable.\n#\n# edgespacing: 40\n#\n## Name or JSON of layout. Possible values are auto, none, verticaltree, horizontaltree,\n## verticalflow, horizontalflow, organic, circle or a JSON string as used in Layout, Apply.\n## Default is auto.\n#\n# layout: auto\n#\n## ---- CSV below this line. First line are column names. ----\nname,position,id,location,manager,email,fill,stroke,refs,url,image\nEvan Miller,CFO,emi,Office 1,,me@example.com,#dae8fc,#6c8ebf,,https://www.draw.io,https://cdn3.iconfinder.com/data/icons/user-avatars-1/512/users-9-2-128.png\nEdward Morrison,Brand Manager,emo,Office 2,Evan Miller,me@example.com,#d5e8d4,#82b366,,https://www.draw.io,https://cdn3.iconfinder.com/data/icons/user-avatars-1/512/users-10-3-128.png\nRon Donovan,System Admin,rdo,Office 3,Evan Miller,me@example.com,#d5e8d4,#82b366,\"emo,tva\",https://www.draw.io,https://cdn3.iconfinder.com/data/icons/user-avatars-1/512/users-2-128.png\nTessa Valet,HR Director,tva,Office 4,Evan Miller,me@example.com,#d5e8d4,#82b366,,https://www.draw.io,https://cdn3.iconfinder.com/data/icons/user-avatars-1/512/users-3-128.png\n",
                "download": false,
                "editorTheme": "dark",
                "editorUrl": "https://www.draw.io",
                "enableAnim": true,
                "grid": false,
                "lock": true,
                "name": "Main",
                "scale": true,
                "tooltip": true,
                "type": "xml",
                "url": "http://<YourUrl>/<Your XML/drawio file/api>",
                "xml": "<mxGraphModel dx=\"1635\" dy=\"902\" grid=\"1\" gridSize=\"10\" guides=\"1\" tooltips=\"1\" connect=\"1\" arrows=\"1\" fold=\"1\" page=\"1\" pageScale=\"1\" pageWidth=\"850\" pageHeight=\"1100\" math=\"0\" shadow=\"0\">\n    <root>\n        <mxCell id=\"0\" />\n        <mxCell id=\"1\" parent=\"0\" />\n        <mxCell id=\"6opUUWU2XM1935bXFmZ7-1\" value=\"&lt;font face=&quot;Times New Roman&quot;&gt;FI-A ( \n)&lt;/font&gt;\" style=\"rounded=1;whiteSpace=wrap;html=1;fillColor=#6666FF;strokeColor=none;arcSize=50;fontColor=#FFFFFF;fontStyle=1\" parent=\"1\" vertex=\"1\">\n            <mxGeometry x=\"160\" y=\"390\" width=\"520\" height=\"18\" as=\"geometry\" />\n        </mxCell>\n    </root>\n</mxGraphModel>\n",
                "zoom": "100%"
              }
            ]
          },
          "format": "short",
          "graphId": "flowchart_242",
          "gridPos": {
            "h": 2,
            "w": 12,
            "x": 0,
            "y": 13
          },
          "id": 242,
          "links": [],
          "newFlag": false,
          "pluginVersion": "7.1.1",
          "rulesData": {
            "rulesData": [
              {
                "aggregation": "current",
                "alias": "leadership",
                "colors": [
                  "rgba(245, 54, 54, 0.9)",
                  "rgba(237, 129, 40, 0.89)",
                  "rgba(50, 172, 45, 0.97)"
                ],
                "column": "Time",
                "dateFormat": "YYYY-MM-DD HH:mm:ss",
                "decimals": 2,
                "eventData": [],
                "eventProp": "id",
                "eventRegEx": false,
                "gradient": false,
                "hidden": false,
                "invert": false,
                "linkData": [],
                "linkProp": "id",
                "linkRegEx": true,
                "mappingType": 1,
                "metricType": "serie",
                "order": 1,
                "overlayIcon": false,
                "pattern": "FIEnvStats.leadership",
                "rangeData": [],
                "reduce": true,
                "refId": "A",
                "sanitize": false,
                "shapeData": [],
                "shapeProp": "id",
                "shapeRegEx": true,
                "stringThresholds": [
                  "/.*/",
                  "/.*/"
                ],
                "textData": [
                  {
                    "hidden": false,
                    "pattern": "6opUUWU2XM1935bXFmZ7-1",
                    "textOn": "wmd",
                    "textPattern": "/  /",
                    "textReplace": "pattern"
                  }
                ],
                "textProp": "id",
                "textRegEx": true,
                "thresholds": [
                  50,
                  80
                ],
                "tooltip": false,
                "tooltipColors": false,
                "tooltipLabel": "",
                "tooltipOn": "a",
                "tpDirection": "v",
                "tpGraph": false,
                "tpGraphHigh": null,
                "tpGraphLow": null,
                "tpGraphScale": "linear",
                "tpGraphSize": "100%",
                "tpGraphType": "line",
                "type": "string",
                "unit": "short",
                "valueData": []
              }
            ]
          },
          "targets": [
            {
              "groupBy": [
                {
                  "params": [
                    "$__interval"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "null"
                  ],
                  "type": "fill"
                }
              ],
              "orderByTime": "ASC",
              "policy": "default",
              "query": "SELECT last(\"leadership\") as \"leadership\" FROM \"$db\".\"$rp\".\"FIEnvStats\" WHERE (\"domain\" =~ /^$domain$/ AND \"fi_id\" = 'A') AND $timeFilter",
              "rawQuery": true,
              "refId": "A",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "value"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "mean"
                  }
                ]
              ],
              "tags": []
            }
          ],
          "timeFrom": null,
          "timeShift": null,
          "transparent": true,
          "type": "agenty-flowcharting-panel",
          "valueName": "current",
          "version": "0.9.0"
        },
        {
          "datasource": "$data_source",
          "description": "",
          "fieldConfig": {
            "defaults": {},
            "overrides": []
          },
          "flowchartsData": {
            "flowcharts": [
              {
                "allowDrawio": false,
                "bgColor": null,
                "center": true,
                "csv": "## See more information for the syntax at https://drawio-app.com/import-from-csv-to-drawio/\n##\n## Example CSV. Use ## for comments and # for configuration.\n## The following names are reserved and should not be used (or ignored):\n## id, tooltip, placeholder(s), link and label (see below)\n##\n#\n## Node label with placeholders and HTML.\n## Default is '%name_of_first_column%'.\n#\n# label: %name%<br><i style=\"color:gray;\">%position%</i><br><a href=\"mailto:%email%\">Email</a>\n#\n## Node style (placeholders are replaced once).\n## Default is the current style for nodes.\n#\n# style: label;image=%image%;whiteSpace=wrap;html=1;rounded=1;fillColor=%fill%;strokeColor=%stroke%;\n#\n## Parent style for nodes with child nodes (placeholders are replaced once).\n#\n# parentstyle: swimlane;whiteSpace=wrap;html=1;childLayout=stackLayout;horizontal=1;horizontalStack=0;resizeParent=1;resizeLast=0;collapsible=1;\n#\n## Optional column name that contains a reference to a named style in styles.\n## Default is the current style for nodes.\n#\n# stylename: -\n#\n## JSON for named styles of the form {\"name\": \"style\", \"name\": \"style\"} where style is a cell style with\n## placeholders that are replaced once.\n#\n# styles: -\n#\n## Optional column name that contains a reference to a named label in labels.\n## Default is the current label.\n#\n# labelname: -\n#\n## JSON for named labels of the form {\"name\": \"label\", \"name\": \"label\"} where label is a cell label with\n## placeholders.\n#\n# labels: -\n#\n## Uses the given column name as the identity for cells (updates existing cells).\n## Default is no identity (empty value or -).\n#\n# identity: -\n#\n## Uses the given column name as the parent reference for cells. Default is no parent (empty or -).\n## The identity above is used for resolving the reference so it must be specified.\n#\n# parent: -\n#\n## Adds a prefix to the identity of cells to make sure they do not collide with existing cells (whose\n## IDs are numbers from 0..n, sometimes with a GUID prefix in the context of realtime collaboration).\n## Default is csvimport-.\n#\n# namespace: csvimport-\n#\n## Connections between rows (\"from\": source colum, \"to\": target column).\n## Label, style and invert are optional. Defaults are '', current style and false.\n## If placeholders are used in the style, they are replaced with data from the source.\n## An optional placeholders can be set to target to use data from the target instead.\n## In addition to label, an optional fromlabel and tolabel can be used to name the column\n## that contains the text for the label in the edges source or target (invert ignored).\n## The label is concatenated in the form fromlabel + label + tolabel if all are defined.\n## The target column may contain a comma-separated list of values.\n## Multiple connect entries are allowed.\n#\n# connect: {\"from\": \"manager\", \"to\": \"name\", \"invert\": true, \"label\": \"manages\", \\\n#          \"style\": \"curved=1;endArrow=blockThin;endFill=1;fontSize=11;\"}\n# connect: {\"from\": \"refs\", \"to\": \"id\", \"style\": \"curved=1;fontSize=11;\"}\n#\n## Node x-coordinate. Possible value is a column name. Default is empty. Layouts will\n## override this value.\n#\n# left: \n#\n## Node y-coordinate. Possible value is a column name. Default is empty. Layouts will\n## override this value.\n#\n# top: \n#\n## Node width. Possible value is a number (in px), auto or an @ sign followed by a column\n## name that contains the value for the width. Default is auto.\n#\n# width: auto\n#\n## Node height. Possible value is a number (in px), auto or an @ sign followed by a column\n## name that contains the value for the height. Default is auto.\n#\n# height: auto\n#\n## Padding for autosize. Default is 0.\n#\n# padding: -12\n#\n## Comma-separated list of ignored columns for metadata. (These can be\n## used for connections and styles but will not be added as metadata.)\n#\n# ignore: id,image,fill,stroke,refs,manager\n#\n## Column to be renamed to link attribute (used as link).\n#\n# link: url\n#\n## Spacing between nodes. Default is 40.\n#\n# nodespacing: 40\n#\n## Spacing between levels of hierarchical layouts. Default is 100.\n#\n# levelspacing: 100\n#\n## Spacing between parallel edges. Default is 40. Use 0 to disable.\n#\n# edgespacing: 40\n#\n## Name or JSON of layout. Possible values are auto, none, verticaltree, horizontaltree,\n## verticalflow, horizontalflow, organic, circle or a JSON string as used in Layout, Apply.\n## Default is auto.\n#\n# layout: auto\n#\n## ---- CSV below this line. First line are column names. ----\nname,position,id,location,manager,email,fill,stroke,refs,url,image\nEvan Miller,CFO,emi,Office 1,,me@example.com,#dae8fc,#6c8ebf,,https://www.draw.io,https://cdn3.iconfinder.com/data/icons/user-avatars-1/512/users-9-2-128.png\nEdward Morrison,Brand Manager,emo,Office 2,Evan Miller,me@example.com,#d5e8d4,#82b366,,https://www.draw.io,https://cdn3.iconfinder.com/data/icons/user-avatars-1/512/users-10-3-128.png\nRon Donovan,System Admin,rdo,Office 3,Evan Miller,me@example.com,#d5e8d4,#82b366,\"emo,tva\",https://www.draw.io,https://cdn3.iconfinder.com/data/icons/user-avatars-1/512/users-2-128.png\nTessa Valet,HR Director,tva,Office 4,Evan Miller,me@example.com,#d5e8d4,#82b366,,https://www.draw.io,https://cdn3.iconfinder.com/data/icons/user-avatars-1/512/users-3-128.png\n",
                "download": false,
                "editorTheme": "dark",
                "editorUrl": "https://www.draw.io",
                "enableAnim": true,
                "grid": false,
                "lock": true,
                "name": "Main",
                "scale": true,
                "tooltip": true,
                "type": "xml",
                "url": "http://<YourUrl>/<Your XML/drawio file/api>",
                "xml": "<mxGraphModel dx=\"1635\" dy=\"902\" grid=\"1\" gridSize=\"10\" guides=\"1\" tooltips=\"1\" connect=\"1\" arrows=\"1\" fold=\"1\" page=\"1\" pageScale=\"1\" pageWidth=\"850\" pageHeight=\"1100\" math=\"0\" shadow=\"0\">\n    <root>\n        <mxCell id=\"0\" />\n        <mxCell id=\"1\" parent=\"0\" />\n        <mxCell id=\"6opUUWU2XM1935bXFmZ7-1\" value=\"&lt;font face=&quot;Times New Roman&quot;&gt;FI-B ( \n)&lt;/font&gt;\" style=\"rounded=1;whiteSpace=wrap;html=1;fillColor=#B266FF;strokeColor=none;arcSize=50;fontColor=#FFFFFF;fontStyle=1\" parent=\"1\" vertex=\"1\">\n            <mxGeometry x=\"160\" y=\"390\" width=\"520\" height=\"18\" as=\"geometry\" />\n        </mxCell>\n    </root>\n</mxGraphModel>\n",
                "zoom": "100%"
              }
            ]
          },
          "format": "short",
          "graphId": "flowchart_243",
          "gridPos": {
            "h": 2,
            "w": 12,
            "x": 12,
            "y": 13
          },
          "id": 243,
          "links": [],
          "newFlag": false,
          "pluginVersion": "7.1.1",
          "rulesData": {
            "rulesData": [
              {
                "aggregation": "current",
                "alias": "leadership",
                "colors": [
                  "rgba(245, 54, 54, 0.9)",
                  "rgba(237, 129, 40, 0.89)",
                  "rgba(50, 172, 45, 0.97)"
                ],
                "column": "Time",
                "dateFormat": "YYYY-MM-DD HH:mm:ss",
                "decimals": 2,
                "eventData": [],
                "eventProp": "id",
                "eventRegEx": false,
                "gradient": false,
                "hidden": false,
                "invert": false,
                "linkData": [],
                "linkProp": "id",
                "linkRegEx": true,
                "mappingType": 1,
                "metricType": "serie",
                "order": 1,
                "overlayIcon": false,
                "pattern": "FIEnvStats.leadership",
                "rangeData": [],
                "reduce": true,
                "refId": "A",
                "sanitize": false,
                "shapeData": [],
                "shapeProp": "id",
                "shapeRegEx": true,
                "stringThresholds": [
                  "/.*/",
                  "/.*/"
                ],
                "textData": [
                  {
                    "hidden": false,
                    "pattern": "6opUUWU2XM1935bXFmZ7-1",
                    "textOn": "wmd",
                    "textPattern": "/  /",
                    "textReplace": "pattern"
                  }
                ],
                "textProp": "id",
                "textRegEx": true,
                "thresholds": [
                  50,
                  80
                ],
                "tooltip": false,
                "tooltipColors": false,
                "tooltipLabel": "",
                "tooltipOn": "a",
                "tpDirection": "v",
                "tpGraph": false,
                "tpGraphHigh": null,
                "tpGraphLow": null,
                "tpGraphScale": "linear",
                "tpGraphSize": "100%",
                "tpGraphType": "line",
                "type": "string",
                "unit": "short",
                "valueData": []
              }
            ]
          },
          "targets": [
            {
              "groupBy": [
                {
                  "params": [
                    "$__interval"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "null"
                  ],
                  "type": "fill"
                }
              ],
              "orderByTime": "ASC",
              "policy": "default",
              "query": "SELECT last(\"leadership\") as \"leadership\" FROM \"$db\".\"$rp\".\"FIEnvStats\" WHERE (\"domain\" =~ /^$domain$/ AND \"fi_id\" = 'B') AND $timeFilter",
              "rawQuery": true,
              "refId": "A",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "value"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "mean"
                  }
                ]
              ],
              "tags": []
            }
          ],
          "timeFrom": null,
          "timeShift": null,
          "transparent": true,
          "type": "agenty-flowcharting-panel",
          "valueName": "current",
          "version": "0.9.0"
        },
        {
          "cacheTimeout": null,
          "datasource": "$data_source",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "custom": {
                "align": "left",
                "filterable": false
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  }
                ]
              }
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "Peak TX"
                },
                "properties": [
                  {
                    "id": "unit",
                    "value": "bps"
                  },
                  {
                    "id": "decimals",
                    "value": 1
                  },
                  {
                    "id": "custom.width",
                    "value": 120
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byRegexp",
                  "options": "/PAUSE/"
                },
                "properties": [
                  {
                    "id": "unit",
                    "value": "short"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "Port"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 120
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "Speed"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 100
                  },
                  {
                    "id": "unit",
                    "value": "Gbits"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byRegexp",
                  "options": "/%/"
                },
                "properties": [
                  {
                    "id": "unit",
                    "value": "percentunit"
                  },
                  {
                    "id": "color",
                    "value": {
                      "mode": "thresholds"
                    }
                  },
                  {
                    "id": "thresholds",
                    "value": {
                      "mode": "absolute",
                      "steps": [
                        {
                          "color": "green",
                          "value": null
                        },
                        {
                          "color": "#EAB839",
                          "value": 0.55
                        },
                        {
                          "color": "red",
                          "value": 0.75
                        }
                      ]
                    }
                  },
                  {
                    "id": "custom.displayMode",
                    "value": "lcd-gauge"
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 20,
            "w": 12,
            "x": 0,
            "y": 15
          },
          "id": 249,
          "interval": "[[polling_interval]]s",
          "links": [],
          "options": {
            "showHeader": true,
            "sortBy": [
              {
                "desc": true,
                "displayName": "Peak % TX"
              }
            ]
          },
          "pluginVersion": "7.5.7",
          "repeatDirection": "h",
          "targets": [
            {
              "aggregation": "Last",
              "alias": "",
              "decimals": 2,
              "displayAliasType": "Warning / Critical",
              "displayType": "Regular",
              "displayValueWithAlias": "Never",
              "groupBy": [
                {
                  "params": [
                    "$__interval"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "null"
                  ],
                  "type": "fill"
                }
              ],
              "hide": false,
              "orderByTime": "ASC",
              "policy": "default",
              "query": "SELECT (max(\"bytes_tx_delta\") *8/ [[polling_interval]])/(max(oper_speed)*1000000000) as \"Peak % TX\", max(\"bytes_tx_delta\") *8/ [[polling_interval]] as \"Peak TX\",max(oper_speed) as \"Speed\" FROM \"$db\".\"$rp\".\"FIServerPortStats\" WHERE (\"domain\" =~ /^$domain$/ and \"channel\" != '' and fi_id='A') AND $timeFilter GROUP BY port,peer",
              "rawQuery": true,
              "refId": "A",
              "resultFormat": "table",
              "select": [
                [
                  {
                    "params": [
                      "value"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "mean"
                  }
                ]
              ],
              "tags": [],
              "units": "none",
              "valueHandler": "Number Threshold"
            },
            {
              "groupBy": [
                {
                  "params": [
                    "$__interval"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "null"
                  ],
                  "type": "fill"
                }
              ],
              "hide": false,
              "orderByTime": "ASC",
              "policy": "default",
              "query": "select sum(\"RX PAUSE\") as \"RX PAUSE\" from (SELECT non_negative_difference(max(\"pause_rx\"))/elapsed(max(\"pause_rx\"),1s) AS \"RX PAUSE\" FROM \"$db\".\"$rp\".\"FIServerPortStats\" WHERE \"domain\" =~ /^$domain$/ and fi_id='A' and \"channel\" != '' AND $timeFilter GROUP BY time($__interval),port) where $timeFilter GROUP BY port",
              "rawQuery": true,
              "refId": "B",
              "resultFormat": "table",
              "select": [
                [
                  {
                    "params": [
                      "value"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "mean"
                  }
                ]
              ],
              "tags": []
            }
          ],
          "timeFrom": null,
          "timeShift": null,
          "title": "FI-A Server Ports ",
          "transformations": [
            {
              "id": "seriesToColumns",
              "options": {
                "byField": "port"
              }
            },
            {
              "id": "filterFieldsByName",
              "options": {
                "include": {
                  "names": [
                    "port",
                    "peer",
                    "Peak % TX",
                    "Peak TX",
                    "RX PAUSE",
                    "Speed"
                  ]
                }
              }
            },
            {
              "id": "organize",
              "options": {
                "excludeByName": {},
                "indexByName": {},
                "renameByName": {
                  "peer": "Peer",
                  "port": "Port"
                }
              }
            }
          ],
          "type": "table"
        },
        {
          "cacheTimeout": null,
          "datasource": "$data_source",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "custom": {
                "align": "left",
                "filterable": false
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "light-orange",
                    "value": 50
                  },
                  {
                    "color": "semi-dark-red",
                    "value": 70
                  }
                ]
              }
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "Peak % TX"
                },
                "properties": [
                  {
                    "id": "unit",
                    "value": "percent"
                  },
                  {
                    "id": "custom.displayMode",
                    "value": "lcd-gauge"
                  },
                  {
                    "id": "decimals",
                    "value": 1
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "Peak TX"
                },
                "properties": [
                  {
                    "id": "unit",
                    "value": "bps"
                  },
                  {
                    "id": "decimals",
                    "value": 1
                  },
                  {
                    "id": "custom.width",
                    "value": 120
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byRegexp",
                  "options": "/PAUSE/"
                },
                "properties": [
                  {
                    "id": "unit",
                    "value": "short"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "Port"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 120
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "Speed"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 100
                  },
                  {
                    "id": "unit",
                    "value": "Gbits"
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 20,
            "w": 12,
            "x": 12,
            "y": 15
          },
          "id": 250,
          "interval": "[[polling_interval]]s",
          "links": [],
          "options": {
            "showHeader": true,
            "sortBy": [
              {
                "desc": true,
                "displayName": "Peak % TX"
              }
            ]
          },
          "pluginVersion": "7.5.7",
          "repeatDirection": "h",
          "targets": [
            {
              "aggregation": "Last",
              "alias": "",
              "decimals": 2,
              "displayAliasType": "Warning / Critical",
              "displayType": "Regular",
              "displayValueWithAlias": "Never",
              "groupBy": [
                {
                  "params": [
                    "$__interval"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "null"
                  ],
                  "type": "fill"
                }
              ],
              "hide": false,
              "orderByTime": "ASC",
              "policy": "default",
              "query": "SELECT (max(\"bytes_tx_delta\") *8/ [[polling_interval]])/(max(oper_speed)*1000000000)*100 as \"Peak % TX\", max(\"bytes_tx_delta\") *8/ [[polling_interval]] as \"Peak TX\",max(oper_speed) as \"Speed\" FROM \"$db\".\"$rp\".\"FIServerPortStats\" WHERE (\"domain\" =~ /^$domain$/ and \"channel\" != '' and fi_id='B') AND $timeFilter GROUP BY port,peer",
              "rawQuery": true,
              "refId": "A",
              "resultFormat": "table",
              "select": [
                [
                  {
                    "params": [
                      "value"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "mean"
                  }
                ]
              ],
              "tags": [],
              "units": "none",
              "valueHandler": "Number Threshold"
            },
            {
              "groupBy": [
                {
                  "params": [
                    "$__interval"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "null"
                  ],
                  "type": "fill"
                }
              ],
              "hide": false,
              "orderByTime": "ASC",
              "policy": "default",
              "query": "select sum(\"RX PAUSE\") as \"RX PAUSE\" from (SELECT non_negative_difference(max(\"pause_rx\"))/elapsed(max(\"pause_rx\"),1s) AS \"RX PAUSE\" FROM \"$db\".\"$rp\".\"FIServerPortStats\" WHERE \"domain\" =~ /^$domain$/ and fi_id='B' and \"channel\" != '' AND $timeFilter GROUP BY time($__interval),port) where $timeFilter GROUP BY port",
              "rawQuery": true,
              "refId": "B",
              "resultFormat": "table",
              "select": [
                [
                  {
                    "params": [
                      "value"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "mean"
                  }
                ]
              ],
              "tags": []
            }
          ],
          "timeFrom": null,
          "timeShift": null,
          "title": "FI-B Server Ports",
          "transformations": [
            {
              "id": "seriesToColumns",
              "options": {
                "byField": "port"
              }
            },
            {
              "id": "filterFieldsByName",
              "options": {
                "include": {
                  "names": [
                    "port",
                    "peer",
                    "Peak % TX",
                    "Peak TX",
                    "RX PAUSE",
                    "Speed"
                  ]
                }
              }
            },
            {
              "id": "organize",
              "options": {
                "excludeByName": {},
                "indexByName": {},
                "renameByName": {
                  "peer": "Peer",
                  "port": "Port"
                }
              }
            }
          ],
          "type": "table"
        },
        {
          "aliasColors": {
            "Backplane port 1/21 RX PAUSE": "dark-orange",
            "Backplane port 1/25 RX PAUSE": "dark-orange",
            "Backplane port 2/13 TX Util Max": "semi-dark-red",
            "Backplane port 2/25 RX PAUSE": "dark-orange",
            "Server port 1/01 RX Util Max": "semi-dark-red"
          },
          "bars": true,
          "dashLength": 10,
          "dashes": false,
          "datasource": "$data_source",
          "description": "",
          "fieldConfig": {
            "defaults": {},
            "overrides": []
          },
          "fill": 1,
          "fillGradient": 0,
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 0,
            "y": 35
          },
          "hiddenSeries": false,
          "id": 244,
          "interval": "[[polling_interval]]s",
          "legend": {
            "alignAsTable": true,
            "avg": true,
            "current": false,
            "max": true,
            "min": false,
            "rightSide": true,
            "show": true,
            "sort": "max",
            "sortDesc": true,
            "total": false,
            "values": true
          },
          "lines": false,
          "linewidth": 1,
          "links": [],
          "maxPerRow": 2,
          "nullPointMode": "connected",
          "options": {
            "alertThreshold": true
          },
          "percentage": false,
          "pluginVersion": "7.5.7",
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "repeat": "server_port",
          "repeatDirection": "v",
          "scopedVars": {
            "server_port": {
              "selected": true,
              "text": "1/05",
              "value": "1/05"
            }
          },
          "seriesOverrides": [
            {
              "alias": "/PAUSE/",
              "bars": false,
              "fill": 0,
              "lines": true,
              "points": true,
              "yaxis": 2
            },
            {
              "alias": "/Max/",
              "bars": false,
              "fill": 0,
              "lines": true
            }
          ],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "alias": "$tag_port $col from $tag_peer",
              "groupBy": [
                {
                  "params": [
                    "$__interval"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "vif_name"
                  ],
                  "type": "tag"
                },
                {
                  "params": [
                    "linear"
                  ],
                  "type": "fill"
                }
              ],
              "hide": false,
              "measurement": "VnicStats",
              "orderByTime": "ASC",
              "policy": "default",
              "query": "SELECT max(\"bytes_tx_delta\")  / [[polling_interval]]*8 AS \"TX\" FROM \"$db\".\"$rp\".\"FIServerPortStats\" WHERE (\"port\" =~ /^$server_port$/ and fi_id='A') AND $timeFilter GROUP BY time($__interval), \"port\",peer fill(linear)",
              "rawQuery": true,
              "refId": "A",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "bytes_rx_delta"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "mean"
                  },
                  {
                    "params": [
                      " / [[polling_interval]]*8"
                    ],
                    "type": "math"
                  },
                  {
                    "params": [
                      "RX"
                    ],
                    "type": "alias"
                  }
                ]
              ],
              "tags": [
                {
                  "key": "service_profile",
                  "operator": "=~",
                  "value": "/^$service_profile$/"
                },
                {
                  "condition": "AND",
                  "key": "peer_port",
                  "operator": "=~",
                  "value": "/^$bp_port$/"
                },
                {
                  "condition": "AND",
                  "key": "vif_name",
                  "operator": "=~",
                  "value": "/^$vif$/"
                }
              ]
            },
            {
              "alias": "$tag_port $col",
              "groupBy": [
                {
                  "params": [
                    "$__interval"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "bp_port"
                  ],
                  "type": "tag"
                },
                {
                  "params": [
                    "linear"
                  ],
                  "type": "fill"
                }
              ],
              "hide": false,
              "measurement": "BackplanePortStats",
              "orderByTime": "ASC",
              "policy": "default",
              "query": "SELECT last(\"oper_speed\")  *1000000000 AS \"TX Util Max\" FROM \"$db\".\"$rp\".\"FIServerPortStats\" WHERE (\"port\" =~ /^$server_port$/ and fi_id='A') AND $timeFilter GROUP BY time($__interval), \"port\" fill(linear)",
              "rawQuery": true,
              "refId": "C",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "speed"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "mean"
                  },
                  {
                    "params": [
                      " *1000000000"
                    ],
                    "type": "math"
                  },
                  {
                    "params": [
                      "TX Util Max"
                    ],
                    "type": "alias"
                  }
                ]
              ],
              "tags": [
                {
                  "key": "peer_service_profile",
                  "operator": "=~",
                  "value": "/^$service_profile$/"
                },
                {
                  "condition": "AND",
                  "key": "bp_port",
                  "operator": "=~",
                  "value": "/^$bp_port$/"
                }
              ]
            },
            {
              "alias": "$tag_port $col",
              "groupBy": [
                {
                  "params": [
                    "$__interval"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "bp_port"
                  ],
                  "type": "tag"
                },
                {
                  "params": [
                    "linear"
                  ],
                  "type": "fill"
                }
              ],
              "hide": false,
              "measurement": "BackplanePortStats",
              "orderByTime": "ASC",
              "policy": "default",
              "query": "SELECT non_negative_difference(max(\"pause_rx\"))/elapsed(max(\"pause_rx\"),1s) AS \"RX PAUSE\" FROM \"$db\".\"$rp\".\"FIServerPortStats\" WHERE \"domain\" =~ /^$domain$/ and \"port\" =~ /^$server_port$/ and fi_id='A' AND $timeFilter GROUP BY time($__interval),domain,fi_id,port fill(linear)",
              "rawQuery": true,
              "refId": "F",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "pause_rx"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "mean"
                  },
                  {
                    "params": [],
                    "type": "difference"
                  },
                  {
                    "params": [
                      " / [[polling_interval]]"
                    ],
                    "type": "math"
                  },
                  {
                    "params": [
                      "RX PAUSE"
                    ],
                    "type": "alias"
                  }
                ]
              ],
              "tags": [
                {
                  "key": "peer_service_profile",
                  "operator": "=~",
                  "value": "/^$service_profile$/"
                },
                {
                  "condition": "AND",
                  "key": "bp_port",
                  "operator": "=~",
                  "value": "/^$bp_port$/"
                }
              ]
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "FI-A Server Port - TX Traffic vs RX PAUSE - $server_port ",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "format": "bps",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": "0",
              "show": true
            },
            {
              "format": "short",
              "label": "No. of PAUSE frames",
              "logBase": 1,
              "max": null,
              "min": "0",
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {
            "Backplane port 1/21 RX PAUSE": "dark-orange",
            "Backplane port 1/25 RX PAUSE": "dark-orange",
            "Backplane port 2/13 TX Util Max": "semi-dark-red",
            "Backplane port 2/25 RX PAUSE": "dark-orange",
            "Server port 1/01 RX Util Max": "semi-dark-red"
          },
          "bars": true,
          "dashLength": 10,
          "dashes": false,
          "datasource": "$data_source",
          "description": "",
          "fieldConfig": {
            "defaults": {},
            "overrides": []
          },
          "fill": 1,
          "fillGradient": 0,
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 12,
            "y": 35
          },
          "hiddenSeries": false,
          "id": 245,
          "interval": "[[polling_interval]]s",
          "legend": {
            "alignAsTable": true,
            "avg": true,
            "current": false,
            "max": true,
            "min": false,
            "rightSide": true,
            "show": true,
            "sort": "max",
            "sortDesc": true,
            "total": false,
            "values": true
          },
          "lines": false,
          "linewidth": 1,
          "links": [],
          "maxPerRow": 2,
          "nullPointMode": "connected",
          "options": {
            "alertThreshold": true
          },
          "percentage": false,
          "pluginVersion": "7.5.7",
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "repeat": "server_port",
          "repeatDirection": "v",
          "scopedVars": {
            "server_port": {
              "selected": true,
              "text": "1/05",
              "value": "1/05"
            }
          },
          "seriesOverrides": [
            {
              "alias": "/PAUSE/",
              "bars": false,
              "fill": 0,
              "lines": true,
              "points": true,
              "yaxis": 2
            },
            {
              "alias": "/Max/",
              "bars": false,
              "fill": 0,
              "lines": true
            }
          ],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "alias": "$tag_port $col from $tag_peer",
              "groupBy": [
                {
                  "params": [
                    "$__interval"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "vif_name"
                  ],
                  "type": "tag"
                },
                {
                  "params": [
                    "linear"
                  ],
                  "type": "fill"
                }
              ],
              "hide": false,
              "measurement": "VnicStats",
              "orderByTime": "ASC",
              "policy": "default",
              "query": "SELECT max(\"bytes_tx_delta\")  / [[polling_interval]]*8 AS \"TX\" FROM \"$db\".\"$rp\".\"FIServerPortStats\" WHERE (\"port\" =~ /^$server_port$/ and fi_id='B') AND $timeFilter GROUP BY time($__interval), \"port\",peer fill(linear)",
              "rawQuery": true,
              "refId": "A",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "bytes_rx_delta"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "mean"
                  },
                  {
                    "params": [
                      " / [[polling_interval]]*8"
                    ],
                    "type": "math"
                  },
                  {
                    "params": [
                      "RX"
                    ],
                    "type": "alias"
                  }
                ]
              ],
              "tags": [
                {
                  "key": "service_profile",
                  "operator": "=~",
                  "value": "/^$service_profile$/"
                },
                {
                  "condition": "AND",
                  "key": "peer_port",
                  "operator": "=~",
                  "value": "/^$bp_port$/"
                },
                {
                  "condition": "AND",
                  "key": "vif_name",
                  "operator": "=~",
                  "value": "/^$vif$/"
                }
              ]
            },
            {
              "alias": "$tag_port $col",
              "groupBy": [
                {
                  "params": [
                    "$__interval"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "bp_port"
                  ],
                  "type": "tag"
                },
                {
                  "params": [
                    "linear"
                  ],
                  "type": "fill"
                }
              ],
              "hide": false,
              "measurement": "BackplanePortStats",
              "orderByTime": "ASC",
              "policy": "default",
              "query": "SELECT last(\"oper_speed\")  *1000000000 AS \"TX Util Max\" FROM \"$db\".\"$rp\".\"FIServerPortStats\" WHERE (\"port\" =~ /^$server_port$/ and fi_id='B') AND $timeFilter GROUP BY time($__interval), \"port\" fill(linear)",
              "rawQuery": true,
              "refId": "C",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "speed"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "mean"
                  },
                  {
                    "params": [
                      " *1000000000"
                    ],
                    "type": "math"
                  },
                  {
                    "params": [
                      "TX Util Max"
                    ],
                    "type": "alias"
                  }
                ]
              ],
              "tags": [
                {
                  "key": "peer_service_profile",
                  "operator": "=~",
                  "value": "/^$service_profile$/"
                },
                {
                  "condition": "AND",
                  "key": "bp_port",
                  "operator": "=~",
                  "value": "/^$bp_port$/"
                }
              ]
            },
            {
              "alias": "$tag_port $col",
              "groupBy": [
                {
                  "params": [
                    "$__interval"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "bp_port"
                  ],
                  "type": "tag"
                },
                {
                  "params": [
                    "linear"
                  ],
                  "type": "fill"
                }
              ],
              "hide": false,
              "measurement": "BackplanePortStats",
              "orderByTime": "ASC",
              "policy": "default",
              "query": "SELECT non_negative_difference(max(\"pause_rx\"))/elapsed(max(\"pause_rx\"),1s) AS \"RX PAUSE\" FROM \"$db\".\"$rp\".\"FIServerPortStats\" WHERE \"domain\" =~ /^$domain$/ and \"port\" =~ /^$server_port$/ and fi_id='B' AND $timeFilter GROUP BY time($__interval),domain,fi_id,port fill(linear)",
              "rawQuery": true,
              "refId": "F",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "pause_rx"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "mean"
                  },
                  {
                    "params": [],
                    "type": "difference"
                  },
                  {
                    "params": [
                      " / [[polling_interval]]"
                    ],
                    "type": "math"
                  },
                  {
                    "params": [
                      "RX PAUSE"
                    ],
                    "type": "alias"
                  }
                ]
              ],
              "tags": [
                {
                  "key": "peer_service_profile",
                  "operator": "=~",
                  "value": "/^$service_profile$/"
                },
                {
                  "condition": "AND",
                  "key": "bp_port",
                  "operator": "=~",
                  "value": "/^$bp_port$/"
                }
              ]
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "FI-B Server Port - TX Traffic vs RX PAUSE - $server_port ",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "format": "bps",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": "0",
              "show": true
            },
            {
              "format": "short",
              "label": "No. of PAUSE frames",
              "logBase": 1,
              "max": null,
              "min": "0",
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        }
      ],
      "title": "FI Server Port - Ingress Traffic Congestion and Utilization",
      "type": "row"
    },
    {
      "collapsed": true,
      "datasource": null,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 39
      },
      "id": 240,
      "panels": [
        {
          "datasource": "$data_source",
          "description": "",
          "fieldConfig": {
            "defaults": {},
            "overrides": []
          },
          "flowchartsData": {
            "flowcharts": [
              {
                "allowDrawio": false,
                "bgColor": null,
                "center": true,
                "csv": "## See more information for the syntax at https://drawio-app.com/import-from-csv-to-drawio/\n##\n## Example CSV. Use ## for comments and # for configuration.\n## The following names are reserved and should not be used (or ignored):\n## id, tooltip, placeholder(s), link and label (see below)\n##\n#\n## Node label with placeholders and HTML.\n## Default is '%name_of_first_column%'.\n#\n# label: %name%<br><i style=\"color:gray;\">%position%</i><br><a href=\"mailto:%email%\">Email</a>\n#\n## Node style (placeholders are replaced once).\n## Default is the current style for nodes.\n#\n# style: label;image=%image%;whiteSpace=wrap;html=1;rounded=1;fillColor=%fill%;strokeColor=%stroke%;\n#\n## Parent style for nodes with child nodes (placeholders are replaced once).\n#\n# parentstyle: swimlane;whiteSpace=wrap;html=1;childLayout=stackLayout;horizontal=1;horizontalStack=0;resizeParent=1;resizeLast=0;collapsible=1;\n#\n## Optional column name that contains a reference to a named style in styles.\n## Default is the current style for nodes.\n#\n# stylename: -\n#\n## JSON for named styles of the form {\"name\": \"style\", \"name\": \"style\"} where style is a cell style with\n## placeholders that are replaced once.\n#\n# styles: -\n#\n## Optional column name that contains a reference to a named label in labels.\n## Default is the current label.\n#\n# labelname: -\n#\n## JSON for named labels of the form {\"name\": \"label\", \"name\": \"label\"} where label is a cell label with\n## placeholders.\n#\n# labels: -\n#\n## Uses the given column name as the identity for cells (updates existing cells).\n## Default is no identity (empty value or -).\n#\n# identity: -\n#\n## Uses the given column name as the parent reference for cells. Default is no parent (empty or -).\n## The identity above is used for resolving the reference so it must be specified.\n#\n# parent: -\n#\n## Adds a prefix to the identity of cells to make sure they do not collide with existing cells (whose\n## IDs are numbers from 0..n, sometimes with a GUID prefix in the context of realtime collaboration).\n## Default is csvimport-.\n#\n# namespace: csvimport-\n#\n## Connections between rows (\"from\": source colum, \"to\": target column).\n## Label, style and invert are optional. Defaults are '', current style and false.\n## If placeholders are used in the style, they are replaced with data from the source.\n## An optional placeholders can be set to target to use data from the target instead.\n## In addition to label, an optional fromlabel and tolabel can be used to name the column\n## that contains the text for the label in the edges source or target (invert ignored).\n## The label is concatenated in the form fromlabel + label + tolabel if all are defined.\n## The target column may contain a comma-separated list of values.\n## Multiple connect entries are allowed.\n#\n# connect: {\"from\": \"manager\", \"to\": \"name\", \"invert\": true, \"label\": \"manages\", \\\n#          \"style\": \"curved=1;endArrow=blockThin;endFill=1;fontSize=11;\"}\n# connect: {\"from\": \"refs\", \"to\": \"id\", \"style\": \"curved=1;fontSize=11;\"}\n#\n## Node x-coordinate. Possible value is a column name. Default is empty. Layouts will\n## override this value.\n#\n# left: \n#\n## Node y-coordinate. Possible value is a column name. Default is empty. Layouts will\n## override this value.\n#\n# top: \n#\n## Node width. Possible value is a number (in px), auto or an @ sign followed by a column\n## name that contains the value for the width. Default is auto.\n#\n# width: auto\n#\n## Node height. Possible value is a number (in px), auto or an @ sign followed by a column\n## name that contains the value for the height. Default is auto.\n#\n# height: auto\n#\n## Padding for autosize. Default is 0.\n#\n# padding: -12\n#\n## Comma-separated list of ignored columns for metadata. (These can be\n## used for connections and styles but will not be added as metadata.)\n#\n# ignore: id,image,fill,stroke,refs,manager\n#\n## Column to be renamed to link attribute (used as link).\n#\n# link: url\n#\n## Spacing between nodes. Default is 40.\n#\n# nodespacing: 40\n#\n## Spacing between levels of hierarchical layouts. Default is 100.\n#\n# levelspacing: 100\n#\n## Spacing between parallel edges. Default is 40. Use 0 to disable.\n#\n# edgespacing: 40\n#\n## Name or JSON of layout. Possible values are auto, none, verticaltree, horizontaltree,\n## verticalflow, horizontalflow, organic, circle or a JSON string as used in Layout, Apply.\n## Default is auto.\n#\n# layout: auto\n#\n## ---- CSV below this line. First line are column names. ----\nname,position,id,location,manager,email,fill,stroke,refs,url,image\nEvan Miller,CFO,emi,Office 1,,me@example.com,#dae8fc,#6c8ebf,,https://www.draw.io,https://cdn3.iconfinder.com/data/icons/user-avatars-1/512/users-9-2-128.png\nEdward Morrison,Brand Manager,emo,Office 2,Evan Miller,me@example.com,#d5e8d4,#82b366,,https://www.draw.io,https://cdn3.iconfinder.com/data/icons/user-avatars-1/512/users-10-3-128.png\nRon Donovan,System Admin,rdo,Office 3,Evan Miller,me@example.com,#d5e8d4,#82b366,\"emo,tva\",https://www.draw.io,https://cdn3.iconfinder.com/data/icons/user-avatars-1/512/users-2-128.png\nTessa Valet,HR Director,tva,Office 4,Evan Miller,me@example.com,#d5e8d4,#82b366,,https://www.draw.io,https://cdn3.iconfinder.com/data/icons/user-avatars-1/512/users-3-128.png\n",
                "download": false,
                "editorTheme": "dark",
                "editorUrl": "https://www.draw.io",
                "enableAnim": true,
                "grid": false,
                "lock": true,
                "name": "Main",
                "scale": true,
                "tooltip": true,
                "type": "xml",
                "url": "http://<YourUrl>/<Your XML/drawio file/api>",
                "xml": "<mxGraphModel dx=\"1635\" dy=\"902\" grid=\"1\" gridSize=\"10\" guides=\"1\" tooltips=\"1\" connect=\"1\" arrows=\"1\" fold=\"1\" page=\"1\" pageScale=\"1\" pageWidth=\"850\" pageHeight=\"1100\" math=\"0\" shadow=\"0\">\n    <root>\n        <mxCell id=\"0\" />\n        <mxCell id=\"1\" parent=\"0\" />\n        <mxCell id=\"6opUUWU2XM1935bXFmZ7-1\" value=\"&lt;font face=&quot;Times New Roman&quot;&gt;FI-A ( \n)&lt;/font&gt;\" style=\"rounded=1;whiteSpace=wrap;html=1;fillColor=#6666FF;strokeColor=none;arcSize=50;fontColor=#FFFFFF;fontStyle=1\" parent=\"1\" vertex=\"1\">\n            <mxGeometry x=\"160\" y=\"390\" width=\"520\" height=\"18\" as=\"geometry\" />\n        </mxCell>\n    </root>\n</mxGraphModel>\n",
                "zoom": "100%"
              }
            ]
          },
          "format": "short",
          "graphId": "flowchart_236",
          "gridPos": {
            "h": 2,
            "w": 12,
            "x": 0,
            "y": 14
          },
          "id": 236,
          "links": [],
          "newFlag": false,
          "pluginVersion": "7.1.1",
          "rulesData": {
            "rulesData": [
              {
                "aggregation": "current",
                "alias": "leadership",
                "colors": [
                  "rgba(245, 54, 54, 0.9)",
                  "rgba(237, 129, 40, 0.89)",
                  "rgba(50, 172, 45, 0.97)"
                ],
                "column": "Time",
                "dateFormat": "YYYY-MM-DD HH:mm:ss",
                "decimals": 2,
                "eventData": [],
                "eventProp": "id",
                "eventRegEx": false,
                "gradient": false,
                "hidden": false,
                "invert": false,
                "linkData": [],
                "linkProp": "id",
                "linkRegEx": true,
                "mappingType": 1,
                "metricType": "serie",
                "order": 1,
                "overlayIcon": false,
                "pattern": "FIEnvStats.leadership",
                "rangeData": [],
                "reduce": true,
                "refId": "A",
                "sanitize": false,
                "shapeData": [],
                "shapeProp": "id",
                "shapeRegEx": true,
                "stringThresholds": [
                  "/.*/",
                  "/.*/"
                ],
                "textData": [
                  {
                    "hidden": false,
                    "pattern": "6opUUWU2XM1935bXFmZ7-1",
                    "textOn": "wmd",
                    "textPattern": "/  /",
                    "textReplace": "pattern"
                  }
                ],
                "textProp": "id",
                "textRegEx": true,
                "thresholds": [
                  50,
                  80
                ],
                "tooltip": false,
                "tooltipColors": false,
                "tooltipLabel": "",
                "tooltipOn": "a",
                "tpDirection": "v",
                "tpGraph": false,
                "tpGraphHigh": null,
                "tpGraphLow": null,
                "tpGraphScale": "linear",
                "tpGraphSize": "100%",
                "tpGraphType": "line",
                "type": "string",
                "unit": "short",
                "valueData": []
              }
            ]
          },
          "targets": [
            {
              "groupBy": [
                {
                  "params": [
                    "$__interval"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "null"
                  ],
                  "type": "fill"
                }
              ],
              "orderByTime": "ASC",
              "policy": "default",
              "query": "SELECT last(\"leadership\") as \"leadership\" FROM \"$db\".\"$rp\".\"FIEnvStats\" WHERE (\"domain\" =~ /^$domain$/ AND \"fi_id\" = 'A') AND $timeFilter",
              "rawQuery": true,
              "refId": "A",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "value"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "mean"
                  }
                ]
              ],
              "tags": []
            }
          ],
          "timeFrom": null,
          "timeShift": null,
          "transparent": true,
          "type": "agenty-flowcharting-panel",
          "valueName": "current",
          "version": "0.9.0"
        },
        {
          "datasource": "$data_source",
          "description": "",
          "fieldConfig": {
            "defaults": {},
            "overrides": []
          },
          "flowchartsData": {
            "flowcharts": [
              {
                "allowDrawio": false,
                "bgColor": null,
                "center": true,
                "csv": "## See more information for the syntax at https://drawio-app.com/import-from-csv-to-drawio/\n##\n## Example CSV. Use ## for comments and # for configuration.\n## The following names are reserved and should not be used (or ignored):\n## id, tooltip, placeholder(s), link and label (see below)\n##\n#\n## Node label with placeholders and HTML.\n## Default is '%name_of_first_column%'.\n#\n# label: %name%<br><i style=\"color:gray;\">%position%</i><br><a href=\"mailto:%email%\">Email</a>\n#\n## Node style (placeholders are replaced once).\n## Default is the current style for nodes.\n#\n# style: label;image=%image%;whiteSpace=wrap;html=1;rounded=1;fillColor=%fill%;strokeColor=%stroke%;\n#\n## Parent style for nodes with child nodes (placeholders are replaced once).\n#\n# parentstyle: swimlane;whiteSpace=wrap;html=1;childLayout=stackLayout;horizontal=1;horizontalStack=0;resizeParent=1;resizeLast=0;collapsible=1;\n#\n## Optional column name that contains a reference to a named style in styles.\n## Default is the current style for nodes.\n#\n# stylename: -\n#\n## JSON for named styles of the form {\"name\": \"style\", \"name\": \"style\"} where style is a cell style with\n## placeholders that are replaced once.\n#\n# styles: -\n#\n## Optional column name that contains a reference to a named label in labels.\n## Default is the current label.\n#\n# labelname: -\n#\n## JSON for named labels of the form {\"name\": \"label\", \"name\": \"label\"} where label is a cell label with\n## placeholders.\n#\n# labels: -\n#\n## Uses the given column name as the identity for cells (updates existing cells).\n## Default is no identity (empty value or -).\n#\n# identity: -\n#\n## Uses the given column name as the parent reference for cells. Default is no parent (empty or -).\n## The identity above is used for resolving the reference so it must be specified.\n#\n# parent: -\n#\n## Adds a prefix to the identity of cells to make sure they do not collide with existing cells (whose\n## IDs are numbers from 0..n, sometimes with a GUID prefix in the context of realtime collaboration).\n## Default is csvimport-.\n#\n# namespace: csvimport-\n#\n## Connections between rows (\"from\": source colum, \"to\": target column).\n## Label, style and invert are optional. Defaults are '', current style and false.\n## If placeholders are used in the style, they are replaced with data from the source.\n## An optional placeholders can be set to target to use data from the target instead.\n## In addition to label, an optional fromlabel and tolabel can be used to name the column\n## that contains the text for the label in the edges source or target (invert ignored).\n## The label is concatenated in the form fromlabel + label + tolabel if all are defined.\n## The target column may contain a comma-separated list of values.\n## Multiple connect entries are allowed.\n#\n# connect: {\"from\": \"manager\", \"to\": \"name\", \"invert\": true, \"label\": \"manages\", \\\n#          \"style\": \"curved=1;endArrow=blockThin;endFill=1;fontSize=11;\"}\n# connect: {\"from\": \"refs\", \"to\": \"id\", \"style\": \"curved=1;fontSize=11;\"}\n#\n## Node x-coordinate. Possible value is a column name. Default is empty. Layouts will\n## override this value.\n#\n# left: \n#\n## Node y-coordinate. Possible value is a column name. Default is empty. Layouts will\n## override this value.\n#\n# top: \n#\n## Node width. Possible value is a number (in px), auto or an @ sign followed by a column\n## name that contains the value for the width. Default is auto.\n#\n# width: auto\n#\n## Node height. Possible value is a number (in px), auto or an @ sign followed by a column\n## name that contains the value for the height. Default is auto.\n#\n# height: auto\n#\n## Padding for autosize. Default is 0.\n#\n# padding: -12\n#\n## Comma-separated list of ignored columns for metadata. (These can be\n## used for connections and styles but will not be added as metadata.)\n#\n# ignore: id,image,fill,stroke,refs,manager\n#\n## Column to be renamed to link attribute (used as link).\n#\n# link: url\n#\n## Spacing between nodes. Default is 40.\n#\n# nodespacing: 40\n#\n## Spacing between levels of hierarchical layouts. Default is 100.\n#\n# levelspacing: 100\n#\n## Spacing between parallel edges. Default is 40. Use 0 to disable.\n#\n# edgespacing: 40\n#\n## Name or JSON of layout. Possible values are auto, none, verticaltree, horizontaltree,\n## verticalflow, horizontalflow, organic, circle or a JSON string as used in Layout, Apply.\n## Default is auto.\n#\n# layout: auto\n#\n## ---- CSV below this line. First line are column names. ----\nname,position,id,location,manager,email,fill,stroke,refs,url,image\nEvan Miller,CFO,emi,Office 1,,me@example.com,#dae8fc,#6c8ebf,,https://www.draw.io,https://cdn3.iconfinder.com/data/icons/user-avatars-1/512/users-9-2-128.png\nEdward Morrison,Brand Manager,emo,Office 2,Evan Miller,me@example.com,#d5e8d4,#82b366,,https://www.draw.io,https://cdn3.iconfinder.com/data/icons/user-avatars-1/512/users-10-3-128.png\nRon Donovan,System Admin,rdo,Office 3,Evan Miller,me@example.com,#d5e8d4,#82b366,\"emo,tva\",https://www.draw.io,https://cdn3.iconfinder.com/data/icons/user-avatars-1/512/users-2-128.png\nTessa Valet,HR Director,tva,Office 4,Evan Miller,me@example.com,#d5e8d4,#82b366,,https://www.draw.io,https://cdn3.iconfinder.com/data/icons/user-avatars-1/512/users-3-128.png\n",
                "download": false,
                "editorTheme": "dark",
                "editorUrl": "https://www.draw.io",
                "enableAnim": true,
                "grid": false,
                "lock": true,
                "name": "Main",
                "scale": true,
                "tooltip": true,
                "type": "xml",
                "url": "http://<YourUrl>/<Your XML/drawio file/api>",
                "xml": "<mxGraphModel dx=\"1635\" dy=\"902\" grid=\"1\" gridSize=\"10\" guides=\"1\" tooltips=\"1\" connect=\"1\" arrows=\"1\" fold=\"1\" page=\"1\" pageScale=\"1\" pageWidth=\"850\" pageHeight=\"1100\" math=\"0\" shadow=\"0\">\n    <root>\n        <mxCell id=\"0\" />\n        <mxCell id=\"1\" parent=\"0\" />\n        <mxCell id=\"6opUUWU2XM1935bXFmZ7-1\" value=\"&lt;font face=&quot;Times New Roman&quot;&gt;FI-B ( \n)&lt;/font&gt;\" style=\"rounded=1;whiteSpace=wrap;html=1;fillColor=#B266FF;strokeColor=none;arcSize=50;fontColor=#FFFFFF;fontStyle=1\" parent=\"1\" vertex=\"1\">\n            <mxGeometry x=\"160\" y=\"390\" width=\"520\" height=\"18\" as=\"geometry\" />\n        </mxCell>\n    </root>\n</mxGraphModel>\n",
                "zoom": "100%"
              }
            ]
          },
          "format": "short",
          "graphId": "flowchart_238",
          "gridPos": {
            "h": 2,
            "w": 12,
            "x": 12,
            "y": 14
          },
          "id": 238,
          "links": [],
          "newFlag": false,
          "pluginVersion": "7.1.1",
          "rulesData": {
            "rulesData": [
              {
                "aggregation": "current",
                "alias": "leadership",
                "colors": [
                  "rgba(245, 54, 54, 0.9)",
                  "rgba(237, 129, 40, 0.89)",
                  "rgba(50, 172, 45, 0.97)"
                ],
                "column": "Time",
                "dateFormat": "YYYY-MM-DD HH:mm:ss",
                "decimals": 2,
                "eventData": [],
                "eventProp": "id",
                "eventRegEx": false,
                "gradient": false,
                "hidden": false,
                "invert": false,
                "linkData": [],
                "linkProp": "id",
                "linkRegEx": true,
                "mappingType": 1,
                "metricType": "serie",
                "order": 1,
                "overlayIcon": false,
                "pattern": "FIEnvStats.leadership",
                "rangeData": [],
                "reduce": true,
                "refId": "A",
                "sanitize": false,
                "shapeData": [],
                "shapeProp": "id",
                "shapeRegEx": true,
                "stringThresholds": [
                  "/.*/",
                  "/.*/"
                ],
                "textData": [
                  {
                    "hidden": false,
                    "pattern": "6opUUWU2XM1935bXFmZ7-1",
                    "textOn": "wmd",
                    "textPattern": "/  /",
                    "textReplace": "pattern"
                  }
                ],
                "textProp": "id",
                "textRegEx": true,
                "thresholds": [
                  50,
                  80
                ],
                "tooltip": false,
                "tooltipColors": false,
                "tooltipLabel": "",
                "tooltipOn": "a",
                "tpDirection": "v",
                "tpGraph": false,
                "tpGraphHigh": null,
                "tpGraphLow": null,
                "tpGraphScale": "linear",
                "tpGraphSize": "100%",
                "tpGraphType": "line",
                "type": "string",
                "unit": "short",
                "valueData": []
              }
            ]
          },
          "targets": [
            {
              "groupBy": [
                {
                  "params": [
                    "$__interval"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "null"
                  ],
                  "type": "fill"
                }
              ],
              "orderByTime": "ASC",
              "policy": "default",
              "query": "SELECT last(\"leadership\") as \"leadership\" FROM \"$db\".\"$rp\".\"FIEnvStats\" WHERE (\"domain\" =~ /^$domain$/ AND \"fi_id\" = 'B') AND $timeFilter",
              "rawQuery": true,
              "refId": "A",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "value"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "mean"
                  }
                ]
              ],
              "tags": []
            }
          ],
          "timeFrom": null,
          "timeShift": null,
          "transparent": true,
          "type": "agenty-flowcharting-panel",
          "valueName": "current",
          "version": "0.9.0"
        },
        {
          "cacheTimeout": null,
          "datasource": "$data_source",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "custom": {
                "align": "left",
                "filterable": false
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "light-orange",
                    "value": 50
                  },
                  {
                    "color": "semi-dark-red",
                    "value": 70
                  }
                ]
              }
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "Peak % RX"
                },
                "properties": [
                  {
                    "id": "unit",
                    "value": "percent"
                  },
                  {
                    "id": "custom.displayMode",
                    "value": "lcd-gauge"
                  },
                  {
                    "id": "decimals",
                    "value": 1
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "Peak RX"
                },
                "properties": [
                  {
                    "id": "unit",
                    "value": "bps"
                  },
                  {
                    "id": "decimals",
                    "value": 1
                  },
                  {
                    "id": "custom.width",
                    "value": 120
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byRegexp",
                  "options": "/PAUSE/"
                },
                "properties": [
                  {
                    "id": "unit",
                    "value": "short"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "Port"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 120
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "Speed"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 100
                  },
                  {
                    "id": "unit",
                    "value": "Gbits"
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 20,
            "w": 12,
            "x": 0,
            "y": 16
          },
          "id": 251,
          "interval": "[[polling_interval]]s",
          "links": [],
          "options": {
            "showHeader": true,
            "sortBy": [
              {
                "desc": true,
                "displayName": "Peak % RX"
              }
            ]
          },
          "pluginVersion": "7.5.7",
          "repeatDirection": "h",
          "targets": [
            {
              "aggregation": "Last",
              "alias": "",
              "decimals": 2,
              "displayAliasType": "Warning / Critical",
              "displayType": "Regular",
              "displayValueWithAlias": "Never",
              "groupBy": [
                {
                  "params": [
                    "$__interval"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "null"
                  ],
                  "type": "fill"
                }
              ],
              "hide": false,
              "orderByTime": "ASC",
              "policy": "default",
              "query": "SELECT (max(\"bytes_rx_delta\") *8/ [[polling_interval]])/(max(oper_speed)*1000000000)*100 as \"Peak % RX\", max(\"bytes_rx_delta\") *8/ [[polling_interval]] as \"Peak RX\", max(oper_speed) as \"Speed\" FROM \"$db\".\"$rp\".\"FIServerPortStats\" WHERE (\"domain\" =~ /^$domain$/ and \"channel\" != '' and fi_id='A') AND $timeFilter GROUP BY port,peer",
              "rawQuery": true,
              "refId": "A",
              "resultFormat": "table",
              "select": [
                [
                  {
                    "params": [
                      "value"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "mean"
                  }
                ]
              ],
              "tags": [],
              "units": "none",
              "valueHandler": "Number Threshold"
            },
            {
              "groupBy": [
                {
                  "params": [
                    "$__interval"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "null"
                  ],
                  "type": "fill"
                }
              ],
              "hide": false,
              "orderByTime": "ASC",
              "policy": "default",
              "query": "select sum(\"TX PAUSE\") as \"TX PAUSE\" from (SELECT non_negative_difference(max(\"pause_tx\"))/elapsed(max(\"pause_tx\"),1s) AS \"TX PAUSE\" FROM \"$db\".\"$rp\".\"FIServerPortStats\" WHERE \"domain\" =~ /^$domain$/ and fi_id='A' and \"channel\" != '' AND $timeFilter GROUP BY time($__interval),port) where $timeFilter GROUP BY port",
              "rawQuery": true,
              "refId": "B",
              "resultFormat": "table",
              "select": [
                [
                  {
                    "params": [
                      "value"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "mean"
                  }
                ]
              ],
              "tags": []
            }
          ],
          "timeFrom": null,
          "timeShift": null,
          "title": "Server ports FI-A",
          "transformations": [
            {
              "id": "seriesToColumns",
              "options": {
                "byField": "port"
              }
            },
            {
              "id": "filterFieldsByName",
              "options": {
                "include": {
                  "names": [
                    "port",
                    "peer",
                    "Peak RX",
                    "Speed",
                    "TX PAUSE",
                    "Peak % RX"
                  ]
                }
              }
            },
            {
              "id": "organize",
              "options": {
                "excludeByName": {},
                "indexByName": {
                  "% RX": 2,
                  "RX": 3,
                  "peer": 1,
                  "port": 0
                },
                "renameByName": {
                  "peer": "Peer",
                  "port": "Port"
                }
              }
            }
          ],
          "type": "table"
        },
        {
          "cacheTimeout": null,
          "datasource": "$data_source",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "custom": {
                "align": "left",
                "filterable": false
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "light-orange",
                    "value": 50
                  },
                  {
                    "color": "semi-dark-red",
                    "value": 70
                  }
                ]
              }
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "Peak % RX"
                },
                "properties": [
                  {
                    "id": "unit",
                    "value": "percent"
                  },
                  {
                    "id": "custom.displayMode",
                    "value": "lcd-gauge"
                  },
                  {
                    "id": "decimals",
                    "value": 1
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "Peak RX"
                },
                "properties": [
                  {
                    "id": "unit",
                    "value": "bps"
                  },
                  {
                    "id": "decimals",
                    "value": 1
                  },
                  {
                    "id": "custom.width",
                    "value": 120
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byRegexp",
                  "options": "/PAUSE/"
                },
                "properties": [
                  {
                    "id": "unit",
                    "value": "short"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "Port"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 120
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "Speed"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 100
                  },
                  {
                    "id": "unit",
                    "value": "Gbits"
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 20,
            "w": 12,
            "x": 12,
            "y": 16
          },
          "id": 252,
          "interval": "[[polling_interval]]s",
          "links": [],
          "options": {
            "showHeader": true,
            "sortBy": [
              {
                "desc": true,
                "displayName": "Peak % RX"
              }
            ]
          },
          "pluginVersion": "7.5.7",
          "repeatDirection": "h",
          "targets": [
            {
              "aggregation": "Last",
              "alias": "",
              "decimals": 2,
              "displayAliasType": "Warning / Critical",
              "displayType": "Regular",
              "displayValueWithAlias": "Never",
              "groupBy": [
                {
                  "params": [
                    "$__interval"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "null"
                  ],
                  "type": "fill"
                }
              ],
              "hide": false,
              "orderByTime": "ASC",
              "policy": "default",
              "query": "SELECT (max(\"bytes_rx_delta\") *8/ [[polling_interval]])/(max(oper_speed)*1000000000)*100 as \"Peak % RX\", max(\"bytes_rx_delta\") *8/ [[polling_interval]] as \"Peak RX\", max(oper_speed) as \"Speed\" FROM \"$db\".\"$rp\".\"FIServerPortStats\" WHERE (\"domain\" =~ /^$domain$/ and \"channel\" != '' and fi_id='B') AND $timeFilter GROUP BY port,peer",
              "rawQuery": true,
              "refId": "A",
              "resultFormat": "table",
              "select": [
                [
                  {
                    "params": [
                      "value"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "mean"
                  }
                ]
              ],
              "tags": [],
              "units": "none",
              "valueHandler": "Number Threshold"
            },
            {
              "groupBy": [
                {
                  "params": [
                    "$__interval"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "null"
                  ],
                  "type": "fill"
                }
              ],
              "hide": false,
              "orderByTime": "ASC",
              "policy": "default",
              "query": "select sum(\"TX PAUSE\") as \"TX PAUSE\" from (SELECT non_negative_difference(max(\"pause_tx\"))/elapsed(max(\"pause_tx\"),1s) AS \"TX PAUSE\" FROM \"$db\".\"$rp\".\"FIServerPortStats\" WHERE \"domain\" =~ /^$domain$/ and fi_id='B' and \"channel\" != '' AND $timeFilter GROUP BY time($__interval),port) where $timeFilter GROUP BY port",
              "rawQuery": true,
              "refId": "B",
              "resultFormat": "table",
              "select": [
                [
                  {
                    "params": [
                      "value"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "mean"
                  }
                ]
              ],
              "tags": []
            }
          ],
          "timeFrom": null,
          "timeShift": null,
          "title": "Server ports FI-B",
          "transformations": [
            {
              "id": "seriesToColumns",
              "options": {
                "byField": "port"
              }
            },
            {
              "id": "filterFieldsByName",
              "options": {
                "include": {
                  "names": [
                    "port",
                    "peer",
                    "Peak % RX",
                    "Peak RX",
                    "TX PAUSE",
                    "Speed"
                  ]
                }
              }
            },
            {
              "id": "organize",
              "options": {
                "excludeByName": {},
                "indexByName": {
                  "% RX": 2,
                  "RX": 3,
                  "peer": 1,
                  "port": 0
                },
                "renameByName": {
                  "peer": "Peer",
                  "port": "Port"
                }
              }
            }
          ],
          "type": "table"
        },
        {
          "aliasColors": {
            "Backplane port 1/21 RX PAUSE": "dark-orange",
            "Backplane port 1/25 RX PAUSE": "dark-orange",
            "Backplane port 2/13 TX Util Max": "semi-dark-red",
            "Backplane port 2/25 RX PAUSE": "dark-orange",
            "Server port 1/01 RX Util Max": "semi-dark-red"
          },
          "bars": true,
          "dashLength": 10,
          "dashes": false,
          "datasource": "$data_source",
          "description": "",
          "fieldConfig": {
            "defaults": {},
            "overrides": []
          },
          "fill": 1,
          "fillGradient": 0,
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 0,
            "y": 36
          },
          "hiddenSeries": false,
          "id": 234,
          "interval": "[[polling_interval]]s",
          "legend": {
            "alignAsTable": true,
            "avg": true,
            "current": false,
            "max": true,
            "min": false,
            "rightSide": true,
            "show": true,
            "sort": "max",
            "sortDesc": true,
            "total": false,
            "values": true
          },
          "lines": false,
          "linewidth": 1,
          "links": [],
          "maxPerRow": 2,
          "nullPointMode": "connected",
          "options": {
            "alertThreshold": true
          },
          "percentage": false,
          "pluginVersion": "7.5.7",
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "repeat": "server_port",
          "repeatDirection": "v",
          "scopedVars": {
            "server_port": {
              "selected": true,
              "text": "1/05",
              "value": "1/05"
            }
          },
          "seriesOverrides": [
            {
              "alias": "/PAUSE/",
              "bars": false,
              "fill": 0,
              "lines": true,
              "points": true,
              "yaxis": 2
            },
            {
              "alias": "/Max/",
              "bars": false,
              "fill": 0,
              "lines": true
            }
          ],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "alias": "$tag_port $col from $tag_peer",
              "groupBy": [
                {
                  "params": [
                    "$__interval"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "vif_name"
                  ],
                  "type": "tag"
                },
                {
                  "params": [
                    "linear"
                  ],
                  "type": "fill"
                }
              ],
              "hide": false,
              "measurement": "VnicStats",
              "orderByTime": "ASC",
              "policy": "default",
              "query": "SELECT mean(\"bytes_rx_delta\")  / [[polling_interval]]*8 AS \"RX\" FROM \"$db\".\"$rp\".\"FIServerPortStats\" WHERE (\"port\" =~ /^$server_port$/ and fi_id='A') AND $timeFilter GROUP BY time($__interval), \"port\",peer fill(linear)",
              "rawQuery": true,
              "refId": "A",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "bytes_rx_delta"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "mean"
                  },
                  {
                    "params": [
                      " / [[polling_interval]]*8"
                    ],
                    "type": "math"
                  },
                  {
                    "params": [
                      "RX"
                    ],
                    "type": "alias"
                  }
                ]
              ],
              "tags": [
                {
                  "key": "service_profile",
                  "operator": "=~",
                  "value": "/^$service_profile$/"
                },
                {
                  "condition": "AND",
                  "key": "peer_port",
                  "operator": "=~",
                  "value": "/^$bp_port$/"
                },
                {
                  "condition": "AND",
                  "key": "vif_name",
                  "operator": "=~",
                  "value": "/^$vif$/"
                }
              ]
            },
            {
              "alias": "$tag_port $col",
              "groupBy": [
                {
                  "params": [
                    "$__interval"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "bp_port"
                  ],
                  "type": "tag"
                },
                {
                  "params": [
                    "linear"
                  ],
                  "type": "fill"
                }
              ],
              "hide": false,
              "measurement": "BackplanePortStats",
              "orderByTime": "ASC",
              "policy": "default",
              "query": "SELECT last(\"oper_speed\")  *1000000000 AS \"RX Util Max\" FROM \"$db\".\"$rp\".\"FIServerPortStats\" WHERE (\"port\" =~ /^$server_port$/ and fi_id='A') AND $timeFilter GROUP BY time($__interval), \"port\" fill(linear)",
              "rawQuery": true,
              "refId": "C",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "speed"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "mean"
                  },
                  {
                    "params": [
                      " *1000000000"
                    ],
                    "type": "math"
                  },
                  {
                    "params": [
                      "TX Util Max"
                    ],
                    "type": "alias"
                  }
                ]
              ],
              "tags": [
                {
                  "key": "peer_service_profile",
                  "operator": "=~",
                  "value": "/^$service_profile$/"
                },
                {
                  "condition": "AND",
                  "key": "bp_port",
                  "operator": "=~",
                  "value": "/^$bp_port$/"
                }
              ]
            },
            {
              "alias": "$tag_port $col",
              "groupBy": [
                {
                  "params": [
                    "$__interval"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "bp_port"
                  ],
                  "type": "tag"
                },
                {
                  "params": [
                    "linear"
                  ],
                  "type": "fill"
                }
              ],
              "hide": false,
              "measurement": "BackplanePortStats",
              "orderByTime": "ASC",
              "policy": "default",
              "query": "SELECT non_negative_difference(mean(\"pause_tx\"))/elapsed(mean(\"pause_tx\"),1s) AS \"TX PAUSE\" FROM \"$db\".\"$rp\".\"FIServerPortStats\" WHERE \"domain\" =~ /^$domain$/ and \"port\" =~ /^$server_port$/ and fi_id='A' AND $timeFilter GROUP BY time($__interval),domain,fi_id,port fill(linear)",
              "rawQuery": true,
              "refId": "F",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "pause_rx"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "mean"
                  },
                  {
                    "params": [],
                    "type": "difference"
                  },
                  {
                    "params": [
                      " / [[polling_interval]]"
                    ],
                    "type": "math"
                  },
                  {
                    "params": [
                      "RX PAUSE"
                    ],
                    "type": "alias"
                  }
                ]
              ],
              "tags": [
                {
                  "key": "peer_service_profile",
                  "operator": "=~",
                  "value": "/^$service_profile$/"
                },
                {
                  "condition": "AND",
                  "key": "bp_port",
                  "operator": "=~",
                  "value": "/^$bp_port$/"
                }
              ]
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "FI-A Server Port - RX Traffic vs TX PAUSE - $server_port ",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "format": "bps",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": "0",
              "show": true
            },
            {
              "format": "short",
              "label": "No. of PAUSE frames",
              "logBase": 1,
              "max": null,
              "min": "0",
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {
            "Backplane port 1/21 RX PAUSE": "dark-orange",
            "Backplane port 1/25 RX PAUSE": "dark-orange",
            "Backplane port 2/13 TX Util Max": "semi-dark-red",
            "Backplane port 2/25 RX PAUSE": "dark-orange",
            "Server port 1/01 RX Util Max": "semi-dark-red"
          },
          "bars": true,
          "dashLength": 10,
          "dashes": false,
          "datasource": "$data_source",
          "description": "",
          "fieldConfig": {
            "defaults": {},
            "overrides": []
          },
          "fill": 1,
          "fillGradient": 0,
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 12,
            "y": 36
          },
          "hiddenSeries": false,
          "id": 241,
          "interval": "[[polling_interval]]s",
          "legend": {
            "alignAsTable": true,
            "avg": true,
            "current": false,
            "max": true,
            "min": false,
            "rightSide": true,
            "show": true,
            "sort": "max",
            "sortDesc": true,
            "total": false,
            "values": true
          },
          "lines": false,
          "linewidth": 1,
          "links": [],
          "maxPerRow": 2,
          "nullPointMode": "connected",
          "options": {
            "alertThreshold": true
          },
          "percentage": false,
          "pluginVersion": "7.5.7",
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "repeat": "server_port",
          "repeatDirection": "v",
          "scopedVars": {
            "server_port": {
              "selected": true,
              "text": "1/05",
              "value": "1/05"
            }
          },
          "seriesOverrides": [
            {
              "alias": "/PAUSE/",
              "bars": false,
              "fill": 0,
              "lines": true,
              "points": true,
              "yaxis": 2
            },
            {
              "alias": "/Max/",
              "bars": false,
              "fill": 0,
              "lines": true
            }
          ],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "alias": "$tag_port $col from $tag_peer",
              "groupBy": [
                {
                  "params": [
                    "$__interval"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "vif_name"
                  ],
                  "type": "tag"
                },
                {
                  "params": [
                    "linear"
                  ],
                  "type": "fill"
                }
              ],
              "hide": false,
              "measurement": "VnicStats",
              "orderByTime": "ASC",
              "policy": "default",
              "query": "SELECT mean(\"bytes_rx_delta\")  / [[polling_interval]]*8 AS \"RX\" FROM \"$db\".\"$rp\".\"FIServerPortStats\" WHERE (\"port\" =~ /^$server_port$/ and fi_id='B') AND $timeFilter GROUP BY time($__interval), \"port\",peer fill(linear)",
              "rawQuery": true,
              "refId": "A",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "bytes_rx_delta"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "mean"
                  },
                  {
                    "params": [
                      " / [[polling_interval]]*8"
                    ],
                    "type": "math"
                  },
                  {
                    "params": [
                      "RX"
                    ],
                    "type": "alias"
                  }
                ]
              ],
              "tags": [
                {
                  "key": "service_profile",
                  "operator": "=~",
                  "value": "/^$service_profile$/"
                },
                {
                  "condition": "AND",
                  "key": "peer_port",
                  "operator": "=~",
                  "value": "/^$bp_port$/"
                },
                {
                  "condition": "AND",
                  "key": "vif_name",
                  "operator": "=~",
                  "value": "/^$vif$/"
                }
              ]
            },
            {
              "alias": "$tag_port $col",
              "groupBy": [
                {
                  "params": [
                    "$__interval"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "bp_port"
                  ],
                  "type": "tag"
                },
                {
                  "params": [
                    "linear"
                  ],
                  "type": "fill"
                }
              ],
              "hide": false,
              "measurement": "BackplanePortStats",
              "orderByTime": "ASC",
              "policy": "default",
              "query": "SELECT last(\"oper_speed\")  *1000000000 AS \"RX Util Max\" FROM \"$db\".\"$rp\".\"FIServerPortStats\" WHERE (\"port\" =~ /^$server_port$/ and fi_id='B') AND $timeFilter GROUP BY time($__interval), \"port\" fill(linear)",
              "rawQuery": true,
              "refId": "C",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "speed"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "mean"
                  },
                  {
                    "params": [
                      " *1000000000"
                    ],
                    "type": "math"
                  },
                  {
                    "params": [
                      "TX Util Max"
                    ],
                    "type": "alias"
                  }
                ]
              ],
              "tags": [
                {
                  "key": "peer_service_profile",
                  "operator": "=~",
                  "value": "/^$service_profile$/"
                },
                {
                  "condition": "AND",
                  "key": "bp_port",
                  "operator": "=~",
                  "value": "/^$bp_port$/"
                }
              ]
            },
            {
              "alias": "$tag_port $col",
              "groupBy": [
                {
                  "params": [
                    "$__interval"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "bp_port"
                  ],
                  "type": "tag"
                },
                {
                  "params": [
                    "linear"
                  ],
                  "type": "fill"
                }
              ],
              "hide": false,
              "measurement": "BackplanePortStats",
              "orderByTime": "ASC",
              "policy": "default",
              "query": "SELECT non_negative_difference(mean(\"pause_tx\"))/elapsed(mean(\"pause_tx\"),1s) AS \"TX PAUSE\" FROM \"$db\".\"$rp\".\"FIServerPortStats\" WHERE \"domain\" =~ /^$domain$/ and \"port\" =~ /^$server_port$/ and fi_id='B' AND $timeFilter GROUP BY time($__interval),domain,fi_id,port fill(linear)",
              "rawQuery": true,
              "refId": "F",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "pause_rx"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "mean"
                  },
                  {
                    "params": [],
                    "type": "difference"
                  },
                  {
                    "params": [
                      " / [[polling_interval]]"
                    ],
                    "type": "math"
                  },
                  {
                    "params": [
                      "RX PAUSE"
                    ],
                    "type": "alias"
                  }
                ]
              ],
              "tags": [
                {
                  "key": "peer_service_profile",
                  "operator": "=~",
                  "value": "/^$service_profile$/"
                },
                {
                  "condition": "AND",
                  "key": "bp_port",
                  "operator": "=~",
                  "value": "/^$bp_port$/"
                }
              ]
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "FI-B Server Port - RX Traffic vs TX PAUSE - $server_port",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "format": "bps",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": "0",
              "show": true
            },
            {
              "format": "short",
              "label": "No. of PAUSE frames",
              "logBase": 1,
              "max": null,
              "min": "0",
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        }
      ],
      "title": "FI Server Port - Egress Traffic Congestion and Utilization",
      "type": "row"
    },
    {
      "collapsed": true,
      "datasource": null,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 40
      },
      "id": 186,
      "panels": [
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "datasource": "$data_source",
          "decimals": 2,
          "description": "",
          "fieldConfig": {
            "defaults": {},
            "overrides": []
          },
          "fill": 3,
          "fillGradient": 5,
          "gridPos": {
            "h": 7,
            "w": 12,
            "x": 0,
            "y": 15
          },
          "hiddenSeries": false,
          "id": 13,
          "interval": "[[polling_interval]]s",
          "legend": {
            "alignAsTable": true,
            "avg": true,
            "current": false,
            "max": true,
            "min": false,
            "rightSide": true,
            "show": true,
            "sort": "max",
            "sortDesc": true,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "options": {
            "alertThreshold": true
          },
          "percentage": false,
          "pluginVersion": "7.5.7",
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": true,
          "steppedLine": false,
          "targets": [
            {
              "alias": "$tag_port $col",
              "groupBy": [
                {
                  "params": [
                    "$__interval"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "port"
                  ],
                  "type": "tag"
                },
                {
                  "params": [
                    "linear"
                  ],
                  "type": "fill"
                }
              ],
              "hide": false,
              "measurement": "FIUplinkPortStats",
              "orderByTime": "ASC",
              "policy": "default",
              "query": "SELECT max(\"bytes_rx_delta\") *8 /[[polling_interval]] AS \"RX\" FROM \"$db\".\"$rp\".\"FIUplinkPortStats\" WHERE (\"domain\" =~ /^$domain$/ AND \"fi_id\" =~ /^$fi_id$/ AND \"channel\" != '' and oper_state = 'up') AND $timeFilter GROUP BY time($__interval), \"port\" fill(linear)",
              "rawQuery": true,
              "refId": "A",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "bytes_rx_delta"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "mean"
                  },
                  {
                    "params": [
                      "*8 /[[polling_interval]]"
                    ],
                    "type": "math"
                  },
                  {
                    "params": [
                      "RX"
                    ],
                    "type": "alias"
                  }
                ]
              ],
              "tags": [
                {
                  "key": "domain",
                  "operator": "=~",
                  "value": "/^$domain$/"
                },
                {
                  "condition": "AND",
                  "key": "fi_id",
                  "operator": "=~",
                  "value": "/^$fi_id$/"
                },
                {
                  "condition": "AND",
                  "key": "channel",
                  "operator": "=~",
                  "value": "/^$uplink$/"
                }
              ]
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "$domain - FI-$fi_id - Uplink  - RX Utilization",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "decimals": 2,
              "format": "bps",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": "0",
              "show": true
            },
            {
              "decimals": 2,
              "format": "percentunit",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": "0",
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "datasource": "$data_source",
          "description": "",
          "fieldConfig": {
            "defaults": {},
            "overrides": []
          },
          "fill": 3,
          "fillGradient": 5,
          "gridPos": {
            "h": 7,
            "w": 12,
            "x": 12,
            "y": 15
          },
          "hiddenSeries": false,
          "id": 45,
          "interval": "[[polling_interval]]s",
          "legend": {
            "alignAsTable": true,
            "avg": true,
            "current": false,
            "max": true,
            "min": false,
            "rightSide": true,
            "show": true,
            "sort": "max",
            "sortDesc": true,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "options": {
            "alertThreshold": true
          },
          "percentage": false,
          "pluginVersion": "7.5.7",
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": true,
          "steppedLine": false,
          "targets": [
            {
              "alias": "$tag_port $col",
              "groupBy": [
                {
                  "params": [
                    "$__interval"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "port"
                  ],
                  "type": "tag"
                },
                {
                  "params": [
                    "linear"
                  ],
                  "type": "fill"
                }
              ],
              "measurement": "FIUplinkPortStats",
              "orderByTime": "ASC",
              "policy": "default",
              "query": "SELECT max(\"bytes_tx_delta\") *8 /[[polling_interval]] AS \"TX\" FROM \"$db\".\"$rp\".\"FIUplinkPortStats\" WHERE (\"domain\" =~ /^$domain$/ AND \"fi_id\" =~ /^$fi_id$/ AND \"channel\" != '' and oper_state = 'up') AND $timeFilter GROUP BY time($__interval), \"port\" fill(linear)",
              "rawQuery": true,
              "refId": "B",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "bytes_tx_delta"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "mean"
                  },
                  {
                    "params": [
                      "*8 /[[polling_interval]]"
                    ],
                    "type": "math"
                  },
                  {
                    "params": [
                      "TX"
                    ],
                    "type": "alias"
                  }
                ]
              ],
              "tags": [
                {
                  "key": "domain",
                  "operator": "=~",
                  "value": "/^$domain$/"
                },
                {
                  "condition": "AND",
                  "key": "fi_id",
                  "operator": "=~",
                  "value": "/^$fi_id$/"
                },
                {
                  "condition": "AND",
                  "key": "channel",
                  "operator": "=~",
                  "value": "/^$uplink$/"
                }
              ]
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "$domain - FI-$fi_id - Uplink  - TX Utilization",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "format": "bps",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": "0",
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        }
      ],
      "title": "Reference",
      "type": "row"
    }
  ],
  "refresh": false,
  "schemaVersion": 27,
  "style": "dark",
  "tags": [
    "cisco",
    "UCS"
  ],
  "templating": {
    "list": [
      {
        "description": null,
        "error": null,
        "hide": 2,
        "label": "Database",
        "name": "db",
        "query": "telegraf",
        "skipUrlSync": false,
        "type": "constant"
      },
      {
        "description": null,
        "error": null,
        "hide": 2,
        "label": "Retention Policy",
        "name": "rp",
        "query": "autogen",
        "skipUrlSync": false,
        "type": "constant"
      },
      {
        "current": {
          "selected": false,
          "text": "InfluxDB",
          "value": "InfluxDB"
        },
        "description": null,
        "error": null,
        "hide": 0,
        "includeAll": false,
        "label": "Data Source",
        "multi": false,
        "name": "data_source",
        "options": [],
        "query": "influxdb",
        "queryValue": "",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "type": "datasource"
      },
      {
        "allValue": null,
        "current": {
          "selected": true,
          "text": [
            "All"
          ],
          "value": [
            "$__all"
          ]
        },
        "datasource": "${data_source}",
        "definition": "show tag values from \"$db\".\"$rp\".\"Servers\" with key=location where $timeFilter",
        "description": null,
        "error": null,
        "hide": 0,
        "includeAll": true,
        "label": "Location",
        "multi": true,
        "name": "location",
        "options": [],
        "query": "show tag values from \"$db\".\"$rp\".\"Servers\" with key=location where $timeFilter",
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {
          "selected": true,
          "text": [
            "All"
          ],
          "value": [
            "$__all"
          ]
        },
        "datasource": "$data_source",
        "definition": "show tag values from \"$db\".\"$rp\".\"FIEnvStats\" with key=domain where location =~ /$location/ and $timeFilter",
        "description": null,
        "error": null,
        "hide": 0,
        "includeAll": true,
        "label": "UCS Domain",
        "multi": true,
        "name": "domain",
        "options": [],
        "query": "show tag values from \"$db\".\"$rp\".\"FIEnvStats\" with key=domain where location =~ /$location/ and $timeFilter",
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {
          "selected": false,
          "text": "A",
          "value": "A"
        },
        "description": null,
        "error": null,
        "hide": 0,
        "includeAll": false,
        "label": "FI ID",
        "multi": false,
        "name": "fi_id",
        "options": [
          {
            "selected": true,
            "text": "A",
            "value": "A"
          },
          {
            "selected": false,
            "text": "B",
            "value": "B"
          }
        ],
        "query": "A,B",
        "skipUrlSync": false,
        "type": "custom"
      },
      {
        "allValue": null,
        "current": {
          "selected": true,
          "text": [
            "All"
          ],
          "value": [
            "$__all"
          ]
        },
        "datasource": "$data_source",
        "definition": "show tag values from \"$db\".\"$rp\".\"VnicStats\" with key=pinned_uplink where domain =~ /$domain/ and fi_id =~ /$fi_id/ and  $timeFilter",
        "description": null,
        "error": null,
        "hide": 0,
        "includeAll": true,
        "label": "Uplink Port",
        "multi": true,
        "name": "uplink",
        "options": [],
        "query": "show tag values from \"$db\".\"$rp\".\"VnicStats\" with key=pinned_uplink where domain =~ /$domain/ and fi_id =~ /$fi_id/ and  $timeFilter",
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {
          "selected": false,
          "text": "All",
          "value": "$__all"
        },
        "datasource": "${data_source}",
        "definition": "show tag values from \"$db\".\"$rp\".\"FIServerPortStats\" with key=port where domain =~ /$domain/ and fi_id =~ /$fi_id/ and channel != '' and $timeFilter",
        "description": null,
        "error": null,
        "hide": 0,
        "includeAll": true,
        "label": "Server Port",
        "multi": true,
        "name": "server_port",
        "options": [],
        "query": "show tag values from \"$db\".\"$rp\".\"FIServerPortStats\" with key=port where domain =~ /$domain/ and fi_id =~ /$fi_id/ and channel != '' and $timeFilter",
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {
          "selected": false,
          "text": "All",
          "value": "$__all"
        },
        "datasource": "$data_source",
        "definition": "show tag values from \"$db\".\"$rp\".\"FIServerPortStats\" with key=peer where domain =~ /$domain/ and fi_id =~ /$fi_id/ and port =~ /$server_port/ and  $timeFilter",
        "description": null,
        "error": null,
        "hide": 0,
        "includeAll": true,
        "label": "Chassis",
        "multi": true,
        "name": "chassis",
        "options": [],
        "query": "show tag values from \"$db\".\"$rp\".\"FIServerPortStats\" with key=peer where domain =~ /$domain/ and fi_id =~ /$fi_id/ and port =~ /$server_port/ and  $timeFilter",
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {
          "selected": true,
          "text": [
            "All"
          ],
          "value": [
            "$__all"
          ]
        },
        "datasource": "$data_source",
        "definition": "show tag values from \"$db\".\"$rp\".\"VnicStats\" with key=peer_port where domain =~ /$domain/ and fi_id =~ /$fi_id/ and pinned_uplink =~ /$uplink/ and chassis =~ /$chassis/ and  $timeFilter",
        "description": null,
        "error": null,
        "hide": 0,
        "includeAll": true,
        "label": "Backplane Port",
        "multi": true,
        "name": "bp_port",
        "options": [],
        "query": "show tag values from \"$db\".\"$rp\".\"VnicStats\" with key=peer_port where domain =~ /$domain/ and fi_id =~ /$fi_id/ and pinned_uplink =~ /$uplink/ and chassis =~ /$chassis/ and  $timeFilter",
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "description": null,
        "error": null,
        "hide": 2,
        "label": null,
        "name": "polling_interval",
        "query": "60",
        "skipUrlSync": false,
        "type": "constant"
      },
      {
        "allValue": null,
        "current": {
          "isNone": true,
          "selected": false,
          "text": "None",
          "value": ""
        },
        "datasource": "${data_source}",
        "definition": "select last(utm_collector_ver) from \"$db\".\"$rp\".\"FIEnvStats\"",
        "description": null,
        "error": null,
        "hide": 2,
        "includeAll": false,
        "label": null,
        "multi": false,
        "name": "utm_collector_ver",
        "options": [],
        "query": "select last(utm_collector_ver) from \"$db\".\"$rp\".\"FIEnvStats\"",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      }
    ]
  },
  "time": {
    "from": "now-6h",
    "to": "now"
  },
  "timepicker": {
    "refresh_intervals": [
      "10s",
      "30s",
      "1m",
      "5m",
      "15m",
      "30m",
      "1h",
      "2h",
      "1d"
    ],
    "time_options": [
      "5m",
      "15m",
      "1h",
      "6h",
      "12h",
      "24h",
      "2d",
      "7d",
      "30d"
    ]
  },
  "timezone": "browser",
  "title": "Congestion Monitoring",
  "uid": "Sve32sDZk",
  "version": 61
}